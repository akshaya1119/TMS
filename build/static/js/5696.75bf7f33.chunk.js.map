{"version":3,"file":"static/js/5696.75bf7f33.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Tickets/EditTicket.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Row, Col, Button, Form, Modal } from 'react-bootstrap';\r\nimport './EditTicket.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faPaperclip, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { useUser } from './../../context/UserContext';\r\nimport ReactQuill from 'react-quill';  // Import ReactQuill\r\nimport 'react-quill/dist/quill.snow.css';  // Import Quill styles\r\nimport { useSecurity } from './../../context/Security';\r\n\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst ticketapi = process.env.REACT_APP_API_TICKET;\r\nconst TicketTypeapi = process.env.REACT_APP_API_TICKETTYPE;\r\nconst Commentapi = process.env.REACT_APP_API_TICKETFLOW_BY_COMMENTS;\r\nconst TicketFlowapi = process.env.REACT_APP_API_TICKETFLOW;\r\nconst markcompleted = process.env.REACT_APP_API_TICKET_COMPLETED;\r\n\r\nconst toolbarOptions = [\r\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n  ['blockquote', 'code-block'],\r\n\r\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n  [{ 'script': 'sub' }, { 'script': 'super' }],     // superscript/subscript\r\n  [{ 'indent': '-1' }, { 'indent': '+1' }],         // outdent/indent\r\n  [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n  [{ 'font': [] }],\r\n  [{ 'align': [] }],\r\n\r\n  ['clean'],                                        // remove formatting button\r\n]\r\n\r\nconst EditTicket = () => {\r\n  const { user } = useUser();\r\n  const { ticketId } = useParams();\r\n  const { decrypt } = useSecurity();\r\n  const decryptid = decrypt(ticketId);\r\n  const [formData, setFormData] = useState({\r\n    ticketId: '',\r\n    email: '',\r\n    priority: '',\r\n    title: '',\r\n    department: '',\r\n    ticketType: '',\r\n    status: '',\r\n    project: '',\r\n    dueDate: '',\r\n    description: '',\r\n    assigneeEmail: '',\r\n    userAssigneeEmail: '',\r\n    userTicketType: '',\r\n    userStatus: '',\r\n    userPriority: '',\r\n    userComment: '',\r\n  });\r\n  const [showUserComment, setShowUserComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [oldDetails, setOldDetails] = useState(null);\r\n  const [assignees, setAssignees] = useState([]);\r\n  const [ticketTypes, setTicketTypes] = useState([]);\r\n  const [currentDateTime, setCurrentDateTime] = useState(null);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [showAttachmentModal, setShowAttachmentModal] = useState(false);\r\n  const [isImageAttachment, setIsImageAttachment] = useState(false);\r\n  const [attachedFile, setAttachedFile] = useState(null);\r\n  const [hovered, setHovered] = useState(false);\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    async function fetchTicketDetails() {\r\n      try {\r\n        const [ticketResponse, commentsResponse, assigneesResponse, ticketTypesResponse] = await Promise.all([\r\n          axios.get(`${ticketapi}/${decryptid}`),\r\n          axios.get(`${Commentapi}/${decryptid}`).catch(() => ({ data: [] })),\r\n          axios.get(userapi),\r\n          axios.get(TicketTypeapi),\r\n        ]);\r\n        setFormData(ticketResponse.data);\r\n        console.log(ticketResponse.data);\r\n        setOldDetails(ticketResponse.data);\r\n        setComments(commentsResponse.data);\r\n        setAssignees(assigneesResponse.data);\r\n        setTicketTypes(ticketTypesResponse.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Ticket, Comments, Assignees, and Ticket Types:', error);\r\n        console.log('Error details:', error.response); // Log the entire error object\r\n        console.log('Status code:', error.response.status);\r\n        setMessage('Error fetching ticket, comments, assignees, and ticket types. Please try again.');\r\n      }\r\n    }\r\n\r\n    fetchTicketDetails();\r\n    setCurrentDateTime(new Date().toLocaleString());\r\n  }, [decryptid]);\r\n\r\n  // Function to sort comments by timestamp in descending order (newest first) \r\n  const sortCommentsByTimestampDesc = () => {\r\n    const sortedComments = [...comments].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n    setComments(sortedComments);\r\n  };\r\n\r\n  // Function to sort comments by timestamp in ascending order (oldest first) \r\n  const sortCommentsByTimestampAsc = () => {\r\n    const sortedComments = [...comments].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n    setComments(sortedComments);\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'file' ? e.target.files : value,\r\n    }));\r\n  };\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    // Update the attachedFile state when a file is selected\r\n    setAttachedFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleToggleUserComment = () => {\r\n    if (comments.length > 0) {\r\n      const lastComment = comments[comments.length - 1]; \r\n      console.log(\"Last Comment:\", lastComment);\r\n      setFormData({\r\n        ...formData, \r\n        userAssigneeEmail: lastComment.newAssigneeEmail,\r\n        userTicketType: lastComment.newTicketType, \r\n        userStatus: lastComment.newStatus,\r\n        userPriority: lastComment.newPriority,\r\n        userTicketTypeId: lastComment.newTicketTypeId,\r\n      });\r\n      console.log(\"Updated Form Data:\", {\r\n        ...formData,\r\n        userAssigneeEmail: lastComment.newAssigneeEmail,\r\n        userTicketType: lastComment.newTicketType, \r\n        userStatus: lastComment.newStatus,\r\n        userPriority: lastComment.newPriority,\r\n      }); // Add this logging statement\r\n    } else {    \r\n      // If there are no comments, set the initial state of the form fields with the details of the ticket\r\n      setFormData({\r\n        ...formData,\r\n        userAssigneeEmail: formData.assigneeEmail, \r\n        userTicketType: formData.ticketType,\r\n        userStatus: formData.status, \r\n        userPriority: formData.priority,\r\n        userTicketTypeId: formData.ticketTypeId,\r\n      });\r\n      console.log(\"Updated FormData:\", formData); // Add this logging statement\r\n    }\r\n    setShowUserComment(!showUserComment);\r\n  };\r\n  \r\n  \r\n\r\n\r\n\r\n  const handleUserCommentChange = (value) => {\r\n    setNewComment(value);\r\n  };\r\n\r\n  const handleUserSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // Check if the current user is the creator, assignee, or reassignee\r\n    const isCreator = user.email === formData.email;\r\n    const isAssignee = user.email === formData.assigneeEmail;\r\n    const isReassignee = user.email === formData.userAssigneeEmail;\r\n\r\n    if (!isCreator && !isAssignee && !isReassignee) {\r\n      setMessage('You are not authorized to comment on this ticket.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const params = {\r\n        firstName: user.firstName,\r\n        prev: formData.priority,\r\n        pre: formData.status,\r\n        newp: formData.userPriority,\r\n        pret: formData.userTicketTypeId,\r\n        newt: formData.userTicketTypeId,\r\n        newa: formData.userAssigneeEmail,\r\n        news: formData.userStatus,\r\n        prep: formData.priority,\r\n        ticketid: formData.ticketId,\r\n        timestamp: new Date().toISOString(),\r\n        comment: newComment,\r\n      };\r\n\r\n      const url = `${TicketFlowapi}?${new URLSearchParams(params).toString()}`;\r\n\r\n      let bodyFormData = new FormData();\r\n\r\n      if (attachedFile) {\r\n        // Append the file to the FormData\r\n        bodyFormData.append('attachment', attachedFile, attachedFile.name);\r\n      }\r\n\r\n      // Log FormData and file details to the console\r\n      console.log('FormData:', bodyFormData);\r\n      console.log('File uploaded:', attachedFile);\r\n\r\n      const response = await axios.post(url, bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      console.log('Response:', response.data);\r\n\r\n      setComments([...comments, response.data]);\r\n      setNewComment('');\r\n      setMessage('Comment submitted successfully!');\r\n      // Update old details after successful comment submission\r\n      setOldDetails(formData);\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error);\r\n      console.log('Error details:', error.response); // Log the entire error object\r\n      console.log('Status code:', error.response.status);\r\n      setMessage('Error submitting comment. Please try again.');\r\n    }\r\n  };\r\n\r\n\r\n\r\n  const handleShowAttachmentModal = () => {\r\n    if (\r\n      formData.attachment.toLowerCase().endsWith('.png') ||\r\n      formData.attachment.toLowerCase().endsWith('.jpg') ||\r\n      formData.attachment.toLowerCase().endsWith('.jpeg') ||\r\n      formData.attachment.toLowerCase().endsWith('.gif') ||\r\n      formData.attachment.toLowerCase().endsWith('.bmp')\r\n    ) {\r\n      setIsImageAttachment(true);\r\n\r\n      // Show the modal\r\n      setShowAttachmentModal(true);\r\n    } else {\r\n      window.open(`${baseapi}/${formData.attachment.replace('wwwroot/', '')}`, '_blank');\r\n    }\r\n  };\r\n\r\n  const handleCloseAttachmentModal = () => {\r\n    setShowAttachmentModal(false);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    setHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHovered(false);\r\n  };\r\n\r\n  const markAsCompleted = async () => {\r\n    try {\r\n      // Send a request to update the ticket status to \"Completed\"\r\n      const response = await axios.put(`${markcompleted}/${decryptid}`, {\r\n        status: 'Completed',\r\n      });\r\n\r\n      console.log('Response:', response);\r\n\r\n      // Check if the update was successful\r\n      if (response.status === 200 || response.status === 204) {\r\n        // Update local state to reflect the new status\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          status: 'Completed',\r\n        }));\r\n        setMessage('Ticket marked as completed successfully!');\r\n      } else {\r\n        setMessage('Error marking ticket as completed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error marking ticket as completed:', error);\r\n      setMessage('Error marking ticket as completed.');\r\n    }\r\n  };\r\nconsole.log(formData)\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className='d-flex justify-content-between '>\r\n        <h4>Ticket Section</h4>\r\n        {user.email === formData.email && (\r\n          <Button onClick={markAsCompleted} disabled={formData.status === 'Completed'} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            {hovered ? <FontAwesomeIcon icon={faCheck} /> : ' '}\r\n            {formData.status === 'Completed' ? 'Completed' : 'Mark as Completed'}\r\n\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      <Row>\r\n        <Col>\r\n          <label htmlFor=\"email\" className=\"col-form-label text-end\">\r\n            CreatorID:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              required\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"title\" className=\"col-form-label text-end\">\r\n            Title:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n        <label htmlFor=\"department\" className=\"col-form-label text-end\">\r\n            Department:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"department\"\r\n              name=\"department\"\r\n              value={formData.department}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"project\" className=\"col-form-label text-end\">\r\n            Project:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"project\"\r\n              name=\"project\"\r\n              value={formData.project}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"dueDate\" className=\"col-form-label text-end\">\r\n            Due Date:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              value={formData.dueDate ? formData.dueDate.split('T')[0] : ''}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n\r\n        {/* Attachment Modal */}\r\n        <Modal show={showAttachmentModal} onHide={handleCloseAttachmentModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Attachment</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {/* Check if formData.attachment is defined before processing */}\r\n\r\n            {isImageAttachment && (<img src={`${baseapi}/${formData.attachment.replace('wwwroot/', '')}`} alt=\"Attachment\" className=\"img-fluid\" />)}\r\n\r\n\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseAttachmentModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </Row>\r\n\r\n      <h5 className=\"mt-3 d-flex align-items-center justify-content-between\">\r\n        <div>\r\n          Discussion Forum\r\n          <Button className=\"ms-2 btn-sm\" onClick={sortCommentsByTimestampDesc}>\r\n            Sort by Newest\r\n          </Button>\r\n          <Button className=\"ms-2 btn-sm\" onClick={sortCommentsByTimestampAsc}>\r\n            Sort by Oldest\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Button onClick={toggleCollapse}>\r\n            {collapsed ? <i className=\"fa-solid fa-angles-left\"></i> : <i className=\"fa-solid fa-angles-right\"></i>}\r\n          </Button>\r\n        </div>\r\n\r\n      </h5>\r\n\r\n      {message && (\r\n        <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <Row>\r\n        <Col md={collapsed ? 12 : 9}>\r\n          {/* main data  */}\r\n          <Row>\r\n            <Col md={7}>\r\n              <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <label htmlFor=\"description\" className=\"col-form-label text-end\">\r\n                  Description:\r\n                </label>\r\n                <FontAwesomeIcon icon={faCommentDots} className=\"me-2 text-primary\" onClick={handleToggleUserComment} />\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  rows=\"6\"\r\n                  disabled\r\n                />\r\n\r\n                {/* Show Attachment Button */}\r\n                {formData.attachment && (\r\n                  <Col>\r\n                    <Button className=\"mt-3\" onClick={handleShowAttachmentModal}>\r\n                      <FontAwesomeIcon icon={faPaperclip} className=\"me-2\" />\r\n                      Show Attachment\r\n                    </Button>\r\n                  </Col>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col md={5}>\r\n              <h5 className=\"mb-3\">Ticket Information</h5>\r\n              <Form>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Assignee:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.assigneeEmail} onChange={handleInputChange} name=\"assigneeEmail\" disabled>\r\n                      <option value=\"\">Select Assignee</option>\r\n                      {assignees.map((assignee) => (\r\n                        <option key={assignee.id} value={assignee.email}>\r\n                          {assignee.email}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Ticket Type:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.ticketType} onChange={handleInputChange} name=\"ticketType\" disabled>\r\n                      <option value=\"\">Select Ticket Type</option>\r\n                      {ticketTypes.map((type) => (\r\n                        <option key={type.ticketTypeId} value={type.ticketType}>\r\n                          {type.ticketType}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Status:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.status} onChange={handleInputChange} name=\"status\" disabled>\r\n                      <option value=\"Open\">Open</option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"Unassigned\">Unassigned</option>\r\n                      <option value=\"Completed\">Completed</option>\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Priority:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.priority} onChange={handleInputChange} name=\"priority\" disabled>\r\n                      <option value=\"high\">High</option>\r\n                      <option value=\"medium\">Medium</option>\r\n                      <option value=\"low\">Low</option>\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* my commente */}\r\n\r\n          {showUserComment && (\r\n            <Row>\r\n              <Col md={7}>\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"userComment\" className=\"col-form-label text-end\">\r\n                    Your Comment:\r\n                  </label>\r\n                  <div className=\"mb-3\">\r\n                    {/* Use ReactQuill only for the user's comment */}\r\n                    <ReactQuill\r\n                      value={newComment}\r\n                      onChange={handleUserCommentChange}\r\n                      modules={{ toolbar: toolbarOptions }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label htmlFor=\"attachedFile\">Attach File</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    id=\"attachedFile\"\r\n                    name=\"attachedFile\"\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={5}>\r\n                <Row className=\"mt-3\">\r\n                  <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Assignee:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userAssigneeEmail} onChange={handleInputChange} name=\"userAssigneeEmail\">\r\n                          <option value=\"\">Select Assignee Email</option>\r\n                          {assignees.map((assignee) => (\r\n                            <option key={assignee.id} value={assignee.email}>\r\n                              {assignee.email}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Ticket Type:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userTicketTypeId} onChange={handleInputChange} name=\"userTicketType\">\r\n                          <option value=\"\">Select Ticket Type</option>\r\n                         \r\n                          {ticketTypes.map((type) => (\r\n                            <option key={type.ticketTypeId} value={type.ticketTypeId}>\r\n                              {type.ticketType}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Status:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userStatus} onChange={handleInputChange} name=\"userStatus\">\r\n                          <option value=\"\">Select Status</option>\r\n                          <option value=\"Open\">Open</option>\r\n                          <option value=\"Pending\">Pending</option>\r\n                          <option value=\"Unassigned\">Unassigned</option>\r\n                          <option value=\"Completed\">Completed</option>\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Priority:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userPriority} onChange={handleInputChange} name=\"userPriority\">\r\n                          <option value=\"\">Select Priority</option>\r\n                          <option value=\"high\">High</option>\r\n                          <option value=\"medium\">Medium</option>\r\n                          <option value=\"low\">Low</option>\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n                <Button className=\"mt-3\" onClick={handleUserSubmit}>\r\n                  Submit Your Comment\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {/* comments   */}\r\n          {comments.map((comment, index) => (\r\n            <>\r\n              <Row key={index} className='border p-2 align-items-center'>\r\n                <Col md={7}>\r\n                  <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                    <label htmlFor=\"description\" className=\"col-form-label text-end\">\r\n                      <p>Comment by {comment.firstName} at {new Date(comment.timestamp).toLocaleString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</p>\r\n                    </label>\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <div dangerouslySetInnerHTML={{ __html: comment.comment }} />\r\n                    {/* Use dangerouslySetInnerHTML to render HTML tags */}\r\n                    {comment.attachment && (\r\n                      <div>\r\n                        <strong></strong>\r\n                        <a href={`${baseapi}/${comment.attachment.replace('wwwroot/', '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          {'View Attachment'}\r\n                        </a>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n\r\n\r\n\r\n                </Col>\r\n                <Col md={5}>\r\n                  <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Assignee:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select name=\"assigneeEmail\" disabled>\r\n                          <option value=\"\">{comment.newAssigneeEmail}</option>\r\n\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Ticket Type:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select name=\"ticketType\" disabled>\r\n                          <option value=\"\">{comment.newTicketType}</option>\r\n\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Status:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select name=\"status\" disabled>\r\n                          <option value=\"\">{comment.newStatus}</option>\r\n\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Priority:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select name=\"priority\" disabled>\r\n                          <option value=\"\">{comment.newPriority}</option>\r\n\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </>\r\n          ))}\r\n\r\n\r\n        </Col>\r\n        {!collapsed && (\r\n          <Col md={3} className=\"border-start border-end border-2\">\r\n            {/* Progress Tracker */}\r\n            <div>\r\n              <h5 className=\"mb-3\">Progress Tracker</h5>\r\n              <ul className=\"list-group\">\r\n                {comments.map((comment, index) => (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <strong>{new Date(comment.timestamp).toLocaleString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</strong>\r\n                    <br />\r\n                    {comment.newAssigneeEmail && (\r\n                      <span>\r\n                        Assigned to: {comment.newAssigneeEmail}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTicket;\r\n\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","baseapi","toolbarOptions","EditTicket","user","useUser","ticketId","useParams","decryptid","formData","setFormData","useState","email","priority","title","department","ticketType","status","project","dueDate","description","assigneeEmail","userAssigneeEmail","userTicketType","userStatus","userPriority","userComment","showUserComment","setShowUserComment","comments","setComments","newComment","setNewComment","message","setMessage","oldDetails","setOldDetails","assignees","setAssignees","ticketTypes","setTicketTypes","currentDateTime","setCurrentDateTime","collapsed","setCollapsed","showAttachmentModal","setShowAttachmentModal","isImageAttachment","setIsImageAttachment","attachedFile","setAttachedFile","hovered","setHovered","useEffect","async","ticketResponse","commentsResponse","assigneesResponse","ticketTypesResponse","Promise","all","axios","get","concat","catch","error","response","fetchTicketDetails","Date","toLocaleString","handleInputChange","e","name","value","type","target","prevData","files","handleCloseAttachmentModal","_jsxs","className","children","_jsx","Button","onClick","put","disabled","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","FontAwesomeIcon","icon","faCheck","Row","Col","htmlFor","id","required","onChange","split","Modal","show","onHide","Header","closeButton","Title","Body","src","attachment","alt","Footer","variant","sortCommentsByTimestampDesc","sortedComments","sort","a","b","timestamp","sortCommentsByTimestampAsc","toggleCollapse","includes","role","md","faCommentDots","handleToggleUserComment","length","lastComment","newAssigneeEmail","newTicketType","newStatus","newPriority","userTicketTypeId","newTicketTypeId","ticketTypeId","rows","handleShowAttachmentModal","toLowerCase","endsWith","window","open","faPaperclip","Form","Group","as","Label","column","sm","Select","map","assignee","ReactQuill","modules","toolbar","Control","event","preventDefault","isCreator","isAssignee","isReassignee","params","firstName","prev","pre","newp","pret","newt","newa","news","prep","ticketid","toISOString","comment","url","URLSearchParams","bodyFormData","FormData","append","post","headers","index","_Fragment","year","month","day","hour","minute","dangerouslySetInnerHTML","__html","href","rel"],"sourceRoot":""}
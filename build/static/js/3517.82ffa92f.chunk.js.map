{"version":3,"file":"static/js/3517.82ffa92f.chunk.js","mappings":"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","sources":["views/UserProfile/Profile.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  // MDBBtn,\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  // MDBProgress,\r\n  // MDBProgressBar,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n} from 'mdb-react-ui-kit';\r\nimport { useUser } from './../../context/UserContext';\r\nimport axios from 'axios';\r\nimport $ from 'jquery'; // Import jQuery\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst dashboardapi= process.env.REACT_APP_MY_SERVER;\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst ticketapi =process.env.REACT_APP_API_TICKET;\r\n\r\nconst ProfilePage = () => {\r\n  const {userId} = useParams();\r\n  const counterRef = useRef(null);\r\n  const assignedTicketsCounterRef = useRef(null);\r\n  const resolvedTicketsCounterRef = useRef(null);\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const { user } = useUser();\r\n  const userID = userId? userId : user.userId;\r\n  const [showBtn, setShowBtn] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [assignedTicketsCount, setAssignedTicketsCount] = useState(null);\r\n  const [resolvedTicketsCount, setResolvedTicketsCount] = useState(null);\r\n  \r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      fetch(`${userapi}/${userID}`)\r\n        .then((response) => response.json())\r\n        .then((userData) => {\r\n          console.log('Fetched user details:', userData);\r\n          setUserDetails(userData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user details:', error);\r\n        });\r\n    }\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    if (userDetails?.email) {\r\n      fetchAssignedTicketsCount();\r\n      fetchResolvedTicketsCount();\r\n    }\r\n  }, [userDetails?.email]);\r\n\r\n  useEffect(() => {\r\n    if (assignedTicketsCount !== null) {\r\n      animateCounter(assignedTicketsCounterRef, assignedTicketsCount);\r\n\r\n\r\n    }\r\n  }, [assignedTicketsCount]);\r\n\r\n  useEffect(() => {\r\n    if (resolvedTicketsCount !== null) {\r\n      animateCounter(resolvedTicketsCounterRef, resolvedTicketsCount);\r\n    }\r\n  }, [resolvedTicketsCount]);\r\n\r\n  const animateCounter = (counterRef, targetValue) => {\r\n    let startValue = 0;\r\n    const step = targetValue / 50;\r\n\r\n    const interval = setInterval(() => {\r\n      startValue += step;\r\n      if (startValue >= targetValue) {\r\n        startValue = targetValue;\r\n        clearInterval(interval);\r\n      }\r\n\r\n      $(counterRef.current).find('.counter-value').text(Math.ceil(startValue.toString()));\r\n    }, 40);\r\n  };\r\n\r\n  const fetchAssignedTicketsCount = async () => {\r\n    try {\r\n      const response = await fetch(`${ticketapi}/status-count?id=${userDetails.userId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching assigned tickets count: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const totalAssignedCount = data?.openCount + data.pendingCount + data.selfassignedCount + data.completedCount;\r\n  \r\n\r\n      setAssignedTicketsCount(totalAssignedCount);\r\n      console.log('Assigned Tickets Count:', totalAssignedCount);\r\n    } catch (error) {\r\n      console.error('Error fetching assigned tickets count:', error);\r\n    }\r\n  };\r\n\r\n  const fetchResolvedTicketsCount = async () => {\r\n    try {\r\n      const response = await fetch(`${ticketapi}/status-count?id=${userDetails.userId}`);\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching resolved tickets count: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const totalResolvedCount = data.completedCount; \r\n      setResolvedTicketsCount(totalResolvedCount);\r\n      console.log('Resolved Tickets Count:', totalResolvedCount);\r\n    } catch (error) {\r\n      console.error('Error fetching resolved tickets count:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedImage(file);\r\n    setShowBtn(true);\r\n\r\n    // Generate a URL for the selected image\r\n    const imageUrl = URL.createObjectURL(file);\r\n\r\n    // Set the generated URL as the source for the preview image\r\n    document.getElementById('previewImage').src = imageUrl;\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    if (selectedImage) {\r\n      setLoading(true);\r\n      const formData = new FormData();\r\n      formData.append('image', selectedImage);\r\n      axios\r\n        .post(`${userapi}/upload/${userID}`, formData)\r\n        .then((response) => {\r\n          setUserDetails((prevUserDetails) => ({\r\n            ...prevUserDetails,\r\n            profilePicturePath: response.data.filePath,\r\n          }));\r\n          setShowBtn(false);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error updating profile picture:', error);\r\n        })\r\n        .finally(() => {\r\n          setLoading(false);\r\n          setShowBtn(false);\r\n          // Update assigned and resolved tickets count after successful upload\r\n          fetchAssignedTicketsCount();\r\n          fetchResolvedTicketsCount();\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section style={{ backgroundColor: '#f8f9fa', padding: '20px' }}>\r\n      <MDBContainer className=\"py-5\">\r\n       \r\n\r\n        <MDBRow>\r\n          <MDBCol lg=\"4\">\r\n            <MDBCard className=\"mb-4\">\r\n              <div>\r\n              <MDBCardBody className=\"text-center d-flex flex-column align-items-center position-relative\">\r\n                <div\r\n                  className=\"rounded-circle overflow-hidden position-relative  border border-2 border-primary\"\r\n                  style={{\r\n                    width: '150px',\r\n                    height: '150px',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                >\r\n    <MDBCardImage\r\n    id=\"previewImage\"\r\n      src={userDetails?.profilePicturePath\r\n        ? `${baseapi}/${userDetails.profilePicturePath}?timestamp=${Date.now()}`\r\n        : 'https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp'}\r\n      alt=\"avatar\"\r\n      className=\"w-100 h-100\"\r\n      fluid\r\n    />\r\n  </div>\r\n\r\n  {/* Pen icon for changing the profile picture */}\r\n  <label htmlFor=\"fileInput\" className=\"position-absolute bottom-0 end-0 m-2\">\r\n    <MDBIcon icon=\"pen\" className=\"text-dark\" />\r\n  </label>\r\n\r\n  {/* Input for choosing a file */}\r\n  <input\r\n    type=\"file\"\r\n    id=\"fileInput\"\r\n    className=\"d-none\"\r\n    onChange={handleImageChange}\r\n  />\r\n</MDBCardBody>\r\n\r\n              </div>\r\n              {showBtn && (\r\n                <button className=\"btn btn-sm btn-primary\" onClick={handleUpload} disabled={loading}>\r\n                  {loading ? 'Loading...' : 'Submit'}\r\n                </button>\r\n              )}\r\n            </MDBCard>\r\n\r\n            <MDBCard className=\"mb-4 mb-lg-0\">\r\n              <MDBCardBody className=\"p-0\">\r\n                <MDBListGroup flush=\"true\"\r\n                  classNa\r\n                  me=\"rounded-3\">\r\n                  <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3 fs-5\" ref={assignedTicketsCounterRef} style={{ backgroundColor: '#FA8247' }}>\r\n                    <MDBCardText className='counter-value fw-bold fs-3'>{assignedTicketsCount}</MDBCardText>\r\n\r\n                    <MDBCardText>Total Tickets Assigned</MDBCardText>\r\n                  </MDBListGroupItem>\r\n\r\n                  <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3 fs-5\" ref={resolvedTicketsCounterRef} style={{ backgroundColor: '#83F28F' }}>\r\n                    <MDBCardText className='counter-value fw-bold fs-3'>{resolvedTicketsCount}</MDBCardText>\r\n                    <MDBCardText>Tickets Resolved</MDBCardText>\r\n                  </MDBListGroupItem>\r\n\r\n                </MDBListGroup>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"8\">\r\n            {console.log(\"userDetails:\", userDetails)}\r\n          \r\n            {userDetails ? (\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardBody>\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Full Name</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{`${userDetails.firstName} ${userDetails.lastName}` || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Email</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.email || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Designation</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.designationName || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Department</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.departmentName || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Mobile</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText\r\n                        className=\"text-muted\">{userDetails.mobileNo || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Address</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.address || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            ) : (\r\n              // You can add a loading state or message here  \r\n              <p>Loading...</p>\r\n            )}\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </section>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n"],"names":["userapi","process","ticketapi","ProfilePage","userId","useParams","assignedTicketsCounterRef","useRef","resolvedTicketsCounterRef","userDetails","setUserDetails","useState","user","useUser","userID","showBtn","setShowBtn","selectedImage","setSelectedImage","loading","setLoading","assignedTicketsCount","setAssignedTicketsCount","resolvedTicketsCount","setResolvedTicketsCount","useEffect","fetch","concat","then","response","json","userData","console","log","catch","error","email","fetchAssignedTicketsCount","fetchResolvedTicketsCount","animateCounter","counterRef","targetValue","startValue","step","interval","setInterval","clearInterval","$","current","find","text","Math","ceil","toString","async","ok","Error","status","data","totalAssignedCount","openCount","pendingCount","selfassignedCount","completedCount","totalResolvedCount","_jsx","style","backgroundColor","padding","children","MDBContainer","className","_jsxs","MDBRow","MDBCol","lg","MDBCard","MDBCardBody","width","height","overflow","MDBCardImage","id","src","profilePicturePath","Date","now","alt","fluid","htmlFor","MDBIcon","icon","type","onChange","event","file","target","files","imageUrl","URL","createObjectURL","document","getElementById","onClick","handleUpload","formData","FormData","append","axios","post","prevUserDetails","filePath","finally","disabled","MDBListGroup","flush","classNa","me","MDBListGroupItem","ref","MDBCardText","sm","firstName","lastName","designationName","departmentName","mobileNo","address"],"sourceRoot":""}
{"version":3,"file":"static/js/3263.22bc8cf4.chunk.js","mappings":"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","sources":["../node_modules/react-push-notification/dist/index.js","../node_modules/react-push-notification/dist/notifications/Notifications.js","../node_modules/react-push-notification/dist/notifications/PushNotification.js","../node_modules/react-push-notification/dist/notifications/Storage.js","webpack://@coreui/coreui-free-react-admin-template/./node_modules/react-push-notification/dist/notifications/Notification.css?df72","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/lib/esm/index.js","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/engine.io-client/build/esm/index.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../node_modules/socket.io-client/build/esm/on.js","../node_modules/socket.io-client/build/esm/socket.js","../node_modules/socket.io-client/build/esm/contrib/backo2.js","../node_modules/socket.io-client/build/esm/manager.js","../node_modules/socket.io-client/build/esm/index.js","../node_modules/socket.io-client/build/esm/url.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Notifications = void 0;\nconst Notifications_1 = __importDefault(require(\"./notifications/Notifications\"));\nexports.Notifications = Notifications_1.default;\nconst Storage_1 = __importDefault(require(\"./notifications/Storage\"));\n/**\n* Add a new notification.\n* Must pass an object with the params to the function.\n*  @param {Options} options\n * @property {string} options.title - Title of the push notification.\n * @property {string} [options.subtitle] - Subtitle of the push notification.\n * @property {string} [options.message] - Message of the push notification.\n * @property {function} [options.onClick] - onclick callback. Optional parameter.\n * @property {('darkblue'|'red'|'light')} [options.theme=undefined] - Theme of the push notification.\n * @property {number} [options.duration=3000] - duration of the push notification in ms.\n * @property {string} [options.backgroundTop=undefined] - Background color of the top container of push notification.\n * @property {string} [options.backgroundBottom=undefined] - Background color of the bottom container of push notification.\n * @property {string} [options.colorTop=undefined] - Color of the top text of push notification.\n * @property {string} [options.colorBottom=undefined] - Color of the bottom text of push notification.\n * @property {(string|JSX.Element)} [options.closeButton=\"close\"] - Color of the bottom text of push notification.\n * @property {boolean} [options.native=false] - Uses native browser notifications. Will prompt for user permission if not granted.\n * @property {string} [options.icon] - Native only. Link to image to show in notification.\n * @property {boolean} [options.silent] - Native only. Makes the notification silent.\n * @property {(number|numer[])} [options.vibrate] - Native only. Makes the notification vibrate.\n *\n*/\nconst addNotification = Storage_1.default.addNotification;\nexports.default = addNotification;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst Storage_1 = __importDefault(require(\"./Storage\"));\nrequire(\"./Notification.css\");\nconst PushNotification_1 = __importDefault(require(\"./PushNotification\"));\n/**\n * Notification injector, which renders\n * the push notifications rendered\n * by the addNotifcation({}) function.\n *\n * @param {string} position - Must pass as prop. Sets the position of the push notification.\n * position can me 'top-left', 'top-middle', 'top-right', 'bottom-left', 'bottom-middle', 'bottom-right'.\n * Example <Notifications position='top-middle' />\n *\n */\nclass Notifications extends react_1.default.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            value: [],\n        };\n    }\n    componentDidMount() {\n        Storage_1.default.addListener((v) => this.setState({ value: v }));\n    }\n    render() {\n        const { position } = this.props;\n        const classN = `rpn-notification-holder ${position || 'top-middle'} supertest`;\n        return react_1.default.createElement(\"div\", { className: classN }, this.state.value.map((note, i) => {\n            return react_1.default.createElement(PushNotification_1.default, { key: i, closeNotification: Storage_1.default.popAndPush, onClick: note.onClick, id: note.id, theme: note.theme, title: note.title, subtitle: note.subtitle, closeButton: note.closeButton, message: note.message, styling: note.styling });\n        }));\n    }\n}\n;\nexports.default = Notifications;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = __importDefault(require(\"react\"));\nconst PushNotification = (props) => {\n    const { title, subtitle, message, theme, id, closeNotification, styling, closeButton, onClick } = props;\n    let topStyling = {};\n    let bottomStyling = {};\n    if (styling) {\n        topStyling.backgroundColor = styling.backgroundTop;\n        topStyling.color = styling.colorTop;\n        bottomStyling.backgroundColor = styling.backgroundBottom;\n        bottomStyling.color = styling.colorBottom;\n    }\n    return react_1.default.createElement(\"div\", { className: `rpn-notification-card ${theme}`, onClick: onClick },\n        react_1.default.createElement(\"div\", { className: `rpn-notification-card-top ${theme}`, style: Object.keys(topStyling).length ? topStyling : undefined },\n            react_1.default.createElement(\"span\", null, title),\n            react_1.default.createElement(\"span\", { className: `rpn-notification-card-close ${theme}`, onClick: () => closeNotification(id) }, closeButton || 'close')),\n        react_1.default.createElement(\"div\", { className: `rpn-notification-card-bottom ${theme}`, style: Object.keys(bottomStyling).length ? bottomStyling : undefined },\n            react_1.default.createElement(\"span\", { className: 'subtitle' }, subtitle),\n            react_1.default.createElement(\"span\", { className: 'message' }, message)));\n};\nexports.default = PushNotification;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PushNotification = void 0;\nconst defaultDuration = 3000;\nclass PushNotification {\n    constructor(op) {\n        this.title = op.title;\n        this.subtitle = op.subtitle;\n        this.message = op.message;\n        this.theme = op.theme;\n        this.id = Math.random();\n        this.styling = op.styling;\n        this.closeButton = op.closeButton;\n        this.onClick = op.onClick;\n    }\n}\nexports.PushNotification = PushNotification;\nclass Storage {\n    constructor() {\n        this.Storage = [];\n        this.Listener = () => this.Storage;\n        this.popAndPush = (NotificationId) => {\n            let i = 0;\n            while (i < this.Storage.length) {\n                if (this.Storage[i].id === NotificationId) {\n                    this.Storage.splice(i, 1);\n                }\n                else {\n                    ++i;\n                }\n            }\n            this.Listener(this.Storage);\n        };\n        this.setTimer = (NotificationId, duration) => {\n            setTimeout(() => this.popAndPush(NotificationId), duration);\n        };\n        this.addListener = (listener) => {\n            this.Listener = listener;\n        };\n        this.addNativeNotification = (options) => __awaiter(this, void 0, void 0, function* () {\n            const { title, subtitle, message, duration, icon, vibrate, silent, onClick } = options;\n            if (Notification.permission === 'default' || Notification.permission === 'denied') {\n                yield Notification.requestPermission();\n            }\n            if (Notification.permission === 'granted') {\n                const not = new Notification(title, {\n                    body: message,\n                    data: subtitle,\n                    icon,\n                    vibrate,\n                    silent\n                });\n                not.onclick = onClick || null;\n                setTimeout(not.close.bind(not), duration || defaultDuration);\n            }\n        });\n        this.addWebNotification = (options) => {\n            const { title, subtitle, message, theme, duration, backgroundBottom, backgroundTop, colorBottom, colorTop, closeButton, onClick } = options;\n            const styling = {\n                backgroundTop,\n                backgroundBottom,\n                colorTop,\n                colorBottom\n            };\n            const newNotification = new PushNotification({ title, subtitle, message, theme, styling, closeButton, onClick });\n            this.Storage.push(newNotification);\n            this.setTimer(newNotification.id, duration || defaultDuration);\n            this.Listener(this.Storage);\n        };\n        this.addNotification = (options) => __awaiter(this, void 0, void 0, function* () {\n            const { native } = options;\n            if (native) {\n                return this.addNativeNotification(options);\n            }\n            return this.addWebNotification(options);\n        });\n    }\n}\nexports.default = new Storage();\n","// extracted by mini-css-extract-plugin\nexport default {};","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    // @ts-expect-error\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    // @ts-expect-error\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["__importDefault","this","mod","__esModule","Object","defineProperty","exports","value","Notifications","Notifications_1","require","default","addNotification","react_1","Storage_1","PushNotification_1","Component","constructor","super","arguments","state","componentDidMount","addListener","v","setState","render","position","props","classN","concat","createElement","className","map","note","i","key","closeNotification","popAndPush","onClick","id","theme","title","subtitle","closeButton","message","styling","topStyling","bottomStyling","backgroundColor","backgroundTop","color","colorTop","backgroundBottom","colorBottom","style","keys","length","undefined","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","PushNotification","op","Math","random","Storage","Listener","NotificationId","splice","setTimer","duration","setTimeout","listener","addNativeNotification","options","icon","vibrate","silent","Notification","permission","requestPermission","not","body","data","onclick","close","bind","addWebNotification","newNotification","push","native","_extends","assign","target","source","prototype","hasOwnProperty","call","_objectWithoutPropertiesLoose","excluded","sourceKeys","indexOf","_setPrototypeOf","o","p","setPrototypeOf","__proto__","PACKET_TYPES","create","PACKET_TYPES_REVERSE","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","TransportError","Error","reason","description","context","Transport","writable","query","socket","onError","open","readyState","doOpen","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","prev","seed","num","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","join","empty","hasXHR2","responseType","Request","uri","method","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","decodePayload","encodedPayload","encodedPackets","decodedPacket","encodePayload","count","doWrite","request","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_len2","_key2","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","_this","ackTimeout","timer","_len3","_key3","withError","emitWithAck","_len4","_key4","arg1","arg2","_this2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","_len6","_key6","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"sourceRoot":""}
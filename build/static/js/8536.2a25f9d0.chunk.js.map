{"version":3,"file":"static/js/8536.2a25f9d0.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Users/EditUser.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSecurity } from './../../context/Security';\r\n\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst base = process.env.REACT_APP_BASE_API_URL;\r\nconst departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst designationapi = process.env.REACT_APP_API_DESIGNATION;\r\n\r\n\r\nconst EditUser = () => {\r\n    const [message, setMessage] = useState(null);\r\n    const { userId } = useParams();\r\n    const { decrypt } = useSecurity();\r\n    const decryptid = decrypt(userId);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [Roles, setRoles] = useState([]);\r\n    const [Designation, setDesignation] = useState([]);\r\n    const [formData, setFormData] = useState({\r\n\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        //confirmPassword: '',\r\n        mobileNo: '',\r\n        departmentId: '',\r\n        designationId: '',\r\n        roleId: '',\r\n        address: '',\r\n        dateOfBirth: '',\r\n    });\r\n\r\n    useEffect(() => {\r\n        axios.get(`${userapi}/${decryptid}`)\r\n            .then(res => {\r\n                setFormData(res.data);\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }, [decryptid]);\r\n    useEffect(() => {\r\n        async function fetchDepartments() {\r\n            try {\r\n                const response = await axios.get(departmentapi);\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        }\r\n\r\n        fetchDepartments();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchRoles() {\r\n            try {\r\n                const response = await axios.get(`${base}/Roles`);\r\n                setRoles(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching Roles:', error);\r\n            }\r\n        }\r\n\r\n        fetchRoles();\r\n    }, []);\r\n    useEffect(() => {\r\n        async function fetchDesignation() {\r\n            try {\r\n                const response = await axios.get(designationapi);\r\n                setDesignation(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching Designation:', error);\r\n            }\r\n        }\r\n\r\n        fetchDesignation();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: type === 'file' ? e.target.files : value,\r\n        }));\r\n    };\r\n\r\n    function handleUserSubmit(event) {\r\n        event.preventDefault();\r\n        axios.put(`${userapi}/${decryptid}`, formData)\r\n            .then(res => {\r\n                console.log(res);\r\n                setMessage('User updated successfully!');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <h4 className='mb-3'>Edit the Details of {formData.firstName}</h4>\r\n\r\n            {message && (\r\n                <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            <form onSubmit={handleUserSubmit}>\r\n                {/* Username */}\r\n                <div className=\"row mb-3\">\r\n                    <label htmlFor=\"firstName\" className=\"col-sm-1 col-form-label text-start\">\r\n                        FirstName:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"firstName\"\r\n                            name=\"firstName\"\r\n                            placeholder=\"Enter FirstName\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.firstName}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Lastname */}\r\n                    <label htmlFor=\"lastName\" className=\"col-sm-1 col-form-label text-end\">\r\n                        LastName:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"lastName\"\r\n                            name=\"lastName\"\r\n                            placeholder=\"Enter lastName\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.lastName}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                    {/* Date of Birth */}\r\n                    <label htmlFor=\"dateOfBirth\" className=\"col-sm-1 col-form-label text-end\">\r\n                        DOB:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                            id=\"dateOfBirth\"\r\n                            name=\"dateOfBirth\"\r\n                            placeholder=\"Enter Date Of Birth\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.dateOfBirth}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n                {/* Address */}\r\n                <div className=\"row mb-3\">\r\n                    <label htmlFor=\"address\" className=\"col-sm-1 col-form-label text-end\">\r\n                        Address:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"address\"\r\n                            className=\"form-control\"\r\n                            id=\"address\"\r\n                            name=\"address\"\r\n                            placeholder=\"Enter Address\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.address}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    {/* Mobile Number */}\r\n                    <label htmlFor=\"mobileNo\" className=\"col-sm-1 col-form-label text-start\">\r\n                        MobileNo:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"mobileNo\"\r\n                            name=\"mobileNo\"\r\n                            placeholder=\"Enter Mobile No.\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.mobileNo}\r\n                        />\r\n                    </div>\r\n\r\n                    {/* Email */}\r\n                    <label htmlFor=\"email\" className=\"col-sm-1 col-form-label text-end\">\r\n                        Email:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"email\"\r\n                            name=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.email}\r\n                            disabled\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Password */}\r\n                <div className=\"row mb-3\">\r\n                    {/* <label htmlFor=\"password\" className=\"col-sm-1 col-form-label text-start\">\r\n                        Password:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Enter password\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.password}\r\n                        />\r\n                    </div> */}\r\n\r\n                    {/* Department */}\r\n\r\n\r\n                    <div className=\"row mb-3\">\r\n                    <label htmlFor=\"departmentId\" className=\"col-sm-1 col-form-label text-start\">\r\n                        Department:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            id=\"departmentId\"\r\n                            name=\"departmentId\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.departmentId}\r\n                        >\r\n                            <option value=\"\">Select department</option>\r\n                            {departments.map(dep => (\r\n                                <option key={dep.departmentId} value={dep.departmentId}>{dep.departmentName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    {/* Designation */}\r\n                    <label htmlFor=\"designationId\" className=\"col-sm-1 col-form-label text-start\">\r\n                        Designation:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            id=\"designationId\"\r\n                            name=\"designationId\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.designationId}\r\n                        >\r\n                            <option value=\"\">Select Designation</option>\r\n                            {Designation.map(designation => (\r\n                                <option key={designation.designationId} value={designation.designationId}>{designation.designationName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                    <label htmlFor=\"roleId\" className=\"col-sm-1 col-form-label text-end\">\r\n                        Role:\r\n                    </label>\r\n                    <div className=\"col-sm-3\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            id=\"roleId\"\r\n                            name=\"roleId\"\r\n                            required\r\n                            onChange={handleInputChange}\r\n                            value={formData.roleId}\r\n                        >\r\n                            <option value=\"\">Select Role</option>\r\n                            {Roles.map(role => (\r\n                                <option key={role.roleId} value={role.roleId}>{role.role}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                    {/* Confirm Password\r\n          <label htmlFor=\"confirmPassword\" className=\"col-sm-3 col-form-label text-end\">\r\n            Confirm Password:\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"password\"\r\n              className=\"form-control\"\r\n              id=\"confirmPassword\"\r\n              name=\"confirmPassword\"\r\n              placeholder=\"Confirm password\"\r\n              required\r\n              onChange={handleInputChange}\r\n            /> */}\r\n                    {/* </div> */}\r\n                </div>\r\n\r\n                <div className=\"row mb-3\">\r\n                    <div className=\"col-sm-3\"></div>\r\n                    <div className=\"col-sm-9 text-end\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">\r\n                            Update User\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUser;\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","userapi","EditUser","message","setMessage","useState","userId","useParams","decryptid","departments","setDepartments","Roles","setRoles","Designation","setDesignation","formData","setFormData","firstName","lastName","email","password","mobileNo","departmentId","designationId","roleId","address","dateOfBirth","useEffect","axios","get","concat","then","res","catch","err","async","response","error","fetchDepartments","fetchRoles","fetchDesignation","handleInputChange","e","name","value","type","target","prevData","files","_jsxs","className","children","_jsx","includes","role","onSubmit","event","preventDefault","put","htmlFor","id","placeholder","required","onChange","disabled","map","dep","departmentName","designation","designationName"],"sourceRoot":""}
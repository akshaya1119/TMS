{"version":3,"file":"static/js/3517.d63dbd15.chunk.js","mappings":"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","sources":["views/UserProfile/Profile.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n  MDBCol,\r\n  MDBContainer,\r\n  MDBRow,\r\n  MDBCard,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBCardImage,\r\n  MDBBreadcrumb,\r\n  MDBBreadcrumbItem,\r\n  MDBIcon,\r\n  MDBListGroup,\r\n  MDBListGroupItem,\r\n} from 'mdb-react-ui-kit';\r\nimport { useUser } from './../../context/UserContext';\r\nimport axios from 'axios';\r\nimport $ from 'jquery'; // Import jQuery\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useProfileImage } from 'src/context/ProfileImageProvider';\r\n\r\n\r\n\r\nconst dashboardapi= process.env.REACT_APP_MY_SERVER;\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst ticketapi =process.env.REACT_APP_API_TICKET;\r\n\r\nconst ProfilePage = () => {\r\n  const {userId} = useParams();\r\n  const counterRef = useRef(null);\r\n  const assignedTicketsCounterRef = useRef(null);\r\n  const resolvedTicketsCounterRef = useRef(null);\r\n  const [userDetails, setUserDetails] = useState({});\r\n  const { user } = useUser();\r\n  const userID = userId? userId : user.userId;\r\n  const [showBtn, setShowBtn] = useState(false);\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [assignedTicketsCount, setAssignedTicketsCount] = useState(null);\r\n  const [resolvedTicketsCount, setResolvedTicketsCount] = useState(null);\r\n  const { updateProfileImageUrl } = useProfileImage();\r\n  const [profilePicturePath,setProfilePicturePath] = useState();\r\n\r\n  useEffect(() => {\r\n    if (userID) {\r\n      fetch(`${userapi}/${userID}`,{\r\n        headers:{\r\n          Authorization : `Bearer ${user?.token}`,\r\n        }\r\n      })\r\n        .then((response) => response.json())\r\n        .then((userData) => {\r\n          setUserDetails(userData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching user details:', error);\r\n        });\r\n    }\r\n  }, [userID]);\r\n\r\n  useEffect(() => {\r\n    if (profilePicturePath) {\r\n      fetch(`${userapi}/${userID}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((userData) => {\r\n          setUserDetails(userData);\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error fetching updated user details:', error);\r\n        });\r\n    }\r\n  }, [profilePicturePath]);\r\n\r\n  useEffect(() => {\r\n    if (userDetails?.email) {\r\n      fetchAssignedTicketsCount();\r\n      fetchResolvedTicketsCount();\r\n    }\r\n  }, [userDetails?.email]);\r\n\r\n  useEffect(() => {\r\n    if (assignedTicketsCount !== null) {\r\n      animateCounter(assignedTicketsCounterRef, assignedTicketsCount);\r\n\r\n\r\n    }\r\n  }, [assignedTicketsCount]);\r\n\r\n  useEffect(() => {\r\n    if (resolvedTicketsCount !== null) {\r\n      animateCounter(resolvedTicketsCounterRef, resolvedTicketsCount);\r\n    }\r\n  }, [resolvedTicketsCount]);\r\n\r\n  const animateCounter = (counterRef, targetValue) => {\r\n    let startValue = 0;\r\n    const step = targetValue / 50;\r\n\r\n    const interval = setInterval(() => {\r\n      startValue += step;\r\n      if (startValue >= targetValue) {\r\n        startValue = targetValue;\r\n        clearInterval(interval);\r\n      }\r\n\r\n      $(counterRef.current).find('.counter-value').text(Math.ceil(startValue.toString()));\r\n    }, 40);\r\n  };\r\n\r\n  const fetchAssignedTicketsCount = async () => {\r\n    try {\r\n      const response = await fetch(`${ticketapi}/status-count?id=${userDetails.userId}`,{\r\n        headers:{\r\n          Authorization : `Bearer ${user?.token}`,\r\n        }\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching assigned tickets count: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const totalAssignedCount = data?.openCount + data.pendingCount + data.selfassignedCount + data.completedCount;\r\n  \r\n\r\n      setAssignedTicketsCount(totalAssignedCount);\r\n    } catch (error) {\r\n      console.error('Error fetching assigned tickets count:', error);\r\n    }\r\n  };\r\n\r\n  const fetchResolvedTicketsCount = async () => {\r\n    try {\r\n      const response = await fetch(`${ticketapi}/status-count?id=${userDetails.userId}`,{\r\n        headers:{\r\n          Authorization : `Bearer ${user?.token}`,\r\n        }\r\n      });\r\n      if (!response.ok) {\r\n        throw new Error(`Error fetching resolved tickets count: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      const totalResolvedCount = data.completedCount; \r\n      setResolvedTicketsCount(totalResolvedCount);\r\n    } catch (error) {\r\n      console.error('Error fetching resolved tickets count:', error);\r\n    }\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedImage(file);\r\n    setShowBtn(true);\r\n\r\n    // Generate a URL for the selected image\r\n    const imageUrl = URL.createObjectURL(file);\r\n\r\n    // Set the generated URL as the source for the preview image\r\n    document.getElementById('previewImage').src = imageUrl;\r\n  };\r\n\r\n \r\n\r\n  const handleUpload = async () => {\r\n    if (selectedImage) {\r\n      const validateFileFormat = (file) => {\r\n        const fileExtension = file.name.split('.').pop().toLowerCase();\r\n        const allowedExtensions = ['jpg', 'jpeg', 'png', 'svg'];\r\n        return allowedExtensions.includes(fileExtension);\r\n    };\r\n\r\n    // Validate the file format before proceeding\r\n    if (!validateFileFormat(selectedImage)) {\r\n        alert('Invalid file format. Only jpg, jpeg, png, and svg files are allowed.');\r\n        return; // Exit the function if the file format is invalid\r\n    }\r\n        setLoading(true);\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('image', selectedImage);\r\n\r\n            const response = await axios.post(`${userapi}/upload/${userID}`, formData, {\r\n                headers: {\r\n                    Authorization: `Bearer ${user?.token}`,\r\n                },\r\n            });\r\n\r\n            const newImageUrl = `${baseapi}/${response.data.filePath}?${new Date().getTime()}`;\r\n\r\n            setUserDetails((prevUserDetails) => ({\r\n                ...prevUserDetails,\r\n                profilePicturePath: response.data.filePath,\r\n            }));\r\n            setProfilePicturePath(newImageUrl); // Update the profile picture path state\r\n            updateProfileImageUrl(user.userId, newImageUrl); // Update the profile image URL in the context\r\n            setShowBtn(false);\r\n            \r\n            // Additional actions after successful upload\r\n            await fetchAssignedTicketsCount();\r\n            await fetchResolvedTicketsCount();\r\n        } catch (error) {\r\n            console.error('Error updating profile picture:', error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n};\r\n\r\n\r\n  return (\r\n    <section style={{ backgroundColor: '#f8f9fa', padding: '20px' }}>\r\n      <MDBContainer className=\"py-5\">\r\n       \r\n\r\n        <MDBRow>\r\n          <MDBCol lg=\"4\">\r\n            <MDBCard className=\"mb-4\">\r\n              <div>\r\n              <MDBCardBody className=\"text-center d-flex flex-column align-items-center position-relative\">\r\n                <div\r\n                  className=\"rounded-circle overflow-hidden position-relative  border border-2 border-primary\"\r\n                  style={{\r\n                    width: '150px',\r\n                    height: '150px',\r\n                    overflow: 'hidden',\r\n                  }}\r\n                >\r\n    <MDBCardImage\r\n    id=\"previewImage\"\r\n      src={userDetails?.profilePicturePath\r\n        ? `${baseapi}/${userDetails.profilePicturePath}?timestamp=${Date.now()}`\r\n        : 'https://mdbcdn.b-cdn.net/img/Photos/new-templates/bootstrap-chat/ava3.webp'}\r\n      alt=\"avatar\"\r\n      className=\"w-100 h-100\"\r\n      fluid\r\n    />\r\n  </div>\r\n\r\n  {/* Pen icon for changing the profile picture */}\r\n  <label htmlFor=\"fileInput\" className=\"position-absolute bottom-0 end-0 m-2\">\r\n    <MDBIcon icon=\"pen\" className=\"text-dark\" />\r\n  </label>\r\n\r\n  {/* Input for choosing a file */}\r\n  <input\r\n    type=\"file\"\r\n    id=\"fileInput\"\r\n    className=\"d-none\"\r\n    accept='jpg,jpeg,png,svg'\r\n    onChange={handleImageChange}\r\n  />\r\n</MDBCardBody>\r\n\r\n              </div>\r\n              {showBtn && (\r\n                <button className=\"btn btn-sm btn-primary\" onClick={handleUpload} disabled={loading}>\r\n                  {loading ? 'Loading...' : 'Submit'}\r\n                </button>\r\n              )}\r\n            </MDBCard>\r\n\r\n            <MDBCard className=\"mb-4 mb-lg-0\">\r\n              <MDBCardBody className=\"p-0\">\r\n                <MDBListGroup flush=\"true\"\r\n                  classNa\r\n                  me=\"rounded-3\">\r\n                  <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3 fs-5\" ref={assignedTicketsCounterRef} style={{ backgroundColor: '#FA8247' }}>\r\n                    <MDBCardText className='counter-value fw-bold fs-3'>{assignedTicketsCount}</MDBCardText>\r\n\r\n                    <MDBCardText>Total Tickets Assigned</MDBCardText>\r\n                  </MDBListGroupItem>\r\n\r\n                  <MDBListGroupItem className=\"d-flex justify-content-between align-items-center p-3 fs-5\" ref={resolvedTicketsCounterRef} style={{ backgroundColor: '#83F28F' }}>\r\n                    <MDBCardText className='counter-value fw-bold fs-3'>{resolvedTicketsCount}</MDBCardText>\r\n                    <MDBCardText>Tickets Resolved</MDBCardText>\r\n                  </MDBListGroupItem>\r\n\r\n                </MDBListGroup>\r\n              </MDBCardBody>\r\n            </MDBCard>\r\n          </MDBCol>\r\n          <MDBCol lg=\"8\">\r\n          \r\n            {userDetails ? (\r\n              <MDBCard className=\"mb-4\">\r\n                <MDBCardBody>\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Full Name</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{`${userDetails.firstName} ${userDetails.lastName}` || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Email</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.email || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Designation</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.designationName || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Department</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.departmentName || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Mobile</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText\r\n                        className=\"text-muted\">{userDetails.mobileNo || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                  <hr />\r\n                  <MDBRow>\r\n                    <MDBCol sm=\"3\">\r\n                      <MDBCardText>Address</MDBCardText>\r\n                    </MDBCol>\r\n                    <MDBCol sm=\"9\">\r\n                      <MDBCardText className=\"text-muted\">{userDetails.address || 'N/A'}</MDBCardText>\r\n                    </MDBCol>\r\n                  </MDBRow>\r\n                </MDBCardBody>\r\n              </MDBCard>\r\n\r\n            ) : (\r\n              // You can add a loading state or message here  \r\n              <p>Loading...</p>\r\n            )}\r\n          </MDBCol>\r\n        </MDBRow>\r\n      </MDBContainer>\r\n    </section>\r\n  );\r\n};\r\nexport default ProfilePage;\r\n"],"names":["baseapi","process","userapi","ticketapi","ProfilePage","userId","useParams","assignedTicketsCounterRef","useRef","resolvedTicketsCounterRef","userDetails","setUserDetails","useState","user","useUser","userID","showBtn","setShowBtn","selectedImage","setSelectedImage","loading","setLoading","assignedTicketsCount","setAssignedTicketsCount","resolvedTicketsCount","setResolvedTicketsCount","updateProfileImageUrl","useProfileImage","profilePicturePath","setProfilePicturePath","useEffect","fetch","concat","headers","Authorization","token","then","response","json","userData","catch","error","console","email","fetchAssignedTicketsCount","fetchResolvedTicketsCount","animateCounter","counterRef","targetValue","startValue","step","interval","setInterval","clearInterval","$","current","find","text","Math","ceil","toString","async","ok","Error","status","data","totalAssignedCount","openCount","pendingCount","selfassignedCount","completedCount","totalResolvedCount","_jsx","style","backgroundColor","padding","children","MDBContainer","className","_jsxs","MDBRow","MDBCol","lg","MDBCard","MDBCardBody","width","height","overflow","MDBCardImage","id","src","Date","now","alt","fluid","htmlFor","MDBIcon","icon","type","accept","onChange","event","file","target","files","imageUrl","URL","createObjectURL","document","getElementById","onClick","fileExtension","name","split","pop","toLowerCase","includes","validateFileFormat","alert","formData","FormData","append","axios","post","newImageUrl","filePath","getTime","prevUserDetails","disabled","MDBListGroup","flush","classNa","me","MDBListGroupItem","ref","MDBCardText","sm","firstName","lastName","designationName","departmentName","mobileNo","address"],"sourceRoot":""}
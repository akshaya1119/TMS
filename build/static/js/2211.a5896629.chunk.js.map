{"version":3,"file":"static/js/2211.a5896629.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Tickets/TicketsTable.jsx","views/Tickets/ViewAllTickets.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","// TicketsTable.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Table, Modal, OverlayTrigger, Tooltip, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport $ from 'jquery';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faPenSquare, faClockRotateLeft } from '@fortawesome/free-solid-svg-icons';\r\nimport axios from 'axios';\r\nimport { useSecurity } from './../../context/Security';\r\nimport { useUser } from './../../context/UserContext';\r\n\r\n\r\nconst commentapi = process.env.REACT_APP_API_TICKETFLOW_BY_COMMENTS;\r\nconst ticketapi = process.env.REACT_APP_API_TICKET;\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\n\r\nconst TicketsTable = ({ tickets, hasPermission, setTickets }) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [comments, setComments] = useState({});\r\n  const tableRef = useRef(null);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [showAttachmentModal, setShowAttachmentModal] = useState(false);\r\n  const [isImageAttachment, setIsImageAttachment] = useState(false);\r\n  const { encrypt } = useSecurity();\r\n  const {user} = useUser();\r\n\r\n  const handleCloseAttachmentModal = () => {\r\n    setShowAttachmentModal(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchComments = async (ticketId) => {\r\n      try {\r\n        const response = await fetch(`${commentapi}/${ticketId}`);\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        const lastComment = data.length > 0 ? data[data.length - 1].comment : 'No comments';\r\n        setComments((prevComments) => ({ ...prevComments, [ticketId]: lastComment }));\r\n      } catch (error) {\r\n        console.error(`Error fetching comments for ticket ${ticketId}:`, error);\r\n      }\r\n    };\r\n\r\n    tickets.forEach((ticket) => {\r\n      fetchComments(ticket.ticketId);\r\n    });\r\n  }, [tickets]);\r\n\r\n  useEffect(() => {\r\n    if (tableRef.current) {\r\n      \r\n      $(tableRef.current).DataTable();\r\n      // $(tableRef.current).DataTable().clear();\r\n      // $(tableRef.current).DataTable().row.add(tickets).draw();\r\n    }\r\n  }, []);\r\n\r\n  const handleViewTicket = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const handleShowConfirmationModal = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const handleCloseConfirmationModal = () => {\r\n    setSelectedTicket(null);\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n\r\n  const handleArchiveTicket = () => {\r\n    console.log('Archiving ticket:', selectedTicket);\r\n    // Make API call to archive the ticket \r\n    axios.post(`${ticketapi}/${selectedTicket.ticketId}/archive?userId=${user.userId}`)\r\n      .then(response => {\r\n        console.log('Ticket archived successfully:', response.data);\r\n        // Update tickets state in the parent component by removing the archived ticket \r\n        setTickets(tickets.filter(ticket => ticket.ticketId !== selectedTicket.ticketId));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error archiving ticket:', error);\r\n      });\r\n    handleCloseConfirmationModal();\r\n  };\r\n\r\n  return (\r\n    <div className='mt-6 table-responsive'>\r\n      <Table ref={tableRef} striped bordered hover=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>TicketID</th>\r\n            <th>Title</th>\r\n            <th>Status</th>\r\n            <th>Priority</th>\r\n            <th>TicketType</th>\r\n            <th>DueDate</th>\r\n            <th>Department</th>\r\n            <th>ProjectType</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tickets.map((ticket, index) => (\r\n            <tr key={ticket.ticketId}>\r\n              <td>{index + 1}</td>\r\n              <td>{ticket.ticketId}</td>\r\n              <td>\r\n                <OverlayTrigger\r\n                  key={ticket.ticketId}\r\n                  placement=\"top\"\r\n                  delay={{ show: 250, hide: 400 }}\r\n                  overlay={\r\n                    <Tooltip id={`tooltip-${ticket.ticketId}`}>\r\n                      {comments[ticket.ticketId] ? (\r\n                        <>\r\n                          Last comment:\r\n                          <div dangerouslySetInnerHTML={{ __html: comments[ticket.ticketId] }} />\r\n                        </>\r\n                      ) : (\r\n                        <div>Description: <br />{ticket.description}</div>\r\n                      )}\r\n                    </Tooltip>\r\n                  }\r\n                >\r\n                  <span className='text-truncate d-inline-block ' style={{maxWidth: '150px'}}>{ticket.title}</span>\r\n                </OverlayTrigger>\r\n              </td>\r\n              <td>{ticket.status}</td>\r\n              <td>{ticket.priority}</td>\r\n              <td>{ticket.ticketType}</td>\r\n              <td>{new Date(ticket.dueDate).toLocaleString()}</td>\r\n              <td>{ticket.department}</td>\r\n              <td>{ticket.project}</td>\r\n              <td>\r\n                <div className=\"d-flex gap-3 align-items-center\">\r\n                  {hasPermission(2, 'canUpdateOnly') && (\r\n                    <Link to={`EditTicket/${encrypt(ticket.ticketId)}`}>\r\n                      <FontAwesomeIcon icon={faPenSquare} className=\"text-primary\" />\r\n                    </Link>\r\n                  )}\r\n                  {hasPermission(2, 'canViewOnly') && (\r\n                    <Button variant=\"link\" onClick={() => handleViewTicket(ticket)}>\r\n                      <FontAwesomeIcon icon={faEye} className=\"text-success\" />\r\n                    </Button>\r\n                  )}\r\n                  {hasPermission(2, 'canDeleteOnly') && (\r\n                    <FontAwesomeIcon\r\n                      icon={faClockRotateLeft}\r\n                      className=\"text-danger\"\r\n                      onClick={() => handleShowConfirmationModal(ticket)} />)}\r\n\r\n                  <Modal show={showConfirmationModal} onHide={handleCloseConfirmationModal}>\r\n                    <Modal.Header closeButton>\r\n                      <Modal.Title>Confirm Archive</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                      Are you sure you want to archive ticket {selectedTicket ? selectedTicket.id : ''}?\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                      <Button variant=\"secondary\" onClick={handleCloseConfirmationModal}>\r\n                        Cancel\r\n                      </Button>\r\n                      <Button variant=\"danger\" onClick={handleArchiveTicket}>\r\n                        Archive\r\n                      </Button>\r\n                    </Modal.Footer>\r\n                  </Modal>\r\n\r\n\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Ticket Details Modal */}\r\n      {selectedTicket && (\r\n        <Modal\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">Ticket Details</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Title: {selectedTicket.title}</p>\r\n            <p>Description: {selectedTicket.description}</p>\r\n            <p>Creator: {selectedTicket.creatorName}</p>\r\n            <p>Assignee: {selectedTicket.assigneeName}</p>\r\n            <p>Attachments:</p>\r\n            {selectedTicket.attachment && (\r\n              <div>\r\n                {isImageAttachment && /\\.(png|jpg|jpeg|gif|bmp)$/i.test(selectedTicket.attachment) ? (\r\n                  <img src={`${baseapi}/${selectedTicket.attachment.replace('wwwroot/', '')}`} alt=\"Attachment\" className=\"img-fluid\" />\r\n                ) : (\r\n                  <p>\r\n                    <a href={`${baseapi}/${selectedTicket.attachment.replace('wwwroot/', '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      View Attachment\r\n                    </a>\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n\r\n          <Modal.Footer>\r\n            <Button onClick={() => setModalShow(false)}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n\r\n\r\n      {/* Attachment Modal */}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nTicketsTable.propTypes = {\r\n  tickets: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      ticketId: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      status: PropTypes.string.isRequired,\r\n      priority: PropTypes.string.isRequired,\r\n      ticketType: PropTypes.string.isRequired,\r\n      dueDate: PropTypes.string.isRequired,\r\n      department: PropTypes.string.isRequired,\r\n      projectType: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  hasPermission: PropTypes.func.isRequired,\r\n  setTickets: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TicketsTable;\r\n","// ViewAllTickets.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport TicketsTable from './TicketsTable';\r\nimport { Spinner, Button, Dropdown, DropdownButton } from 'react-bootstrap';\r\nimport PermissionChecker from './../../context/PermissionChecker';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useUser } from './../../context/UserContext';\r\n\r\n \r\n\r\nconst ticketapi = process.env.REACT_APP_API_TICKET;\r\nconst archivedapi = process.env.REACT_APP_API_ARCHIEVED;\r\n\r\nconst ViewAllTickets = () => {\r\n  const [tickets, setTickets] = useState([]);\r\n  const [filteredTickets, setFilteredTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [priorityFilter, setPriorityFilter] = useState('All');\r\n  const [statusFilter, setStatusFilter] = useState('All');\r\n  const [archivedTickets, setArchivedTickets] = useState([]); // State for archived tickets \r\n  const {user} = useUser();\r\n\r\n  let navigate = useNavigate();\r\n  const onClickAddTicket = () => {\r\n    let path = `/Tickets/AddTicket`;\r\n    navigate (path);\r\n  };\r\n\r\n  const fetchData = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n\r\n  useEffect(() => {\r\n    const fetchTickets = async () => {\r\n      try {\r\n        const data = await fetchData(`${ticketapi}?userId=${user.userId}`);\r\n        setTickets(data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchTickets();\r\n  }, [user.userId]);\r\n\r\n  useEffect(() => {\r\n    const applyFilters = async () => {\r\n      try {\r\n        let filteredResults = [...tickets];\r\n\r\n        // if (priorityFilter !== 'All') {\r\n        //   filteredResults = filteredResults.filter(ticket => ticket.priority.toLowerCase() === priorityFilter.toLowerCase());\r\n        // }\r\n\r\n        // if (statusFilter !== 'All') {\r\n        //   filteredResults = filteredResults.filter(ticket => ticket.status.toLowerCase() === statusFilter.toLowerCase());\r\n        // }\r\n\r\n        setFilteredTickets(filteredResults);\r\n      } catch (error) {\r\n        console.error('Error applying filters:', error);\r\n      }\r\n    };\r\n\r\n    applyFilters();\r\n  }, [tickets]);\r\n\r\n  useEffect(() => { \r\n    const fetchTickets = async () => { \r\n      try { \r\n        const activeTickets = await fetchData(`${ticketapi}?userId=${user.userId}`); \r\n        const archivedTicketsData = await fetchData(`${archivedapi}?userId=${user.userId}`); \r\n         \r\n        // Filter out archived tickets by ID \r\n       \r\n        setTickets(activeTickets); \r\n        setArchivedTickets(archivedTicketsData); \r\n        setLoading(false); \r\n         \r\n      } catch (error) { \r\n        setLoading(false); \r\n      } \r\n    }; \r\n   \r\n    fetchTickets(); \r\n  }, [user.userId]); // Empty dependency array ensures the effect runs only once on mount \r\n\r\n\r\n  return (\r\n    <PermissionChecker>\r\n      {({ hasPermission }) => (\r\n        <div>\r\n          <div className='d-flex justify-content-between mb-3'>\r\n            <h4>All Tickets</h4>\r\n            <div className='d-flex gap-2 align-items-center'>\r\n              {/* <DropdownButton title={`Priority: ${priorityFilter}`} variant=\"info\">\r\n                <Dropdown.Item onClick={() => setPriorityFilter('All')}>All</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setPriorityFilter('High')}>High</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setPriorityFilter('medium')}>Medium</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setPriorityFilter('Low')}>Low</Dropdown.Item>\r\n              </DropdownButton>\r\n\r\n              <DropdownButton title={`Status: ${statusFilter}`} variant=\"info\">\r\n                <Dropdown.Item onClick={() => setStatusFilter('All')}>All</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setStatusFilter('Open')}>Open</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setStatusFilter('Pending')}>Pending</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setStatusFilter('Unassigned')}>Unassigned</Dropdown.Item>\r\n                <Dropdown.Item onClick={() => setStatusFilter('Completed')}>Completed</Dropdown.Item>\r\n              </DropdownButton> */}\r\n              {hasPermission(2, 'canAddOnly') && (\r\n                <Button type=\"button\" className=\"btn btn-primary\" onClick={onClickAddTicket}>\r\n                  Add Ticket\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            {loading ? (\r\n              <div className=\"text-center\">\r\n                <Spinner animation=\"border\" role=\"status\">\r\n                  <span className='visually-hidden'>loading..</span>\r\n                </Spinner>\r\n              </div>\r\n            ) : (\r\n              <TicketsTable tickets={statusFilter !== 'All' || priorityFilter !== 'All' ? filteredTickets : tickets} hasPermission={hasPermission} setTickets={setTickets} />\r\n            )}\r\n          </div>\r\n\r\n          \r\n        </div>\r\n      )}\r\n    </PermissionChecker>\r\n  );\r\n};\r\n\r\nexport default ViewAllTickets;\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","baseapi","_ref","tickets","hasPermission","setTickets","modalShow","setModalShow","useState","selectedTicket","setSelectedTicket","comments","setComments","tableRef","useRef","showConfirmationModal","setShowConfirmationModal","showAttachmentModal","setShowAttachmentModal","isImageAttachment","setIsImageAttachment","user","useUser","useEffect","forEach","ticket","async","response","fetch","concat","ticketId","ok","Error","status","json","lastComment","length","comment","prevComments","error","fetchComments","current","$","DataTable","handleCloseConfirmationModal","handleArchiveTicket","axios","post","userId","then","filter","catch","_jsxs","className","children","Table","ref","striped","bordered","hover","_jsx","map","index","OverlayTrigger","placement","delay","show","hide","overlay","Tooltip","id","_Fragment","dangerouslySetInnerHTML","__html","description","style","maxWidth","title","priority","ticketType","Date","dueDate","toLocaleString","department","project","Link","to","FontAwesomeIcon","icon","faPenSquare","Button","variant","onClick","handleViewTicket","faEye","faClockRotateLeft","handleShowConfirmationModal","Modal","onHide","Header","closeButton","Title","Body","Footer","size","centered","creatorName","assigneeName","attachment","test","src","alt","href","target","rel","ticketapi","ViewAllTickets","filteredTickets","setFilteredTickets","loading","setLoading","priorityFilter","setPriorityFilter","statusFilter","setStatusFilter","archivedTickets","setArchivedTickets","navigate","useNavigate","onClickAddTicket","fetchData","url","fetchTickets","filteredResults","applyFilters","activeTickets","archivedTicketsData","PermissionChecker","type","Spinner","animation","role","TicketsTable"],"sourceRoot":""}
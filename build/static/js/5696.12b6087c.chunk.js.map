{"version":3,"file":"static/js/5696.12b6087c.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Tickets/EditTicket.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Row, Col, Button, Form, Modal, Spinner, Tooltip } from 'react-bootstrap';\r\nimport './EditTicket.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCommentDots, faPaperclip, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { useUser } from './../../context/UserContext';\r\nimport ReactQuill from 'react-quill';  // Import ReactQuill\r\nimport 'react-quill/dist/quill.snow.css';  // Import Quill styles\r\nimport { useSecurity } from './../../context/Security';\r\n\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst ticketapi = process.env.REACT_APP_API_TICKET;\r\nconst TicketTypeapi = process.env.REACT_APP_API_TICKETTYPE;\r\nconst Commentapi = process.env.REACT_APP_API_TICKETFLOW_BY_COMMENTS;\r\nconst TicketFlowapi = process.env.REACT_APP_API_TICKETFLOW;\r\nconst markcompleted = process.env.REACT_APP_API_TICKET_COMPLETED;\r\n\r\nconst toolbarOptions = [\r\n  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons\r\n  ['blockquote', 'code-block'],\r\n\r\n  [{ 'header': 1 }, { 'header': 2 }],               // custom button values\r\n  [{ 'list': 'ordered' }, { 'list': 'bullet' }],\r\n  [{ 'script': 'sub' }, { 'script': 'super' }],     // superscript/subscript\r\n  [{ 'indent': '-1' }, { 'indent': '+1' }],         // outdent/indent\r\n  [{ 'direction': 'rtl' }],                         // text direction\r\n\r\n  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown\r\n  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme\r\n  [{ 'font': [] }],\r\n  [{ 'align': [] }],\r\n\r\n  ['clean'],                                        // remove formatting button\r\n]\r\n\r\nconst EditTicket = () => {\r\n  const { user } = useUser();\r\n  const { ticketId } = useParams();\r\n  const { decrypt } = useSecurity();\r\n  const decryptid = decrypt(ticketId);\r\n  const [formData, setFormData] = useState({\r\n    ticketId: '',\r\n    creatorName: '',\r\n    priority: '',\r\n    title: '',\r\n    department: '',\r\n    ticketType: '',\r\n    status: '',\r\n    project: '',\r\n    dueDate: '',\r\n    description: '',\r\n    assigneeName: '',\r\n    userAssigneeName: '',\r\n    userTicketType: '',\r\n    userStatus: '',\r\n    userPriority: '',\r\n    userComment: '',\r\n  });\r\n  const [showUserComment, setShowUserComment] = useState(false);\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n  const [oldDetails, setOldDetails] = useState(null);\r\n  const [assignees, setAssignees] = useState([]);\r\n  const [ticketTypes, setTicketTypes] = useState([]);\r\n  const [currentDateTime, setCurrentDateTime] = useState(null);\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [showAttachmentModal, setShowAttachmentModal] = useState(false);\r\n  const [isImageAttachment, setIsImageAttachment] = useState(false);\r\n  const [attachedFile, setAttachedFile] = useState(null);\r\n  const [hovered, setHovered] = useState(false);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [showComments, setShowComments] = useState(false)\r\n  const [attachments, setAttachments] = useState([]);\r\n  const[isAuthorized, setIsAuthorized] = useState(true);\r\n\r\n\r\n  const fetchTicketDetails = async () => {\r\n    try {\r\n      const [ticketResponse, commentsResponse, assigneesResponse, ticketTypesResponse] = await Promise.all([\r\n        axios.get(`${ticketapi}/${decryptid}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.token}`,\r\n          }\r\n        }),\r\n        axios.get(`${Commentapi}/${decryptid}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.token}`,\r\n          }\r\n        }).catch(() => ({ data: [] })),\r\n        axios.get(userapi, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.token}`,\r\n          }\r\n        }),\r\n        axios.get(TicketTypeapi, {\r\n          headers: {\r\n            Authorization: `Bearer ${user?.token}`,\r\n          }\r\n        }),\r\n      ]);\r\n      setFormData(ticketResponse.data);\r\n      setOldDetails(ticketResponse.data);\r\n      setComments(commentsResponse.data);\r\n      setAssignees(assigneesResponse.data);\r\n      setCurrentUser(assigneesResponse.data.filter(cu => cu.userId === user.userId)[0]);\r\n      setTicketTypes(ticketTypesResponse.data);\r\n    } catch (error) {\r\n      console.error('Error fetching Ticket, Comments, Assignees, and Ticket Types:', error);\r\n      setMessage('Error fetching ticket, comments, assignees, and ticket types. Please try again.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTicketDetails();\r\n    setCurrentDateTime(new Date().toLocaleString());\r\n  }, [decryptid]);\r\n\r\n  // Function to sort comments by timestamp in descending order (newest first) \r\n  const sortCommentsByTimestampDesc = () => {\r\n    const sortedComments = [...comments].sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp));\r\n    setComments(sortedComments);\r\n  };\r\n\r\n  // Function to sort comments by timestamp in ascending order (oldest first) \r\n  const sortCommentsByTimestampAsc = () => {\r\n    const sortedComments = [...comments].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n    setComments(sortedComments);\r\n  };\r\n\r\n  const toggleCollapse = () => {\r\n    setCollapsed(!collapsed);\r\n  };\r\n\r\n  const handleToggleComments = () => {\r\n    setShowComments(prevState => !prevState);\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'file' ? e.target.files : value,\r\n    }));\r\n  };\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    // Update the attachedFile state when a file is selected\r\n    setAttachedFile(e.target.files[0]);\r\n  }; \r\n  \r\n \r\n\r\n  const handleToggleUserComment = () => {\r\n    if (comments.length > 0) {\r\n      const lastComment = comments[comments.length - 1];\r\n      setFormData({\r\n        ...formData,\r\n        userAssigneeName: lastComment.newAssigneeName,\r\n        userAssigneeId: lastComment.newAssigneeId,\r\n        userTicketType: lastComment.newTicketType,\r\n        userStatus: lastComment.newStatus,\r\n        userPriority: lastComment.newPriority,\r\n        userTicketTypeId: lastComment.newTicketTypeId,\r\n      });\r\n// Add this logging statement\r\n    } else {\r\n      // If there are no comments, set the initial state of the form fields with the details of the ticket\r\n      setFormData({\r\n        ...formData,\r\n        userAssigneeName: formData.assigneeName,\r\n        userAssigneeId: formData.assigneeId,\r\n        userTicketType: formData.ticketType,\r\n        userStatus: formData.status,\r\n        userPriority: formData.priority,\r\n        userTicketTypeId: formData.ticketTypeId,\r\n      });\r\n    }\r\n    setShowUserComment(!showUserComment);\r\n  };\r\n\r\n\r\n\r\n\r\n\r\n  const handleUserCommentChange = (value) => {\r\n    setNewComment(value);\r\n  };\r\n\r\n  // const handleUserSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  //   setLoading(true);\r\n\r\n  //   // Check if the current user is the creator, assignee, or reassignee\r\n  //   const isCreator = currentUser.fullName === formData.creatorName;\r\n  //   const isAssignee = currentUser.fullName === formData.assigneeName;\r\n  //   const isReassignee = currentUser.fullName === formData.userAssigneeName;\r\n\r\n  //   if (!isCreator && !isAssignee && !isReassignee) {\r\n  //     setMessage('You are not authorized to comment on this ticket.');\r\n  //     return;\r\n  //   }\r\n\r\n  //   try {\r\n  //     const params = {\r\n  //       userid: user.userId,\r\n  //       prev: formData.assigneeId,\r\n  //       pre: formData.status,\r\n  //       newp: formData.userPriority,\r\n  //       pret: formData.userTicketTypeId,\r\n  //       newt: formData.userTicketTypeId,\r\n  //       newa: formData.userAssigneeId,\r\n  //       news: formData.userStatus,\r\n  //       prep: formData.priority,\r\n  //       ticketid: formData.ticketId,\r\n  //       timestamp: new Date().toISOString(),\r\n  //       comment: newComment,\r\n  //     };\r\n\r\n  //     const url = `${TicketFlowapi}?${new URLSearchParams(params).toString()}`;\r\n\r\n  //     let bodyFormData = new FormData();\r\n\r\n  //     if (attachedFile) {\r\n  //       // Append the file to the FormData\r\n  //       bodyFormData.append('attachment', attachedFile, attachedFile.name);\r\n  //     }\r\n\r\n  //     // Log FormData and file details to the console\r\n\r\n  //     const response = await axios.post(url, bodyFormData, {\r\n  //       headers: {\r\n  //         'Content-Type': 'multipart/form-data',\r\n  //         Authorization: `Bearer ${user?.token}`,\r\n  //       },\r\n  //     });\r\n\r\n\r\n  //     setComments([...comments, response.data]);\r\n  //     setNewComment('');\r\n  //     setMessage('Comment submitted successfully!');\r\n  //     await fetchTicketDetails()\r\n  //     handleToggleUserComment()\r\n  //     setLoading(false);\r\n  //     setOldDetails(formData);\r\n  //   } catch (error) {\r\n  //     console.error('Error submitting comment:', error);\r\n  //     setMessage('Error submitting comment. Please try again.');\r\n  //   }\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const isCreator = currentUser.fullName === formData.creatorName;\r\n    const isAssignee = currentUser.fullName === formData.assigneeName;\r\n    const isReassignee = currentUser.fullName === formData.userAssigneeName;\r\n    \r\n    setIsAuthorized(isCreator || isAssignee || isReassignee);\r\n  }, [currentUser, formData]);\r\n\r\n\r\n  const handleUserSubmit = async (event) => {\r\n    event.preventDefault();\r\n  \r\n\r\n    // Check if the current user is the creator, assignee, or reassignee\r\n    if (!isAuthorized) {\r\n      setMessage('You are not authorized to comment on this ticket.');\r\n      return;\r\n    }\r\n  setLoading(true);\r\n    try {\r\n      const params = {\r\n        userid: user.userId,\r\n        prev: formData.assigneeId,\r\n        pre: formData.status,\r\n        newp: formData.userPriority,\r\n        pret: formData.userTicketTypeId,\r\n        newt: formData.userTicketTypeId,\r\n        newa: formData.userAssigneeId,\r\n        news: formData.userStatus,\r\n        prep: formData.priority,\r\n        ticketid: formData.ticketId,\r\n        timestamp: new Date().toISOString(),\r\n        comment: newComment,\r\n      };\r\n\r\n      const url = `${TicketFlowapi}?${new URLSearchParams(params).toString()}`;\r\n\r\n      let bodyFormData = new FormData();\r\n\r\n      if (attachedFile) {\r\n        // Append the file to the FormData\r\n        bodyFormData.append('attachment', attachedFile, attachedFile.name);\r\n      }\r\n\r\n      // Log FormData and file details to the console\r\n\r\n      const response = await axios.post(url, bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      });\r\n\r\n\r\n      setComments([...comments, response.data]);\r\n      setNewComment('');\r\n      setMessage('Comment submitted successfully!');\r\n      await fetchTicketDetails()\r\n      handleToggleUserComment()\r\n      setLoading(false);\r\n      setOldDetails(formData);\r\n    } catch (error) {\r\n      console.error('Error submitting comment:', error);\r\n      setMessage('Error submitting comment. Please try again.');\r\n    }\r\n  };\r\n\r\n\r\n  const handleShowAttachmentModal = () => {\r\n    const attachments = formData.attachment.split(';').filter(Boolean);\r\n\r\n    // Check if any of the attachments are images\r\n    const imageAttachments = attachments.filter((attachment) =>\r\n      /\\.(png|jpg|jpeg|gif|bmp)$/i.test(attachment)\r\n    );\r\n\r\n    // Check if any of the attachments are non-images\r\n\r\n\r\n    if (attachments.length === 1) {\r\n      // If there's only one attachment, handle it based on its type\r\n      const singleAttachmentUrl = `${baseapi}/${attachments[0].replace('wwwroot/', '')}`;\r\n      if (imageAttachments.length > 0) {\r\n        // Single attachment is an image, show in modal\r\n        setAttachments(attachments);\r\n        setShowAttachmentModal(true);\r\n      } else {\r\n        // Single attachment is a non-image, download it\r\n        window.open(singleAttachmentUrl, '_blank');\r\n      }\r\n    } else {\r\n      // Multiple attachments or one image and one or more non-images\r\n      setAttachments(attachments);\r\n      setShowAttachmentModal(true);\r\n    }\r\n  };\r\n\r\n\r\n  const handleCloseAttachmentModal = () => {\r\n    setShowAttachmentModal(false);\r\n  };\r\n\r\n  const handleMouseEnter = () => {\r\n    setHovered(true);\r\n  };\r\n\r\n  const handleMouseLeave = () => {\r\n    setHovered(false);\r\n  };\r\n\r\n  const markAsCompleted = async () => {\r\n    try {\r\n      // Send a request to update the ticket status to \"Completed\"\r\n      const response = await axios.put(`${markcompleted}/${decryptid}`, {\r\n        status: 'Completed',\r\n      }, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        }\r\n      });\r\n\r\n\r\n      // Check if the update was successful\r\n      if (response.status === 200 || response.status === 204) {\r\n        // Update local state to reflect the new status\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          status: 'Completed',\r\n        }));\r\n        setMessage('Ticket marked as completed successfully!');\r\n      } else {\r\n        setMessage('Error marking ticket as completed. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error marking ticket as completed:', error);\r\n      setMessage('Error marking ticket as completed.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-3\">\r\n      <div className='d-flex justify-content-between '>\r\n        <h4>Ticket Section</h4>\r\n        {user.userId === formData.creatorId && (\r\n          <Button onClick={markAsCompleted} disabled={formData.status === 'Completed'} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\r\n            {hovered ? <FontAwesomeIcon icon={faCheck} /> : ' '}\r\n            {formData.status === 'Completed' ? 'Completed' : 'Mark as Completed'}\r\n\r\n          </Button>\r\n        )}\r\n      </div>\r\n\r\n      <Row>\r\n        <Col>\r\n          <label htmlFor=\"creatorName\" className=\"col-form-label text-end\">\r\n            CreatorID:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"creatorName\"\r\n              name=\"creatorName\"\r\n              value={formData.creatorName}\r\n              required\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"title\" className=\"col-form-label text-end\">\r\n            Title:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              value={formData.title}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"department\" className=\"col-form-label text-end\">\r\n            Department:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"department\"\r\n              name=\"department\"\r\n              value={formData.department}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"project\" className=\"col-form-label text-end\">\r\n            Project:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"project\"\r\n              name=\"project\"\r\n              value={formData.project}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n        <Col>\r\n          <label htmlFor=\"dueDate\" className=\"col-form-label text-end\">\r\n            Due Date:\r\n          </label>\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              value={formData.dueDate ? formData.dueDate.split('T')[0] : ''}\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n          </div>\r\n        </Col>\r\n\r\n\r\n        {/* Attachment Modal */}\r\n        <Modal show={showAttachmentModal} onHide={handleCloseAttachmentModal}>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>Attachments</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {attachments.length > 0 && (\r\n              <div>\r\n                {attachments.map((attachment, index) => {\r\n                  const isImageAttachment = /\\.(png|jpg|jpeg|gif|bmp)$/i.test(attachment);\r\n                  const attachmentUrl = `${baseapi}/${attachment.replace('wwwroot/', '')}`;\r\n\r\n                  return (\r\n                    <div key={index} className=\"mb-2\">\r\n                      {isImageAttachment ? (\r\n                        <img\r\n                          src={attachmentUrl}\r\n                          alt={`Attachment ${index + 1}`}\r\n                          className=\"img-fluid\"\r\n                          style={{ maxWidth: '100%', height: 'auto' }}\r\n                        />\r\n                      ) : (\r\n                        <p>\r\n                          <a href={attachmentUrl} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            View Attachment {index + 1}\r\n                          </a>\r\n                        </p>\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant=\"secondary\" onClick={handleCloseAttachmentModal}>\r\n              Close\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Row>\r\n\r\n      <h5 className=\"mt-3 d-flex align-items-center justify-content-between\">\r\n        <div>\r\n          Discussion Forum\r\n          <Button className=\"ms-2 btn-sm\" onClick={sortCommentsByTimestampDesc}>\r\n            Sort by Newest\r\n          </Button>\r\n          <Button className=\"ms-2 btn-sm\" onClick={sortCommentsByTimestampAsc}>\r\n            Sort by Oldest\r\n          </Button>\r\n        </div>\r\n        <div>\r\n          <Button onClick={toggleCollapse}>\r\n            {collapsed ? <i className=\"fa-solid fa-angles-left\"></i> : <i className=\"fa-solid fa-angles-right\"></i>}\r\n          </Button>\r\n        </div>\r\n\r\n      </h5>\r\n\r\n      {message && (\r\n        <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <Row>\r\n        <Col md={collapsed ? 12 : 9}>\r\n          {/* main data  */}\r\n          <Row>\r\n            <Col md={7}>\r\n              <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                <label htmlFor=\"description\" className=\"col-form-label text-end fs-3\">\r\n                  Description:\r\n                </label>\r\n                <Button className='btn-sm' variant=\"outline-primary\" disabled = {!isAuthorized} onClick={handleToggleUserComment}>\r\n                <FontAwesomeIcon \r\n                icon={faCommentDots} \r\n                className=\" fs-4 \" d\r\n               // ata-toggle=\"tooltip\" \r\n                data-html=\"true\" \r\n                title=\"Comment Below\" \r\n                 \r\n                />\r\n                </Button>\r\n               \r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  id=\"description\"\r\n                  name=\"description\"\r\n                  value={formData.description}\r\n                  required\r\n                  onChange={handleInputChange}\r\n                  rows=\"6\"\r\n                 \r\n               disabled\r\n                />\r\n\r\n                {/* Show Attachment Button */}\r\n                {formData.attachment && (\r\n                  <Col>\r\n                    <Button className=\"mt-3\" onClick={handleShowAttachmentModal}>\r\n                      <FontAwesomeIcon icon={faPaperclip} className=\"me-2\" />\r\n                      Show Attachment\r\n                    </Button>\r\n                  </Col>\r\n                )}\r\n              </div>\r\n            </Col>\r\n            <Col md={5}>\r\n              <h5 className=\"mb-3\">Ticket Information</h5>\r\n              <Form>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Assignee:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.assigneeName} onChange={handleInputChange} name=\"assigneeName\" disabled>\r\n                      <option value=\"\">Select Assignee</option>\r\n                      {assignees.map((assignee) => (\r\n                        <option key={assignee.id} value={assignee.id}>\r\n                          {assignee.fullName}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Ticket Type:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.ticketType} onChange={handleInputChange} name=\"ticketType\" disabled>\r\n                      <option value=\"\">Select Ticket Type</option>\r\n                      {ticketTypes.map((type) => (\r\n                        <option key={type.ticketTypeId} value={type.ticketType}>\r\n                          {type.ticketType}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Status:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.status} onChange={handleInputChange} name=\"status\" disabled>\r\n                      <option value=\"Open\">Open</option>\r\n                      <option value=\"Pending\">Pending</option>\r\n                      <option value=\"Self-Assigned\">Self-Assigned</option>\r\n                      <option value=\"Completed\">Completed</option>\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n                <Form.Group as={Row} className=\"mb-3\">\r\n                  <Form.Label column sm={4}>\r\n                    Priority:\r\n                  </Form.Label>\r\n                  <Col sm={8}>\r\n                    <Form.Select value={formData.priority} onChange={handleInputChange} name=\"priority\" disabled>\r\n                      <option value=\"high\">High</option>\r\n                      <option value=\"medium\">Medium</option>\r\n                      <option value=\"low\">Low</option>\r\n                    </Form.Select>\r\n                  </Col>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n\r\n          {/* my commente */}\r\n\r\n          {showUserComment && (\r\n            <Row>\r\n              <Col md={7}>\r\n                <div className=\"mt-3\">\r\n                  <label htmlFor=\"userComment\" className=\"col-form-label text-end\">\r\n                    Your Comment:\r\n                  </label>\r\n                  <div className=\"mb-3\">\r\n                    {/* Use ReactQuill only for the user's comment */}\r\n                    <ReactQuill\r\n                      value={newComment}\r\n                      onChange={handleUserCommentChange}\r\n                      modules={{ toolbar: toolbarOptions }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <Form.Group className=\"mb-3\">\r\n                  <Form.Label htmlFor=\"attachedFile\">Attach File</Form.Label>\r\n                  <Form.Control\r\n                    type=\"file\"\r\n                    id=\"attachedFile\"\r\n                    name=\"attachedFile\"\r\n                    multiple\r\n                    onChange={handleFileChange}\r\n                  />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col md={5}>\r\n                <Row className=\"mt-3\">\r\n                  <Form>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Assignee:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userAssigneeId} onChange={handleInputChange} name=\"userAssigneeId\">\r\n                          <option value=\"\">Select Assignee </option>\r\n                          {assignees.map((assignee) => (\r\n                            <option key={assignee.userId} value={assignee.userId}>\r\n                              {assignee.fullName}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Ticket Type:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userTicketTypeId} onChange={handleInputChange} name=\"userTicketType\">\r\n                          <option value=\"\">Select Ticket Type</option>\r\n\r\n                          {ticketTypes.map((type) => (\r\n                            <option key={type.ticketTypeId} value={type.ticketTypeId}>\r\n                              {type.ticketType}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Status:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userStatus} onChange={handleInputChange} name=\"userStatus\">\r\n                          <option value=\"\">Select Status</option>\r\n                          <option value=\"Open\">Open</option>\r\n                          <option value=\"Pending\">Pending</option>\r\n                          <option value=\"Self-Assigned\">Self-Assigned</option>\r\n                          <option value=\"Completed\">Completed</option>\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                    <Form.Group as={Row} className=\"mb-3\">\r\n                      <Form.Label column sm={4}>\r\n                        Priority:\r\n                      </Form.Label>\r\n                      <Col sm={8}>\r\n                        <Form.Select value={formData.userPriority} onChange={handleInputChange} name=\"userPriority\">\r\n                          <option value=\"\">Select Priority</option>\r\n                          <option value=\"high\">High</option>\r\n                          <option value=\"medium\">Medium</option>\r\n                          <option value=\"low\">Low</option>\r\n                        </Form.Select>\r\n                      </Col>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Row>\r\n                <Button \r\n                className=\"mt-3\" \r\n                onClick={handleUserSubmit} \r\n                disabled={loading}\r\n                 >\r\n                  {loading ? <><Spinner animation=\"border\" size='sm' /> Submitting Comment...</> : \"Submit Your Comment\"}\r\n\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          )}\r\n          {/* comments   */}\r\n\r\n          {comments && comments.length > 0 && (\r\n            <div>\r\n              {/* Button to expand or collapse comments */}\r\n              <div className='text-end'>\r\n                <Button\r\n                  variant=\"primary\"\r\n                  onClick={handleToggleComments}\r\n                  className=\"mb-3 \"\r\n\r\n                >\r\n                  {showComments ? <i className=\"fa-solid fa-angles-up\"></i> : <i className=\"fa-solid fa-angles-down\"></i>}\r\n                </Button></div>\r\n\r\n              {/* Conditionally render comments based on showComments state */}\r\n              {showComments && (\r\n\r\n                comments.map((comment, index) => (\r\n                  <>\r\n                    <Row key={index} className='border p-2 align-items-center'>\r\n                      <Col md={7}>\r\n                        <div className=\"d-flex align-items-center justify-content-between mb-3\">\r\n                          <label htmlFor=\"description\" className=\"col-form-label text-end\">\r\n                            <p>Comment by {comment.userName} at {new Date(comment.timestamp).toLocaleString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</p>\r\n                          </label>\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                          <div dangerouslySetInnerHTML={{ __html: comment.comment }} />\r\n                          {/* Use dangerouslySetInnerHTML to render HTML tags */}\r\n                          {comment.attachment && (\r\n                            <div>\r\n                              <strong></strong>\r\n                              <a href={`${baseapi}/${comment.attachment.replace('wwwroot/', '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                <Button>{'View Attachment'}</Button>\r\n                              </a>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n\r\n\r\n\r\n                      </Col>\r\n                      <Col md={5}>\r\n                        <Form>\r\n                          <Form.Group as={Row} className=\"mb-3\">\r\n                            <Form.Label column sm={4}>\r\n                              Assignee:\r\n                            </Form.Label>\r\n                            <Col sm={8}>\r\n                              <Form.Select name=\"assigneeName\" disabled>\r\n                                <option value=\"\">{comment.newAssigneeName}</option>\r\n\r\n                              </Form.Select>\r\n                            </Col>\r\n                          </Form.Group>\r\n                          <Form.Group as={Row} className=\"mb-3\">\r\n                            <Form.Label column sm={4}>\r\n                              Ticket Type:\r\n                            </Form.Label>\r\n                            <Col sm={8}>\r\n                              <Form.Select name=\"ticketType\" disabled>\r\n                                <option value=\"\">{comment.newTicketType}</option>\r\n\r\n                              </Form.Select>\r\n                            </Col>\r\n                          </Form.Group>\r\n                          <Form.Group as={Row} className=\"mb-3\">\r\n                            <Form.Label column sm={4}>\r\n                              Status:\r\n                            </Form.Label>\r\n                            <Col sm={8}>\r\n                              <Form.Select name=\"status\" disabled>\r\n                                <option value=\"\">{comment.newStatus}</option>\r\n\r\n                              </Form.Select>\r\n                            </Col>\r\n                          </Form.Group>\r\n                          <Form.Group as={Row} className=\"mb-3\">\r\n                            <Form.Label column sm={4}>\r\n                              Priority:\r\n                            </Form.Label>\r\n                            <Col sm={8}>\r\n                              <Form.Select name=\"priority\" disabled>\r\n                                <option value=\"\">{comment.newPriority}</option>\r\n\r\n                              </Form.Select>\r\n                            </Col>\r\n                          </Form.Group>\r\n                        </Form>\r\n                      </Col>\r\n                    </Row>\r\n\r\n\r\n                  </>\r\n\r\n                )))\r\n              }\r\n            </div>\r\n          )}\r\n\r\n\r\n        </Col>\r\n        {!collapsed && (\r\n          <Col md={3} className=\"border-start border-end border-2\">\r\n            {/* Progress Tracker */}\r\n            <div>\r\n              <h5 className=\"mb-3\">Progress Tracker</h5>\r\n              <ul className=\"list-group\">\r\n                {comments.map((comment, index) => (\r\n                  <li key={index} className=\"list-group-item\">\r\n                    <strong>{new Date(comment.timestamp).toLocaleString('en-US', { year: 'numeric', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit' })}</strong>\r\n                    <br />\r\n                    {comment.newAssigneeName && (\r\n                      <span>\r\n                        Assigned to: {comment.newAssigneeName}\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n\r\n              </ul>\r\n\r\n            </div>\r\n          </Col>\r\n        )}\r\n      </Row>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default EditTicket;\r\n\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","CryptoJS","toString","replace","decrypt","encryptedData","Utf8","useSecurity","useContext","baseapi","toolbarOptions","EditTicket","user","useUser","ticketId","useParams","decryptid","formData","setFormData","useState","creatorName","priority","title","department","ticketType","status","project","dueDate","description","assigneeName","userAssigneeName","userTicketType","userStatus","userPriority","userComment","showUserComment","setShowUserComment","comments","setComments","newComment","setNewComment","message","setMessage","oldDetails","setOldDetails","assignees","setAssignees","ticketTypes","setTicketTypes","currentDateTime","setCurrentDateTime","collapsed","setCollapsed","showAttachmentModal","setShowAttachmentModal","isImageAttachment","setIsImageAttachment","attachedFile","setAttachedFile","hovered","setHovered","currentUser","setCurrentUser","loading","setLoading","showComments","setShowComments","attachments","setAttachments","isAuthorized","setIsAuthorized","fetchTicketDetails","async","ticketResponse","commentsResponse","assigneesResponse","ticketTypesResponse","Promise","all","axios","get","concat","headers","Authorization","token","catch","filter","cu","userId","error","console","useEffect","Date","toLocaleString","handleInputChange","e","name","value","type","target","prevData","files","handleToggleUserComment","length","lastComment","newAssigneeName","userAssigneeId","newAssigneeId","newTicketType","newStatus","newPriority","userTicketTypeId","newTicketTypeId","assigneeId","ticketTypeId","isCreator","fullName","isAssignee","isReassignee","handleCloseAttachmentModal","_jsxs","className","children","_jsx","creatorId","Button","onClick","response","put","disabled","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","FontAwesomeIcon","icon","faCheck","Row","Col","htmlFor","id","required","onChange","split","Modal","show","onHide","Header","closeButton","Title","Body","map","attachment","index","test","attachmentUrl","src","alt","style","maxWidth","height","href","rel","Footer","variant","sortCommentsByTimestampDesc","sortedComments","sort","a","b","timestamp","sortCommentsByTimestampAsc","toggleCollapse","includes","role","md","faCommentDots","d","rows","handleShowAttachmentModal","Boolean","imageAttachments","singleAttachmentUrl","window","open","faPaperclip","Form","Group","as","Label","column","sm","Select","assignee","ReactQuill","modules","toolbar","Control","multiple","event","preventDefault","params","userid","prev","pre","newp","pret","newt","newa","news","prep","ticketid","toISOString","comment","url","URLSearchParams","bodyFormData","FormData","append","post","_Fragment","Spinner","animation","size","handleToggleComments","prevState","userName","year","month","day","hour","minute","dangerouslySetInnerHTML","__html"],"sourceRoot":""}
{"version":3,"file":"static/js/1204.9410711b.chunk.js","mappings":"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","sources":["views/ArchivingTicket/Archive.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Modal, Alert,Row,Col,Pagination,Form } from 'react-bootstrap'; // Import Alert component for error message \r\nimport axios from 'axios';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEye, faRepeat } from '@fortawesome/free-solid-svg-icons';\r\nimport { useUser } from './../../context/UserContext';\r\n\r\n\r\nconst Archived = process.env.REACT_APP_API_ARCHIEVED;\r\nconst ticketapi = process.env.REACT_APP_API_TICKET;\r\nconst baseapi = process.env.REACT_APP_BASE_URL;\r\n\r\nconst ArchiveTable = () => {\r\n  const [archivedTickets, setArchivedTickets] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const [selectedTicket, setSelectedTicket] = useState(null);\r\n  const [showConfirmationModal, setShowConfirmationModal] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null); // State for error message \r\n  const [showAttachmentModal, setShowAttachmentModal] = useState(false);\r\n  const [isImageAttachment, setIsImageAttachment] = useState(false);\r\n  const { user } = useUser();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(10); // Number of items per page\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  const filteredTickets = archivedTickets.filter(ticket => {\r\n    const term = searchTerm.toLowerCase();\r\n    return (\r\n      (ticket.title && ticket.title.toLowerCase().includes(term)) ||\r\n      (ticket.status && ticket.status.toLowerCase().includes(term)) ||\r\n      (ticket.priority && ticket.priority.toLowerCase().includes(term)) ||\r\n      (ticket.ticketType && ticket.ticketType.toLowerCase().includes(term)) ||\r\n      (ticket.department && ticket.department.toLowerCase().includes(term)) ||\r\n      (ticket.project && ticket.project.toLowerCase().includes(term))\r\n    );\r\n  });\r\n\r\n\r\n  const fetchArchivedTickets = async () => {\r\n    try {\r\n      const response = await axios.get(`${Archived}?userId=${user.userId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${user?.token}`,\r\n        },\r\n      });\r\n      setArchivedTickets(response.data);\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.error('Error fetching archived tickets:', error);\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const totalPages = Math.ceil(filteredTickets.length / itemsPerPage);\r\n\r\n  // Slice users for current page\r\n  const paginatedTickets = filteredTickets.slice(\r\n    (currentPage - 1) * itemsPerPage,\r\n    currentPage * itemsPerPage\r\n  );\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (e) => {\r\n    setSearchTerm(e.target.value);\r\n    setCurrentPage(1); // Reset to first page on search\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchArchivedTickets();\r\n  }, [user?.userId]);\r\n\r\n  const handleUnarchiveTicket = async () => {\r\n    if (!selectedTicket || !user?.token || !user?.userId) {\r\n      console.error('Missing required information for unarchiving ticket.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\r\n        `${ticketapi}/${selectedTicket.ticketId}/unarchive?userId=${user.userId}`,\r\n        {}, // Payload, if needed\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${user.token}`,\r\n          },\r\n        }\r\n      );\r\n      window.location.reload()\r\n      // Fetch updated list of archived tickets\r\n      fetchArchivedTickets();\r\n    } catch (error) {\r\n      console.error('Error unarchiving ticket:', error.response ? error.response.data : error.message);\r\n      setError('Failed to unarchive the ticket.');\r\n    } finally {\r\n      handleCloseConfirmationModal();\r\n    }\r\n  };\r\n\r\n  const handleViewTicket = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setModalShow(true);\r\n  };\r\n\r\n  const handleShowConfirmationModal = (ticket) => {\r\n    setSelectedTicket(ticket);\r\n    setShowConfirmationModal(true);\r\n  };\r\n\r\n  const handleCloseConfirmationModal = () => {\r\n    setSelectedTicket(null);\r\n    setShowConfirmationModal(false);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <div className='mt-6 table-responsive'>\r\n      {/* Display error message if there's an error */}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Row>\r\n\r\n\r\n        <Col md={10}>\r\n        </Col>\r\n        <Col md={2}> <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Search...\"\r\n          value={searchTerm}\r\n          onChange={handleSearchChange}\r\n          className=\"mb-3 text-start\"\r\n\r\n        />\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <div>Loading...</div>\r\n      ) : (\r\n        <>\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>S.No</th>\r\n              <th>TicketID</th>\r\n              <th>Title</th>\r\n              <th>Status</th>\r\n              <th>Priority</th>\r\n              <th>TicketType</th>\r\n              <th>DueDate</th>\r\n              <th>Department</th>\r\n              <th>ProjectType</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {paginatedTickets.map((ticket, index) => (\r\n              <tr key={ticket.ticketId}>\r\n                <td>{index + 1}</td>\r\n                <td>{ticket.ticketId}</td>\r\n                <td>{ticket.title}</td>\r\n                <td>{ticket.status}</td>\r\n                <td>{ticket.priority}</td>\r\n                <td>{ticket.ticketType}</td>\r\n                <td>{new Date(ticket.dueDate).toLocaleString()}</td>\r\n                <td>{ticket.department}</td>\r\n                <td>{ticket.project}</td>\r\n                <td>\r\n                  <div className='d-flex align-items-center'>\r\n                    <div className='me-3'>\r\n                      <FontAwesomeIcon icon={faEye} className=\"text-success\" onClick={() => handleViewTicket(ticket)} />\r\n                    </div>\r\n                    <div>\r\n                      <FontAwesomeIcon icon={faRepeat} className=\"text-danger\" onClick={() => handleShowConfirmationModal(ticket)} />\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n        <Row className=\"justify-content-end\">\r\n        <Col md=\"auto\">\r\n          <Pagination>\r\n            <Pagination.Prev\r\n              onClick={() => currentPage > 1 && handlePageChange(currentPage - 1)}\r\n              disabled={currentPage === 1}\r\n            />\r\n            {[...Array(totalPages)].map((_, index) => (\r\n              <Pagination.Item\r\n                key={index}\r\n                active={index + 1 === currentPage}\r\n                onClick={() => handlePageChange(index + 1)}\r\n              >\r\n                {index + 1}\r\n              </Pagination.Item>\r\n            ))}\r\n            <Pagination.Next\r\n              onClick={() => currentPage < totalPages && handlePageChange(currentPage + 1)}\r\n              disabled={currentPage === totalPages}\r\n            />\r\n          </Pagination>\r\n        </Col>\r\n      </Row>\r\n        </>\r\n      )}\r\n\r\n      {/* Confirmation Modal */}\r\n      <Modal show={showConfirmationModal} onHide={handleCloseConfirmationModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Unarchive</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to unarchive ticket {selectedTicket ? selectedTicket.ticketId : ''}?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseConfirmationModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\"\r\n            onClick={handleUnarchiveTicket}>\r\n            Unarchive\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Ticket Details Modal */}\r\n      {selectedTicket && (\r\n        <Modal\r\n          show={modalShow}\r\n          onHide={() => setModalShow(false)}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">Ticket Details</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <p>Title: {selectedTicket.title}</p>\r\n            <p>Description: {selectedTicket.description}</p>\r\n            <p>Creator ID: {selectedTicket.creatorName}</p>\r\n            <p>Assignee ID: {selectedTicket.assigneeName}</p>\r\n            <p>Attachments:</p>\r\n            {selectedTicket.attachment && (\r\n              <div>\r\n                {isImageAttachment && /\\.(png|jpg|jpeg|gif|bmp)$/i.test(selectedTicket.attachment) ? (\r\n                  <img src={`${baseapi}/${selectedTicket.attachment.replace('wwwroot/', '')}`} alt=\"Attachment\" className=\"img-fluid\" />\r\n                ) : (\r\n                  <p>\r\n                    <a href={`${baseapi}/${selectedTicket.attachment.replace('wwwroot/', '')}`} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                      View Attachment\r\n                    </a>\r\n                  </p>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button onClick={() => setModalShow(false)}>Close</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArchiveTable;\r\n"],"names":["baseapi","process","ArchiveTable","archivedTickets","setArchivedTickets","useState","modalShow","setModalShow","selectedTicket","setSelectedTicket","showConfirmationModal","setShowConfirmationModal","loading","setLoading","error","setError","showAttachmentModal","setShowAttachmentModal","isImageAttachment","setIsImageAttachment","user","useUser","currentPage","setCurrentPage","itemsPerPage","searchTerm","setSearchTerm","filteredTickets","filter","ticket","term","toLowerCase","title","includes","status","priority","ticketType","department","project","fetchArchivedTickets","async","response","axios","get","concat","userId","headers","Authorization","token","data","console","totalPages","Math","ceil","length","paginatedTickets","slice","handlePageChange","pageNumber","useEffect","handleCloseConfirmationModal","_jsxs","className","children","_jsx","Alert","variant","Row","Col","md","Form","Control","type","placeholder","value","onChange","e","target","_Fragment","Table","striped","bordered","hover","map","index","ticketId","Date","dueDate","toLocaleString","FontAwesomeIcon","icon","faEye","onClick","handleViewTicket","faRepeat","handleShowConfirmationModal","Pagination","Prev","disabled","Array","_","Item","active","Next","Modal","show","onHide","Header","closeButton","Title","Body","Footer","Button","post","window","location","reload","message","size","centered","id","description","creatorName","assigneeName","attachment","test","src","replace","alt","href","rel"],"sourceRoot":""}
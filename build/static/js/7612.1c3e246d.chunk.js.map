{"version":3,"file":"static/js/7612.1c3e246d.chunk.js","mappings":"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","sources":["../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/dom-helpers/esm/scrollbarSize.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/react-bootstrap/esm/ModalBody.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/ModalDialog.js","../node_modules/react-bootstrap/esm/ModalFooter.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/react-bootstrap/esm/ModalHeader.js","../node_modules/react-bootstrap/esm/ModalTitle.js","../node_modules/react-bootstrap/esm/Modal.js"],"sourcesContent":["import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(Component, runTransition, props) {\n  if (Component) {\n    return /*#__PURE__*/_jsx(Component, Object.assign({}, props));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","import canUseDOM from './canUseDOM';\nvar size;\nexport default function scrollbarSize(recalc) {\n  if (!size && size !== 0 || recalc) {\n    if (canUseDOM) {\n      var scrollDiv = document.createElement('div');\n      scrollDiv.style.position = 'absolute';\n      scrollDiv.style.top = '-9999px';\n      scrollDiv.style.width = '50px';\n      scrollDiv.style.height = '50px';\n      scrollDiv.style.overflow = 'scroll';\n      document.body.appendChild(scrollDiv);\n      size = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n    }\n  }\n\n  return size;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalBody.displayName = 'ModalBody';\nexport default ModalBody;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalDialog = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  contentClassName,\n  centered,\n  size,\n  fullscreen,\n  children,\n  scrollable,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const dialogClass = `${bsPrefix}-dialog`;\n  const fullScreenClass = typeof fullscreen === 'string' ? `${bsPrefix}-fullscreen-${fullscreen}` : `${bsPrefix}-fullscreen`;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ...props,\n    ref: ref,\n    className: classNames(dialogClass, className, size && `${bsPrefix}-${size}`, centered && `${dialogClass}-centered`, scrollable && `${dialogClass}-scrollable`, fullscreen && fullScreenClass),\n    children: /*#__PURE__*/_jsx(\"div\", {\n      className: classNames(`${bsPrefix}-content`, contentClassName),\n      children: children\n    })\n  });\n});\nModalDialog.displayName = 'ModalDialog';\nexport default ModalDialog;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalFooter.displayName = 'ModalFooter';\nexport default ModalFooter;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AbstractModalHeader from './AbstractModalHeader';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ModalHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  closeLabel = 'Close',\n  closeButton = false,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-header');\n  return /*#__PURE__*/_jsx(AbstractModalHeader, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    closeLabel: closeLabel,\n    closeButton: closeButton\n  });\n});\nModalHeader.displayName = 'ModalHeader';\nexport default ModalHeader;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport divWithClassName from './divWithClassName';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nconst ModalTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nModalTitle.displayName = 'ModalTitle';\nexport default ModalTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport addEventListener from 'dom-helpers/addEventListener';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport ownerDocument from 'dom-helpers/ownerDocument';\nimport removeEventListener from 'dom-helpers/removeEventListener';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport transitionEnd from 'dom-helpers/transitionEnd';\nimport * as React from 'react';\nimport { useCallback, useMemo, useRef, useState } from 'react';\nimport BaseModal from '@restart/ui/Modal';\nimport { getSharedManager } from './BootstrapModalManager';\nimport Fade from './Fade';\nimport ModalBody from './ModalBody';\nimport ModalContext from './ModalContext';\nimport ModalDialog from './ModalDialog';\nimport ModalFooter from './ModalFooter';\nimport ModalHeader from './ModalHeader';\nimport ModalTitle from './ModalTitle';\nimport { useBootstrapPrefix, useIsRTL } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable no-use-before-define, react/no-multi-comp */\nfunction DialogTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\nfunction BackdropTransition(props) {\n  return /*#__PURE__*/_jsx(Fade, {\n    ...props,\n    timeout: null\n  });\n}\n\n/* eslint-enable no-use-before-define */\nconst Modal = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  style,\n  dialogClassName,\n  contentClassName,\n  children,\n  dialogAs: Dialog = ModalDialog,\n  'data-bs-theme': dataBsTheme,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n  'aria-label': ariaLabel,\n  /* BaseModal props */\n\n  show = false,\n  animation = true,\n  backdrop = true,\n  keyboard = true,\n  onEscapeKeyDown,\n  onShow,\n  onHide,\n  container,\n  autoFocus = true,\n  enforceFocus = true,\n  restoreFocus = true,\n  restoreFocusOptions,\n  onEntered,\n  onExit,\n  onExiting,\n  onEnter,\n  onEntering,\n  onExited,\n  backdropClassName,\n  manager: propsManager,\n  ...props\n}, ref) => {\n  const [modalStyle, setStyle] = useState({});\n  const [animateStaticModal, setAnimateStaticModal] = useState(false);\n  const waitingForMouseUpRef = useRef(false);\n  const ignoreBackdropClickRef = useRef(false);\n  const removeStaticModalAnimationRef = useRef(null);\n  const [modal, setModalRef] = useCallbackRef();\n  const mergedRef = useMergedRefs(ref, setModalRef);\n  const handleHide = useEventCallback(onHide);\n  const isRTL = useIsRTL();\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'modal');\n  const modalContext = useMemo(() => ({\n    onHide: handleHide\n  }), [handleHide]);\n  function getModalManager() {\n    if (propsManager) return propsManager;\n    return getSharedManager({\n      isRTL\n    });\n  }\n  function updateDialogStyle(node) {\n    if (!canUseDOM) return;\n    const containerIsOverflowing = getModalManager().getScrollbarWidth() > 0;\n    const modalIsOverflowing = node.scrollHeight > ownerDocument(node).documentElement.clientHeight;\n    setStyle({\n      paddingRight: containerIsOverflowing && !modalIsOverflowing ? getScrollbarSize() : undefined,\n      paddingLeft: !containerIsOverflowing && modalIsOverflowing ? getScrollbarSize() : undefined\n    });\n  }\n  const handleWindowResize = useEventCallback(() => {\n    if (modal) {\n      updateDialogStyle(modal.dialog);\n    }\n  });\n  useWillUnmount(() => {\n    removeEventListener(window, 'resize', handleWindowResize);\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n  });\n\n  // We prevent the modal from closing during a drag by detecting where the\n  // click originates from. If it starts in the modal and then ends outside\n  // don't close.\n  const handleDialogMouseDown = () => {\n    waitingForMouseUpRef.current = true;\n  };\n  const handleMouseUp = e => {\n    if (waitingForMouseUpRef.current && modal && e.target === modal.dialog) {\n      ignoreBackdropClickRef.current = true;\n    }\n    waitingForMouseUpRef.current = false;\n  };\n  const handleStaticModalAnimation = () => {\n    setAnimateStaticModal(true);\n    removeStaticModalAnimationRef.current = transitionEnd(modal.dialog, () => {\n      setAnimateStaticModal(false);\n    });\n  };\n  const handleStaticBackdropClick = e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    handleStaticModalAnimation();\n  };\n  const handleClick = e => {\n    if (backdrop === 'static') {\n      handleStaticBackdropClick(e);\n      return;\n    }\n    if (ignoreBackdropClickRef.current || e.target !== e.currentTarget) {\n      ignoreBackdropClickRef.current = false;\n      return;\n    }\n    onHide == null ? void 0 : onHide();\n  };\n  const handleEscapeKeyDown = e => {\n    if (keyboard) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n    } else {\n      // Call preventDefault to stop modal from closing in @restart/ui.\n      e.preventDefault();\n      if (backdrop === 'static') {\n        // Play static modal animation.\n        handleStaticModalAnimation();\n      }\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    if (node) {\n      updateDialogStyle(node);\n    }\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  };\n  const handleExit = node => {\n    removeStaticModalAnimationRef.current == null ? void 0 : removeStaticModalAnimationRef.current();\n    onExit == null ? void 0 : onExit(node);\n  };\n  const handleEntering = (node, isAppearing) => {\n    onEntering == null ? void 0 : onEntering(node, isAppearing);\n\n    // FIXME: This should work even when animation is disabled.\n    addEventListener(window, 'resize', handleWindowResize);\n  };\n  const handleExited = node => {\n    if (node) node.style.display = ''; // RHL removes it sometimes\n    onExited == null ? void 0 : onExited(node);\n\n    // FIXME: This should work even when animation is disabled.\n    removeEventListener(window, 'resize', handleWindowResize);\n  };\n  const renderBackdrop = useCallback(backdropProps => /*#__PURE__*/_jsx(\"div\", {\n    ...backdropProps,\n    className: classNames(`${bsPrefix}-backdrop`, backdropClassName, !animation && 'show')\n  }), [animation, backdropClassName, bsPrefix]);\n  const baseModalStyle = {\n    ...style,\n    ...modalStyle\n  };\n\n  // If `display` is not set to block, autoFocus inside the modal fails\n  // https://github.com/react-bootstrap/react-bootstrap/issues/5102\n  baseModalStyle.display = 'block';\n  const renderDialog = dialogProps => /*#__PURE__*/_jsx(\"div\", {\n    role: \"dialog\",\n    ...dialogProps,\n    style: baseModalStyle,\n    className: classNames(className, bsPrefix, animateStaticModal && `${bsPrefix}-static`, !animation && 'show'),\n    onClick: backdrop ? handleClick : undefined,\n    onMouseUp: handleMouseUp,\n    \"data-bs-theme\": dataBsTheme,\n    \"aria-label\": ariaLabel,\n    \"aria-labelledby\": ariaLabelledby,\n    \"aria-describedby\": ariaDescribedby,\n    children: /*#__PURE__*/_jsx(Dialog, {\n      ...props,\n      onMouseDown: handleDialogMouseDown,\n      className: dialogClassName,\n      contentClassName: contentClassName,\n      children: children\n    })\n  });\n  return /*#__PURE__*/_jsx(ModalContext.Provider, {\n    value: modalContext,\n    children: /*#__PURE__*/_jsx(BaseModal, {\n      show: show,\n      ref: mergedRef,\n      backdrop: backdrop,\n      container: container,\n      keyboard: true // Always set true - see handleEscapeKeyDown\n      ,\n      autoFocus: autoFocus,\n      enforceFocus: enforceFocus,\n      restoreFocus: restoreFocus,\n      restoreFocusOptions: restoreFocusOptions,\n      onEscapeKeyDown: handleEscapeKeyDown,\n      onShow: onShow,\n      onHide: onHide,\n      onEnter: handleEnter,\n      onEntering: handleEntering,\n      onEntered: onEntered,\n      onExit: handleExit,\n      onExiting: onExiting,\n      onExited: handleExited,\n      manager: getModalManager(),\n      transition: animation ? DialogTransition : undefined,\n      backdropTransition: animation ? BackdropTransition : undefined,\n      renderBackdrop: renderBackdrop,\n      renderDialog: renderDialog\n    })\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Body: ModalBody,\n  Header: ModalHeader,\n  Title: ModalTitle,\n  Footer: ModalFooter,\n  Dialog: ModalDialog,\n  TRANSITION_DURATION: 300,\n  BACKDROP_TRANSITION_DURATION: 150\n});"],"names":["useWillUnmount","fn","onUnmount","value","valueRef","useRef","current","useUpdatedRef","useEffect","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","ImperativeTransition","_ref2","children","in","inProp","onExited","onEntered","transition","exited","setExited","useState","ref","_ref","onTransition","isInitialRef","handleTransition","useEventCallback","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","useMergedRefs","cloneElement","renderTransition","Component","runTransition","props","_jsx","Object","assign","NoopTransition","mountOnEnter","unmountOnExit","hasEnteredRef","handleExited","child","resolveContainerRef","document","canUseDOM","ownerDocument","body","getBoundingClientRect","useWaitForDOMRef","onResolved","window","useWindow","resolvedRef","setRef","earlyRef","nextRef","Context","createContext","undefined","Provider","useContext","isEscKey","e","code","keyCode","contains","context","node","compareDocumentPosition","hasClass","className","classList","baseVal","indexOf","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","size","scrollbarSize","recalc","scrollDiv","createElement","style","position","top","width","height","overflow","appendChild","offsetWidth","clientWidth","removeChild","activeElement","doc","active","nodeName","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","arguments","length","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","paddingProp","container","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","remove","removeContainerStyle","removeAttribute","add","modal","modalIdx","push","state","splice","isTopModal","_excluded","manager","useModalManager","provided","modalManager","ModalManager","getManager","dialog","backdrop","setDialogRef","useCallback","setBackdropRef","Modal","forwardRef","show","role","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","containerRef","onShow","onHide","onExit","onExiting","onEnter","onEntering","rest","source","excluded","key","i","target","sourceKeys","keys","_objectWithoutPropertiesLoose","ownerWindow","isMounted","useMounted","prevShow","usePrevious","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","defaultPrevented","dialogProps","tabIndex","React","appear","backdropElement","onClick","_Fragment","ReactDOM","_jsxs","displayName","Manager","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","marginProp","el","sharedManager","ModalBody","bsPrefix","as","useBootstrapPrefix","classNames","ModalDialog","contentClassName","centered","fullscreen","scrollable","dialogClass","fullScreenClass","ModalFooter","closeLabel","closeVariant","closeButton","ModalContext","handleClick","CloseButton","variant","ModalHeader","AbstractModalHeader","DivStyledAsH4","divWithClassName","ModalTitle","DialogTransition","Fade","timeout","BackdropTransition","dialogClassName","dialogAs","Dialog","dataBsTheme","ariaLabelledby","ariaDescribedby","ariaLabel","animation","backdropClassName","propsManager","modalStyle","setStyle","animateStaticModal","setAnimateStaticModal","waitingForMouseUpRef","ignoreBackdropClickRef","removeStaticModalAnimationRef","setModalRef","useCallbackRef","mergedRef","useIsRTL","modalContext","useMemo","getModalManager","updateDialogStyle","containerIsOverflowing","modalIsOverflowing","scrollHeight","clientHeight","paddingRight","getScrollbarSize","paddingLeft","handleWindowResize","removeEventListener","handleDialogMouseDown","handleMouseUp","handleStaticModalAnimation","transitionEnd","handleStaticBackdropClick","backdropProps","baseModalStyle","display","BaseModal","preventDefault","handleEnter","isAppearing","handleEntering","addEventListener","onMouseUp","onMouseDown","Body","Header","Title","Footer","TRANSITION_DURATION","BACKDROP_TRANSITION_DURATION"],"sourceRoot":""}
{"version":3,"file":"static/js/522.4eac376c.chunk.js","mappings":"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","sources":["views/Department/DepartmentList.js","views/Department/CreateDepartmentForm.js","views/Department/CreateTicketForm.js","views/Department/CreateProjForm.js","views/Department/ProjectType.js","views/Department/TicketType.js","views/Department/CreateRoleForm.js","views/Department/Departments.js","views/Department/Role.js"],"sourcesContent":["// DepartmentList.js \r\nimport React from 'react';\r\nimport { Button, Form } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\n\r\n\r\nconst DepartmentList = ({ departments, handleEdit, handleEditSubmit, newDepartment, setNewDepartment, editItem, searchQuery,errorDepartment }) => {\r\n    // const [searchQuery, setSearchQuery] = useState(''); \r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-7 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr className=\"table-header mt-3\">\r\n                                    <th scope=\"col\" className=\"col-3\">SNo.</th>\r\n                                    <th scope=\"col\" className=\"col-6\">Department</th>\r\n                                    <th scope=\"col\" className=\"col-3\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {departments\r\n                                    .filter((dept) =>\r\n                                        dept.departmentName?.toLowerCase().includes(searchQuery.toLowerCase())\r\n                                    )\r\n                                    .map((dept,index) => (\r\n                                        <tr key={dept.departmentId} className=\"table-row mt-1\">\r\n                                             <td className=\"col col-3\" data-label=\"S.No\">{index+1}</td> \r\n                                            {/* <td className=\"col col-6\" data-label=\"Department\"> */} \r\n                                            {\r\n                                                editItem && editItem.departmentId === dept.departmentId ?\r\n                                                    (\r\n                                                        <>\r\n                                                            <td className=\"col col-6\">\r\n                                                                <input\r\n                                                                    className=\"form-control\"\r\n                                                                    type=\"text\"\r\n                                                                    value={newDepartment || dept.departmentName}\r\n                                                                    onChange={(e) => setNewDepartment(e.target.value)}\r\n                                                                />\r\n                                                            </td>\r\n                                                            <td className=\"col col-3\">\r\n                                                                <Button onClick={(e) => handleEditSubmit(e, dept.departmentId, newDepartment)} variant=\"success\" size=\"sm\">Save</Button>\r\n                                                            </td>\r\n                                                        </>\r\n\r\n                                                    ) : (\r\n                                                        <>\r\n                                                            <td className=\"col col-3\" data-label=\"S.No\">{dept.departmentName}</td>\r\n                                                            <td className=\"col col-6\">\r\n                                                          \r\n                                                                <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(dept)}>\r\n                                                                    <i className=\"fa-solid fa-pencil\"></i>\r\n                                                                </Button>\r\n                                                            </td>\r\n                                                        </>\r\n                                                    )}\r\n\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                        {errorDepartment && <div className='text-danger text-end'>{errorDepartment}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n\r\n\r\n};\r\nDepartmentList.propTypes = { // Define prop types \r\n    departments: PropTypes.array.isRequired,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleEditSubmit: PropTypes.func.isRequired,\r\n    newDepartment: PropTypes.string.isRequired,\r\n    setNewDepartment: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    editItem: PropTypes.object,\r\n    errorDepartment : PropTypes.string.isRequired,\r\n};\r\n\r\nexport default DepartmentList;","// CreateDepartmentForm.js \r\nimport React, {useState} from 'react'; \r\nimport { Button, Form, Collapse } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\nimport { Spinner } from 'react-bootstrap';\r\n\r\n \r\n\r\n\r\nconst CreateDepartmentForm = ({ newDepartment, setNewDepartment, handleCreateDepartment, openCreateDepartment, loading,  errorMessage}) => { \r\n  return ( \r\n    <Collapse in={openCreateDepartment}> \r\n      <div id=\"create-department-collapse\"> \r\n        <div className=\"mt-3\"> \r\n          <div className=\"glassmorphism-card\"> \r\n            <div className=\"card-header\"> \r\n              <div className=\"text-header fw-bold fs-3\" style={{color:'#5856d6'}}>Create Department</div> \r\n            </div> \r\n            <div className=\"card-body \"> \r\n              <Form onSubmit={handleCreateDepartment}> \r\n                <div className=\"form-group\"> \r\n                  <label htmlFor=\"department\"></label> \r\n                  <input \r\n                    required=\"\" \r\n                    className=\"form-control\" \r\n                    name=\"department\" \r\n                    id=\"department\" \r\n                    type=\"text\" \r\n                    placeholder='Enter New Department'\r\n                    value={newDepartment} \r\n                    onChange={(e) => setNewDepartment(e.target.value)} \r\n                  /> \r\n                </div > \r\n                {errorMessage && <div className='text-danger text-end'>{errorMessage}</div>}\r\n                <Button type=\"submit\" className=\"btn mt-2\" disabled= {loading}>{loading ? <><Spinner animation=\"border\" size='sm' /> Adding Department...</> : \"Submit\"}</Button> \r\n               \r\n              </Form> \r\n            </div> \r\n          </div> \r\n        </div> \r\n      </div> \r\n    </Collapse> \r\n  ); \r\n}; \r\n\r\n\r\n \r\nCreateDepartmentForm.propTypes = { // Define prop types \r\n  newDepartment: PropTypes.string.isRequired, \r\n  setNewDepartment: PropTypes.func.isRequired, \r\n  handleCreateDepartment: PropTypes.func.isRequired, \r\n  openCreateDepartment: PropTypes.bool.isRequired, \r\n  loading: PropTypes.bool.isRequired,\r\n  errorMessage : PropTypes.string.isRequired,\r\n}; \r\n \r\nexport default CreateDepartmentForm;\r\n","import React from 'react'; \r\nimport { Button, Form, Collapse,Spinner } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; \r\n \r\nconst CreateTicketForm = ({ newTicketType, setNewTicketType, handleCreateTicketType, openTicketType,loading, errorMessage }) => { \r\n    return ( \r\n        <Collapse in={openTicketType}> \r\n            <div id=\"create-TicketType-collapse\"> \r\n                <div className=\"mt-3\"> {/* Add margin top to create space below the button */} \r\n                    <div className=\"glassmorphism-card\"> \r\n                        <div className=\"card-header\"> \r\n                            <div className=\"text-header fw-bold fs-3\" style={{color: '#5856d6'}}>Create TicketType</div> \r\n                        </div> \r\n                        <div className=\"card-body\"> \r\n                            <Form onSubmit={handleCreateTicketType}> \r\n                                <div className=\"form-group\"> \r\n                                    <label htmlFor=\"TicketType\"></label> \r\n                                    <input \r\n                                        required=\"\" \r\n                                        className=\"form-control\" \r\n                                        name=\"TicketType\" \r\n                                        id=\"TicketType\" \r\n                                        type=\"text\" \r\n                                        placeholder='Enter New TicketType'\r\n                                        value={newTicketType} \r\n                                        onChange={(e) => setNewTicketType(e.target.value)} \r\n                                    /> \r\n                                </div> \r\n                                {errorMessage && <div className='text-danger text-end'>{errorMessage}</div>}\r\n                                <Button type=\"submit\" className=\"btn mt-2\" disabled= {loading}>{loading ? <><Spinner animation=\"border\" size='sm' /> Adding TicketType...</> : \"Submit\"}</Button> \r\n\r\n                            </Form> \r\n                        </div> \r\n                    </div> \r\n                </div> \r\n            </div> \r\n        </Collapse> \r\n          ); \r\n        }; \r\n        CreateTicketForm.propTypes = { // Define prop types \r\n            newTicketType: PropTypes.string.isRequired, \r\n            setNewTicketType: PropTypes.func.isRequired, \r\n            handleCreateTicketType: PropTypes.func.isRequired, \r\n            openTicketType: PropTypes.bool.isRequired, \r\n            loading: PropTypes.bool.isRequired,\r\n            errorMessage : PropTypes.string.isRequired,\r\n          }; \r\n           \r\n          export default CreateTicketForm;","import React from 'react'; \r\nimport { Button, Form, Collapse,Spinner} from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; \r\n \r\nconst CreateProjectForm = ({ newProject, setNewProject, handleCreateProjectType, openProject,loading,errorMessage}) => { \r\n    return ( \r\n        <Collapse in={openProject}> \r\n            <div id=\"create-Project-collapse\"> \r\n                <div className=\"mt-3\"> {/* Add margin top to create space below the button */} \r\n                    <div className=\"glassmorphism-card\"> \r\n                        <div className=\"card-header\"> \r\n                            <div className=\"text-header fw-bold fs-3\" style={{color: '#5856d6'}}>Create Project</div> \r\n                        </div> \r\n                        <div className=\"card-body\"> \r\n                            <Form onSubmit={handleCreateProjectType}> \r\n                                <div className=\"form-group\"> \r\n                                    <label htmlFor=\"project\"></label> \r\n                                    <input \r\n                                        required=\"\" \r\n                                        className=\"form-control\" \r\n                                        name=\"project\" \r\n                                        id=\"project\" \r\n                                        type=\"text\" \r\n                                        placeholder='Enter New Project'\r\n                                        value={newProject} \r\n                                        onChange={(e) => setNewProject(e.target.value)} \r\n                                    /> \r\n                                </div> \r\n                                {errorMessage && <div className='text-danger text-end'>{errorMessage}</div>}\r\n                                <Button type=\"submit\" className=\"btn mt-2\" disabled= {loading}>{loading ? <><Spinner animation=\"border\" size='sm' /> Adding Project...</> : \"Submit\"}</Button> \r\n\r\n                            </Form> \r\n                        </div> \r\n                    </div> \r\n                </div> \r\n            </div> \r\n        </Collapse> \r\n \r\n    ); \r\n}; \r\nCreateProjectForm.propTypes = { // Define prop types \r\n    newProject: PropTypes.string.isRequired, \r\n    setNewProject: PropTypes.func.isRequired, \r\n    handleCreateProjectType: PropTypes.func.isRequired, \r\n    openProject: PropTypes.bool.isRequired, \r\n    loading: PropTypes.bool.isRequired,\r\n    errorMessage : PropTypes.string.isRequired,\r\n  }; \r\n   \r\n  export default CreateProjectForm;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\n\r\nconst ProjectType = ({ project, newProject, setNewProject, handleEdit, handleEditSubmitProject, editItem, searchQuery, errorProject }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-7 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table \">\r\n                            <thead>\r\n                                <tr className=\"table-header mt-3\">\r\n                                    <th scope=\"col\" className=\"col-3\">S.No</th>\r\n                                    <th scope=\"col\" className=\"col-6\">Project Type</th>\r\n                                    <th scope=\"col\" className=\"col-3\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {project\r\n                                    .filter((project) =>\r\n                                        project.projectTypes?.toLowerCase().includes(searchQuery.toLowerCase())\r\n                                    )\r\n                                    .map((project, index) => (\r\n                                        <tr key={project.projectId} className=\"table-row mt-1\">\r\n\r\n                                            <td className=\"col col-3\" data-label=\"SNo.\">{index + 1}</td>\r\n                                            {/* <td className=\"col col-6\" data-label=\"Project\">{project.projectTypes}</td> \r\n                                            <td className=\"col col-3\" data-label=\"Actions\">  */}\r\n                                            {editItem && editItem.projectId === project.projectId ? (\r\n                                                <>\r\n\r\n                                                    {/* <Form onSubmit={(e) => handleEditSubmitProject(e, project.projectId, newProject)}>  */}\r\n                                                    <td className='col col-6'> <input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        value={newProject || project.projectTypes}\r\n                                                        onChange={(e) => setNewProject(e.target.value)}\r\n                                                    />\r\n                                                    </td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button onClick={(e) => handleEditSubmitProject(e, project.projectId, newProject)} variant=\"success\" size=\"sm\">\r\n                                                            Save\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    {/* </Form>  */}\r\n                                                </>\r\n                                            ) : (\r\n                                                <>\r\n                                                    <td className=\"col col-6\" data-label=\"Project\">{project.projectTypes}</td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(project)}>\r\n                                                            <i className=\"fa-solid fa-pencil\"></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n\r\n\r\n                                        </tr>\r\n\r\n\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                {errorProject && <div className='text-danger text-end'>{errorProject}</div>}\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    );\r\n};\r\n\r\nProjectType.propTypes = { // Define prop types \r\n    project: PropTypes.array.isRequired,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleEditSubmitProject: PropTypes.func.isRequired,\r\n    newProject: PropTypes.string.isRequired,\r\n    setNewProject: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    editItem: PropTypes.object,\r\n    errorProject: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ProjectType;","import React from 'react';\r\nimport { ListGroup, Button, Form, Collapse } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\n\r\nconst Tickettype = ({ ticketType, handleEdit, handleEditSubmitTicketType, newTicketType, setNewTicketType, editItem, searchQuery,errorTicketType }) => {\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-7 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table \">\r\n                            <thead>\r\n                                <tr className=\"table-header mt-3\">\r\n                                    <th scope=\"col\" className=\"col-3\">S.No</th>\r\n                                    <th scope=\"col\" className=\"col-6\">Ticket Type</th>\r\n                                    <th scope=\"col\" className=\"col-3\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {ticketType\r\n                                    .filter((ticket) =>\r\n                                        ticket.ticketType?.toLowerCase().includes(searchQuery.toLowerCase())\r\n                                    )\r\n                                    .map((ticket,index) => (\r\n                                        <tr key={ticket.ticketTypeId} className=\"table-row mt-1\">\r\n\r\n                                            <td className=\"col col-3\" data-label=\"SNo.\">{index+1}</td>\r\n                                            {/* <td className=\"col col-6\" data-label=\"TicketType\">{ticket.ticketType}</td> \r\n                                            <td className=\"col col-3\" data-label=\"Actions\">  */}\r\n                                            {editItem && editItem.ticketTypeId === ticket.ticketTypeId ? (\r\n                                                <>\r\n                                                    {/* <Form onSubmit={(e) => handleEditSubmitTicketType(e, ticket.ticketTypeId, newTicketType)}>  */}\r\n                                                    <td className=\"col col-6\"><input\r\n                                                        className=\"form-control\"\r\n                                                        type=\"text\"\r\n                                                        value={newTicketType || ticket.ticketType}\r\n                                                        onChange={(e) => setNewTicketType(e.target.value)}\r\n                                                    />\r\n                                                    </td>\r\n                                                    <td className=\"col col-3\">\r\n\r\n                                                        <Button onClick={(e) => handleEditSubmitTicketType(e, ticket.ticketTypeId, newTicketType)} variant=\"success\" size=\"sm\">\r\n                                                            Save\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                    {/* </Form>  */}\r\n                                                </>\r\n\r\n                                            ) : (\r\n                                                <>\r\n                                                    <td className=\"col col-6\" data-label=\"TicketType\">{ticket.ticketType}</td>\r\n                                                    <td>\r\n                                                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(ticket)}>\r\n                                                            <i className=\"fa-solid fa-pencil\"></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n\r\n)}\r\n\r\n\r\n                                        </tr>\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n                                    {errorTicketType && <div className='text-danger text-end'>{errorTicketType}</div>}\r\n        </div>\r\n    );\r\n};\r\nTickettype.propTypes = { // Define prop types \r\n    ticketType: PropTypes.array.isRequired,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleEditSubmitTicketType: PropTypes.func.isRequired,\r\n    newTicketType: PropTypes.string.isRequired,\r\n    setNewTicketType: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    editItem: PropTypes.object,\r\n    errorTicketType : PropTypes.string.isRequired,\r\n};\r\nexport default Tickettype;\r\n","import React from 'react'; \r\nimport { Button, Form, Collapse,Spinner } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; \r\n \r\nconst CreateDesignationForm = ({ newDesignation, setNewDesignation, handleCreateDesignation, openCreateDesignation,loading,errorMessage}) => { \r\n    return ( \r\n        <Collapse in={openCreateDesignation}> \r\n        <div id=\"create-designation-collapse\"> \r\n            <div className=\"mt-3\"> {/* Add margin top to create space below the button */} \r\n                <div className=\"glassmorphism-card\"> \r\n                    <div className=\"card-header\"> \r\n                        <div className=\"text-header fw-bold fs-3\" style={{color: '#5856d6'}}>Create Designation</div> \r\n                    </div> \r\n                    <div className=\"card-body\"> \r\n                        <Form onSubmit={handleCreateDesignation}> \r\n                            <div className=\"form-group\"> \r\n                                <label htmlFor=\"designation\"></label> \r\n                                <input \r\n                                    required=\"\" \r\n                                    className=\"form-control\" \r\n                                    name=\"designation\" \r\n                                    id=\"designation\" \r\n                                    type=\"text\" \r\n                                    value={newDesignation} \r\n                                    placeholder='Enter New Designation'\r\n                                    onChange={(e) => setNewDesignation(e.target.value)} \r\n                                /> \r\n                            </div>\r\n                            {errorMessage && <div className='text-danger text-end'>{errorMessage}</div>} \r\n                            <Button type=\"submit\" className=\"btn mt-2\" disabled= {loading}>{loading ? <><Spinner animation=\"border\" size='sm' /> Adding Designation...</> : \"Submit\"}</Button> \r\n\r\n                        </Form> \r\n                    </div> \r\n                </div> \r\n            </div> \r\n        </div> \r\n    </Collapse> \r\n    ); \r\n}; \r\nCreateDesignationForm.propTypes = { // Define prop types \r\n    newDesignation: PropTypes.string.isRequired, \r\n    setNewDesignation: PropTypes.func.isRequired, \r\n    handleCreateDesignation: PropTypes.func.isRequired, \r\n    openCreateDesignation: PropTypes.bool.isRequired, \r\n    loading: PropTypes.bool.isRequired,\r\n    errorMessage : PropTypes.string.isRequired,\r\n  }; \r\n   \r\n  export default CreateDesignationForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Container, Row, Col, Table, Nav, Tab, Collapse, Form, Button, ListGroup } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './Department.css';\r\nimport PermissionChecker from './../../context/PermissionChecker';\r\nimport DepartmentList from './DepartmentList';\r\nimport CreateDepartmentForm from './CreateDepartmentForm';\r\nimport Designation from './Role';\r\nimport CreateTicketForm from './CreateTicketForm';\r\nimport CreateProjectForm from './CreateProjForm';\r\nimport ProjectType from './ProjectType';\r\nimport Tickettype from './TicketType';\r\nimport Tabs from 'react-bootstrap/Tabs';\r\nimport CreateDesignationForm from './CreateRoleForm';\r\nimport { useUser } from './../../../src/context/UserContext'\r\n\r\n\r\n\r\nconst Departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst designationapi = process.env.REACT_APP_API_DESIGNATION;\r\nconst TicketTypeapi = process.env.REACT_APP_API_TICKETTYPE;\r\nconst ProjectTypepi = process.env.REACT_APP_API_PROJECTTYPE;\r\n\r\nconst Department = () => {\r\n    const [activeTab, setActiveTab] = useState('departments');\r\n    const [departments, setDepartments] = useState([]);\r\n    const [newDepartment, setNewDepartment] = useState('');\r\n    const [openCreateDepartment, setOpenCreateDepartment] = useState(false);\r\n    const [designation, setDesignation] = useState([]);\r\n    const [newdesignation, setNewDesignation] = useState('');\r\n    const [openCreateDesignation, setOpenCreateDesignation] = useState(false);\r\n    const [project, setProject] = useState([]);\r\n    const [newProject, setNewProject] = useState('');\r\n    const [openProject, setOpenProject] = useState(false);\r\n    const [ticketType, setTicketTypes] = useState([]);\r\n    const [newTicketType, setNewTicketType] = useState('')\r\n    const [openTicketType, setOpenTicketType] = useState(false);\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [editItem, setEditItem] = useState(null);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const { user } = useUser();\r\n    const[errorDepartment,setErrorDepartment] = useState('');\r\n    const[errorProject,setErrorProject] = useState('');\r\n    const[errorTicketType,setErrorTicketType] = useState('');\r\n    const[errorRole,setErrorRole] = useState('');\r\n\r\n    // Fetch departments from the API when the component mounts \r\n    useEffect(() => {\r\n        const fetchDepartments = async () => {\r\n            try {\r\n                const response = await axios.get(Departmentapi, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        };\r\n\r\n        fetchDepartments();\r\n    }, []);\r\n\r\n    // Fetch roles from the API when the component mounts \r\n    useEffect(() => {\r\n        const fetchDesignation = async () => {\r\n            try {\r\n                const response = await axios.get(designationapi, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n                setDesignation(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching designation:', error);\r\n            }\r\n        };\r\n\r\n        fetchDesignation();\r\n    }, []);\r\n\r\n    const handleSearch = (e) => {\r\n        setSearchQuery(e.target.value);\r\n    };\r\n\r\n\r\n    const handleEdit = (item) => {\r\n        setEditItem(item);\r\n    };\r\n\r\n\r\n    const handleEditSubmit = async (e, id, updatedValue) => {\r\n        e.preventDefault();\r\n        setErrorDepartment('');\r\n        // Check if there is a change in the department name\r\n        if (updatedValue !== '' && updatedValue !== null && updatedValue !== undefined) {\r\n            try {\r\n                await axios.put(`${Departmentapi}/${id}`, {\r\n                    departmentId: id,\r\n                    departmentName: updatedValue,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                setDepartments((prevDepartments) =>\r\n                    prevDepartments.map((dept) =>\r\n                        dept.departmentId === id ? { ...dept, departmentName: updatedValue } : dept\r\n                    )\r\n                );\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 409) {\r\n                    // Handle specific conflict error\r\n                    setErrorDepartment(error.response.data.message); // Display the specific error message\r\n                } else {\r\n                    // Handle other errors\r\n                    setErrorDepartment('An unexpected error occurred. Please try again.');\r\n                }\r\n            }\r\n        }\r\n\r\n        setEditItem(null);\r\n        setNewDepartment('');\r\n    };\r\n\r\n    const handleEditSubmitDesignation = async (e, id, updatedValue) => {\r\n        e.preventDefault();\r\n        setErrorRole('');\r\n        if (updatedValue !== '' && updatedValue !== null && updatedValue !== undefined) {\r\n            try {\r\n                await axios.put(`${designationapi}/${id}`, {\r\n                    designationId: id,\r\n                    designationName: updatedValue,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                setDesignation((prevDesignation) =>\r\n                    prevDesignation.map((designation) =>\r\n                        designation.designationId === id ? { ...designation, designationName: updatedValue } : designation\r\n                    )\r\n                );\r\n\r\n\r\n\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 409) {\r\n                    // Handle specific conflict error\r\n                    setErrorRole(error.response.data.message); // Display the specific error message\r\n                } else {\r\n                    // Handle other errors\r\n                    setErrorRole('An unexpected error occurred. Please try again.');\r\n                }\r\n            }\r\n        }\r\n        setEditItem(null);\r\n        setNewDesignation(''); // Reset newRoles state after submitting\r\n    };\r\n\r\n\r\n\r\n    const handleEditSubmitTicketType = async (e, id, updatedValue) => {\r\n        e.preventDefault();\r\n        setErrorTicketType('');\r\n        if (updatedValue !== '' && updatedValue !== null && updatedValue !== undefined) {\r\n\r\n            try {\r\n                await axios.put(`${TicketTypeapi}/${id}`, {\r\n                    ticketTypeId: id,\r\n                    ticketType: updatedValue,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                setTicketTypes((prevTicketTypes) =>\r\n                    prevTicketTypes.map((ticket) =>\r\n                        ticket.ticketTypeId === id ? { ...ticket, ticketType: updatedValue } : ticket\r\n                    )\r\n                );\r\n\r\n                // Reset newTicketType state after submitting\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 409) {\r\n                    // Handle specific conflict error\r\n                    setErrorTicketType(error.response.data.message); // Display the specific error message\r\n                } else {\r\n                    // Handle other errors\r\n                    setErrorTicketType('An unexpected error occurred. Please try again.');\r\n                }\r\n            }\r\n        }\r\n        setEditItem(null);\r\n        setNewTicketType('');\r\n    };\r\n\r\n    const handleEditSubmitProject = async (e, id, updatedValue) => {\r\n        e.preventDefault();\r\n        setErrorProject('');\r\n        if (updatedValue !== '' && updatedValue !== null && updatedValue !== undefined) {\r\n\r\n            try {\r\n                await axios.put(`${ProjectTypepi}/${id}`, {\r\n                    projectId: id,\r\n                    projectTypes: updatedValue,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                setProject((prevProjects) =>\r\n                    prevProjects.map((project) =>\r\n                        project.projectId === id ? { ...project, projectTypes: updatedValue } : project\r\n                    )\r\n                );\r\n\r\n            } catch (error) {\r\n                if (error.response && error.response.status === 409) {\r\n                    // Handle specific conflict error\r\n                    setErrorProject(error.response.data.message); // Display the specific error message\r\n                } else {\r\n                    // Handle other errors\r\n                    setErrorProject('An unexpected error occurred. Please try again.');\r\n                }\r\n            }\r\n        }\r\n        setEditItem(null);\r\n        setNewProject('');\r\n    };\r\n\r\n\r\n\r\n\r\n    // Fetch projects from the API when the component mounts \r\n    useEffect(() => {\r\n        const fetchProjects = async () => {\r\n            try {\r\n                const response = await axios.get(ProjectTypepi, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n                setProject(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching projects:', error);\r\n            }\r\n        };\r\n\r\n        fetchProjects();\r\n    }, []);\r\n\r\n    // Fetch ticket types from the API when the component mounts \r\n    useEffect(() => {\r\n        const fetchTicketTypes = async () => {\r\n            try {\r\n                const response = await axios.get(TicketTypeapi, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n                setTicketTypes(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching ticket types:', error);\r\n            }\r\n        };\r\n\r\n        fetchTicketTypes();\r\n    }, []); // Empty dependency array ensures this effect runs only once on mount \r\n\r\n    const handleCreateDepartment = async (e) => {\r\n        e.preventDefault();\r\n        setErrorDepartment('');\r\n\r\n        if (newDepartment.trim() !== '') {\r\n            if (departments.some(department => department.departmentName === newDepartment)) {\r\n                setErrorDepartment('*Department name must be unique.');\r\n                return;\r\n            }\r\n            setLoading(true); // Set loading to true when the form submission starts\r\n            try {\r\n                // Send a POST request to create a new department \r\n                const response = await axios.post(Departmentapi, {\r\n                    departmentName: newDepartment,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                // Update the state with the new department from the server response \r\n                setDepartments([...departments, response.data]);\r\n                setNewDepartment('');\r\n                setOpenCreateDepartment(false);\r\n            } catch (error) {\r\n                setErrorDepartment('An unexpected error occurred. Please try again.');\r\n            }\r\n            finally {\r\n                setLoading(false); // Reset loading state after the request completes\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCreateDesignation = async (e) => {\r\n        e.preventDefault();\r\n        setErrorRole('');\r\n        if (newdesignation.trim() !== '') {\r\n            if (designation.some(designation => designation.designationName === newdesignation)) {\r\n                setErrorRole('Designation must be unique.');\r\n                return;\r\n            }\r\n            setLoading(true); // Set loading to true when the form submission starts\r\n\r\n            try {\r\n                // Send a POST request to create a new department \r\n                const response = await axios.post(designationapi, {\r\n                    designationName: newdesignation,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                // Update the state with the new department from the server response \r\n                setDesignation([...designation, response.data]);\r\n                setNewDesignation('');\r\n                setOpenCreateDesignation(false);\r\n            } catch (error) {\r\n                setErrorRole('An unexpected error occurred. Please try again.');\r\n\r\n            }\r\n            finally {\r\n                setLoading(false); // Reset loading state after the request completes\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCreateProjectType = async (e) => {\r\n        e.preventDefault();\r\n        setErrorProject('');\r\n        if (newProject.trim() !== '') {\r\n            if (project.some(projects => projects.projectTypes === newProject)) {\r\n                setErrorProject('Project name must be unique.');\r\n                return;\r\n            }\r\n            setLoading(true); // Set loading to true when the form submission starts\r\n\r\n            try {\r\n                // Send a POST request to create a new department \r\n                const response = await axios.post(ProjectTypepi, {\r\n                    projectTypes: newProject,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                // Update the state with the new department from the server response \r\n                setProject([...project, response.data]);\r\n                setNewProject('');\r\n                setOpenProject(false);\r\n            } catch (error) {\r\n                setErrorProject('An unexpected error occurred. Please try again.');\r\n            }\r\n            finally {\r\n                setLoading(false); // Reset loading state after the request completes\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleCreateTicketType = async (e) => {\r\n        e.preventDefault();\r\n        setErrorTicketType('');\r\n        if (newTicketType.trim() !== '') {\r\n            if (ticketType.some(ticketTypes => ticketTypes.ticketType === newTicketType)) {\r\n                setErrorTicketType('Ticket Type must be unique.');\r\n                return;\r\n            }\r\n            setLoading(true); // Set loading to true when the form submission starts\r\n\r\n            try {\r\n                // Send a POST request to create a new department \r\n                const response = await axios.post(TicketTypeapi, {\r\n                    ticketType: newTicketType,\r\n                }, {\r\n                    headers: {\r\n                        Authorization: `Bearer ${user?.token}`,\r\n                    }\r\n                });\r\n\r\n                // Update the state with the new department from the server response \r\n                setTicketTypes([...ticketType, response.data]);\r\n                setNewTicketType('');\r\n                setOpenTicketType(false);\r\n            } catch (error) {\r\n                setErrorTicketType('An unexpected error occurred. Please try again.');\r\n            }\r\n            finally {\r\n                setLoading(false); // Reset loading state after the request completes\r\n\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PermissionChecker>\r\n            {({ hasPermission }) => (\r\n                <Container>\r\n                    <Row>\r\n                        {/* Department List */}\r\n                        <Col md={12}>\r\n                            <div className='row mb-3 justify-content-between display flex'>\r\n\r\n                                <h4 className='col-sm-3'>Categories</h4>\r\n                                <Form className='col-sm-3'>\r\n                                    <Form.Control\r\n                                        type=\"text\"\r\n                                        placeholder=\"Search\"\r\n                                        value={searchQuery}\r\n                                        onChange={handleSearch}\r\n                                    />\r\n                                </Form>\r\n\r\n\r\n                            </div>\r\n                            <div className=\"col-md-6\">\r\n\r\n\r\n                                <Tabs defaultActiveKey=\"departments\" id=\"tab-example\" className=\"mb-3\" onSelect={(key) => setActiveTab(key)} justify>\r\n                                    {hasPermission(3, 'canViewOnly') && (\r\n                                        <Tab eventKey=\"departments\" title=\"Departments\">\r\n\r\n                                        </Tab>\r\n                                    )}\r\n                                    {hasPermission(4, 'canViewOnly') && (\r\n                                        <Tab eventKey=\"designation\" title=\"Designation\">\r\n\r\n                                        </Tab>\r\n                                    )}\r\n                                    {hasPermission(5, 'canViewOnly') && (\r\n                                        <Tab eventKey=\"ticketType\" title=\"Ticket Types\">\r\n\r\n                                        </Tab>\r\n                                    )}\r\n                                    {hasPermission(6, 'canViewOnly') && (\r\n                                        <Tab eventKey=\"project\" title=\"Projects\">\r\n\r\n                                        </Tab>\r\n                                    )}\r\n                                </Tabs>\r\n                            </div>\r\n                            <Container>\r\n                                {/* Other JSX code */}\r\n                                {activeTab === 'departments' && (\r\n                                    <Row>\r\n\r\n                                        {hasPermission(3, 'canViewOnly') && <Col md={6}>\r\n\r\n                                            <DepartmentList\r\n                                                departments={departments}\r\n                                                handleEdit={handleEdit}\r\n                                                handleEditSubmit={handleEditSubmit}\r\n                                                newDepartment={newDepartment}\r\n                                                setNewDepartment={setNewDepartment}\r\n                                                editItem={editItem}\r\n                                                searchQuery={searchQuery} // Pass search query as prop \r\n                                                errorDepartment={errorDepartment}\r\n                                            />\r\n                                        </Col>}\r\n                                        {hasPermission(3, 'canAddOnly') && <Col md={6} className=\"position-relative\">\r\n                                            <Button\r\n                                                onClick={() => setOpenCreateDepartment(!openCreateDepartment)}\r\n                                                aria-controls=\"create-department-collapse\"\r\n                                                aria-expanded={openCreateDepartment}\r\n                                                className=\"mb-3 position-absolute top-0 end-0\"\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                            <CreateDepartmentForm\r\n                                                newDepartment={newDepartment}\r\n                                                setNewDepartment={setNewDepartment}\r\n                                                handleCreateDepartment={handleCreateDepartment}\r\n                                                openCreateDepartment={openCreateDepartment} // Pass openCreateDepartment as a prop \r\n                                                loading={loading} // Pass loading state as a prop\r\n                                                errorMessage={errorMessage}\r\n                                            />\r\n                                        </Col>}\r\n                                    </Row>\r\n                                )}\r\n                                {activeTab === 'designation' && (\r\n                                    <Row>\r\n                                        {hasPermission(4, 'canViewOnly') && <Col md={6}>\r\n\r\n                                            <Designation\r\n                                                designations={designation}\r\n                                                handleEdit={handleEdit}\r\n                                                handleEditSubmitDesignation={handleEditSubmitDesignation}\r\n                                                newDesignation={newdesignation}\r\n                                                setNewDesignation={setNewDesignation}\r\n                                                editItem={editItem}\r\n                                                errorRole={errorRole}\r\n                                                searchQuery={searchQuery}\r\n                                            />\r\n                                        </Col>}\r\n                                        {hasPermission(4, 'canAddOnly') && <Col md={6} className=\"position-relative\">\r\n                                            <Button\r\n                                                onClick={() => setOpenCreateDesignation(!openCreateDesignation)}\r\n                                                aria-controls=\"create-role-collapse\"\r\n                                                aria-expanded={openCreateDesignation}\r\n                                                className=\"mb-3 position-absolute top-0 end-0\"\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                            <CreateDesignationForm\r\n                                                newDesignation={newdesignation}\r\n                                                setNewDesignation={setNewDesignation}\r\n                                                handleCreateDesignation={handleCreateDesignation}\r\n                                                openCreateDesignation={openCreateDesignation}\r\n                                                loading={loading} // Pass loading state as a prop\r\n                                                errorMessage={errorMessage}\r\n                                            />\r\n                                        </Col>}\r\n                                    </Row>\r\n                                )}\r\n                                {activeTab === 'ticketType' && (\r\n                                    <Row>\r\n                                        {hasPermission(5, 'canViewOnly') && <Col md={6}>\r\n\r\n                                            <Tickettype\r\n                                                ticketType={ticketType}\r\n                                                handleEdit={handleEdit}\r\n                                                handleEditSubmitTicketType={handleEditSubmitTicketType}\r\n                                                newTicketType={newTicketType}\r\n                                                setNewTicketType={setNewTicketType}\r\n                                                editItem={editItem}\r\n                                                errorTicketType={errorTicketType}\r\n                                                searchQuery={searchQuery}\r\n                                            />\r\n                                        </Col>}\r\n                                        {hasPermission(5, 'canAddOnly') && <Col md={6} className=\"position-relative\">\r\n                                            <Button\r\n                                                onClick={() => setOpenTicketType(!openTicketType)}\r\n                                                aria-controls=\"create-tickettype-collapse\"\r\n                                                aria-expanded={openTicketType}\r\n                                                className=\"mb-3 position-absolute top-0 end-0\"\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                            <CreateTicketForm\r\n                                                newTicketType={newTicketType}\r\n                                                setNewTicketType={setNewTicketType}\r\n                                                handleCreateTicketType={handleCreateTicketType}\r\n                                                openTicketType={openTicketType}\r\n                                                loading={loading} // Pass loading state as a prop\r\n                                                errorMessage={errorMessage}\r\n                                            />\r\n                                        </Col>}\r\n                                    </Row>\r\n                                )}\r\n                                {activeTab === 'project' && (\r\n                                    <Row>\r\n                                        {hasPermission(6, 'canViewOnly') && <Col md={6}>\r\n\r\n                                            <ProjectType\r\n                                                project={project}\r\n                                                handleEdit={handleEdit}\r\n                                                handleEditSubmitProject={handleEditSubmitProject}\r\n                                                newProject={newProject}\r\n                                                setNewProject={setNewProject}\r\n                                                editItem={editItem}\r\n                                                errorProject={errorProject}\r\n                                                searchQuery={searchQuery}\r\n                                            />\r\n                                        </Col>}\r\n                                        {hasPermission(6, 'canAddOnly') && <Col md={6} className=\"position-relative\">\r\n                                            <Button\r\n                                                onClick={() => setOpenProject(!openProject)}\r\n                                                aria-controls=\"create-project-collapse\"\r\n                                                aria-expanded={openProject}\r\n                                                className=\"mb-3 position-absolute top-0 end-0\"\r\n                                            >\r\n                                                Create\r\n                                            </Button>\r\n                                            <CreateProjectForm\r\n                                                newProject={newProject}\r\n                                                setNewProject={setNewProject}\r\n                                                handleCreateProjectType={handleCreateProjectType}\r\n                                                openProject={openProject}\r\n                                                loading={loading} // Pass loading state as a prop\r\n                                                errorMessage={errorMessage}\r\n                                            />\r\n                                        </Col>}\r\n                                    </Row>\r\n                                )}\r\n\r\n                            </Container>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"departments\">\r\n                                    <Table responsive hover bordered striped>\r\n\r\n                                    </Table>\r\n                                </Tab.Pane>\r\n\r\n                                <Tab.Pane eventKey=\"designation\">\r\n                                    <Table responsive hover bordered striped>\r\n\r\n                                    </Table>\r\n                                </Tab.Pane>\r\n\r\n                                <Tab.Pane eventKey=\"ticketType\">\r\n                                    <Table responsive hover bordered striped>\r\n\r\n                                    </Table>\r\n                                </Tab.Pane>\r\n\r\n                                <Tab.Pane eventKey=\"project\">\r\n                                    <Table responsive hover bordered striped>\r\n                                        {/* Render project data here */}\r\n\r\n                                    </Table>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            )}\r\n        </PermissionChecker>\r\n    );\r\n\r\n};\r\n\r\nexport default Department;","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\n\r\n\r\nconst Designation = ({ designations, handleEdit, handleEditSubmitDesignation, newDesignation, setNewDesignation, editItem, searchQuery,errorRole }) => {\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-7 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr className=\"table-header mt-3\">\r\n                                    <th scope=\"col\" className=\"col-3\">S.No</th>\r\n                                    <th scope=\"col\" className=\"col-6\">Designation</th>\r\n                                    <th scope=\"col\" className=\"col-3\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {designations\r\n                                    .filter((designation) => designation.designationName?.toLowerCase().includes(searchQuery.toLowerCase()))\r\n                                    .map((designation,index) => (\r\n                                        <tr key={designation.designationId} className=\"table-row mt-1\">\r\n\r\n                                            <td className=\"col col-3\" data-label=\"SNo.\">{index+1}</td>\r\n                                            {/* <td className=\"col col-6\" data-label=\"Designation\">{designation.designationName}</td> \r\n                                            <td className=\"col col-3\" data-label=\"Actions\">  */}\r\n                                            {editItem && editItem.designationId === designation.designationId ? (\r\n\r\n                                                // <Form onSubmit={(e) => handleEditSubmitDesignation(e, designation.designationId, newDesignation)}> \r\n                                                <>\r\n                                                    <td className=\"col col-6\">\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            value={newDesignation || designation.designationName}\r\n                                                            onChange={(e) => setNewDesignation(e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button onClick={(e) => handleEditSubmitDesignation(e, designation.designationId, newDesignation)} variant=\"success\" size=\"sm\">\r\n                                                            Save\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n                                                // </Form> \r\n                                            ) : (\r\n                                                <>\r\n                                                    <td className=\"col col-6\" data-label=\"Designation\">{designation.designationName}</td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(designation)}>\r\n                                                            <i className=\"fa-solid fa-pencil\"></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </tr>\r\n\r\n\r\n))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n{errorRole && <div className='text-danger text-end'>{errorRole}</div>}\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\nDesignation.propTypes = { // Define prop types \r\n    designations: PropTypes.array.isRequired,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleEditSubmitDesignation: PropTypes.func.isRequired,\r\n    newDesignation: PropTypes.string.isRequired,\r\n    setNewDesignation: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.string.isRequired,\r\n    editItem: PropTypes.object,\r\n    errorRole : PropTypes.string.isRequired,\r\n};\r\nexport default Designation;"],"names":["_ref","departments","handleEdit","handleEditSubmit","newDepartment","setNewDepartment","editItem","searchQuery","errorDepartment","_jsx","className","children","_jsxs","scope","filter","dept","_dept$departmentName","departmentName","toLowerCase","includes","map","index","departmentId","_Fragment","type","value","onChange","e","target","Button","onClick","variant","size","handleCreateDepartment","openCreateDepartment","loading","errorMessage","Collapse","in","id","style","color","Form","onSubmit","htmlFor","required","name","placeholder","disabled","Spinner","animation","newTicketType","setNewTicketType","handleCreateTicketType","openTicketType","newProject","setNewProject","handleCreateProjectType","openProject","project","handleEditSubmitProject","errorProject","_project$projectTypes","projectTypes","projectId","ticketType","handleEditSubmitTicketType","errorTicketType","ticket","_ticket$ticketType","ticketTypeId","newDesignation","setNewDesignation","handleCreateDesignation","openCreateDesignation","Departmentapi","process","designationapi","TicketTypeapi","ProjectTypepi","Department","activeTab","setActiveTab","useState","setDepartments","setOpenCreateDepartment","designation","setDesignation","newdesignation","setOpenCreateDesignation","setProject","setOpenProject","setTicketTypes","setOpenTicketType","setSearchQuery","setEditItem","setErrorMessage","setLoading","user","useUser","setErrorDepartment","setErrorProject","setErrorTicketType","errorRole","setErrorRole","useEffect","async","response","axios","get","headers","Authorization","concat","token","data","error","console","fetchDepartments","fetchDesignation","handleSearch","item","updatedValue","preventDefault","undefined","put","prevDepartments","status","message","handleEditSubmitDesignation","designationId","designationName","prevDesignation","prevTicketTypes","prevProjects","fetchProjects","fetchTicketTypes","trim","some","department","post","projects","ticketTypes","PermissionChecker","hasPermission","Container","Row","Col","md","Control","Tabs","defaultActiveKey","onSelect","key","justify","Tab","eventKey","title","DepartmentList","CreateDepartmentForm","Designation","designations","CreateDesignationForm","Tickettype","CreateTicketForm","ProjectType","CreateProjectForm","Content","Pane","Table","responsive","hover","bordered","striped","_designation$designat"],"sourceRoot":""}
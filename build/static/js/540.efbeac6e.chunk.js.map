{"version":3,"file":"static/js/540.efbeac6e.chunk.js","mappings":"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","sources":["views/pages/Password/ChangePassword.js","views/pages/Password/ChangePasswordForm.js","../node_modules/react-bootstrap/esm/CardGroup.js","views/pages/login/PageLayout.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/warning/warning.js"],"sourcesContent":["import React from 'react'\r\nimport PageLayout from '../login/PageLayout';\r\nimport ChangePasswordForm from './ChangePasswordForm';\r\n\r\nconst ChangePassword = () => {\r\n\r\n  const theme = '#FF725E';\r\n  return (\r\n    <PageLayout bgimg='bgimgchangepass' theme={theme}>\r\n      <div>ChangePassword</div>\r\n\r\n\r\n      <ChangePasswordForm/>\r\n\r\n\r\n\r\n    </PageLayout>\r\n    \r\n  )\r\n}\r\n\r\nexport default ChangePassword","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { cilLockLocked } from '@coreui/icons';\r\nimport { Col, Row, Form, InputGroup, Button, Alert, Card, CardBody, CardGroup, Container } from 'react-bootstrap'; // Import necessary components from react-bootstrap\r\nimport axios from 'axios';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { useUser } from './../../../context/UserContext'; // Import useUser hook\r\nimport './../login/Login.css'; // Import CSS from the Login page\r\n\r\n\r\nconst ChangePasswordApi = process.env.REACT_APP_API_CHANGE_PASSWORD;\r\nconst theme = '#FF725E';\r\nconst ChangePassword = () => {\r\n  const { logout, user } = useUser(); // Destructure the logout function from the useUser hook\r\n\r\n  const [passwords, setPasswords] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [passwordVisibility, setPasswordVisibility] = useState({\r\n    currentPassword: false,\r\n    newPassword: false,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [messages, setMessages] = useState({\r\n    success: '',\r\n    error: '',\r\n  });\r\n\r\n  // Handle password change input\r\n  const handlePasswordChange = (field, value) => {\r\n    setPasswords((prevPasswords) => ({ ...prevPasswords, [field]: value }));\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: value.trim() ? '' : `${field.charAt(0).toUpperCase() + field.slice(1)} is required` }));\r\n\r\n    // Additional validation for newPassword\r\n    if (field === 'newPassword') {\r\n      const alphanumericRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/;\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        newPassword: value.length < 8 ? 'New Password must be at least 8 characters long' : !alphanumericRegex.test(value)\r\n          ? 'Password must contain at least one letter, one number, and one special character'\r\n          : '',\r\n      }));\r\n    }\r\n\r\n    // Clear alerts when typing in currentPassword\r\n    if (field === 'currentPassword') {\r\n      setMessages({ success: '', error: '' });\r\n    }\r\n  };\r\n\r\n  // Toggle password visibility\r\n  const togglePasswordVisibility = (field) => {\r\n    setPasswordVisibility((prevVisibility) => ({ ...prevVisibility, [field]: !prevVisibility[field] }));\r\n  };\r\n\r\n\r\n const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleChangePassword();\r\n  };\r\n\r\n  // Validate passwords\r\n  const validatePasswords = () => {\r\n    const { currentPassword, newPassword } = passwords;\r\n    const newErrors = {};\r\n\r\n    ['currentPassword', 'newPassword'].forEach((field) => {\r\n      if (!passwords[field]) {\r\n        newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\r\n      }\r\n    });\r\n\r\n    if (newPassword.length < 8) {\r\n      newErrors.newPassword = 'New Password must be at least 8 characters long';\r\n    }\r\n\r\n    if (currentPassword === newPassword) {\r\n      newErrors.newPassword = 'New Password cannot be the same as the Current Password';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Handle change password button click\r\n  const handleChangePassword = async () => {\r\n    if (!validatePasswords()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Make API call to change password\r\n      const response = await axios.put(`${ChangePasswordApi}/${user.userId}`, \r\n      \r\n      {\r\n        currentPassword: passwords.currentPassword,\r\n        newPassword: passwords.newPassword,\r\n      },{\r\n        headers:{\r\n          Authorization : `Bearer ${user?.token}`,\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Password change successful\r\n        setMessages({ success: 'Your password has been changed. Please login again.', error: '' });\r\n\r\n        // Logout after 3 seconds\r\n        setTimeout(() => {\r\n          logout();\r\n        }, 3000);\r\n      } else if (response.status === 400) {\r\n        // Incorrect old password\r\n        setMessages({ success: '', error: 'Enter Correct Old Password!' });\r\n      } else {\r\n        // Handle other status codes\r\n        setMessages({ success: '', error: 'Password change failed. Please try again.' });\r\n      }\r\n    } catch (error) {\r\n      // Network error or other issues\r\n      setMessages({ success: '', error: 'Enter Correct Old Password!' });\r\n    } finally {\r\n      // Always set loading to false after the request is completed\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1>Password Reset</h1>\r\n          <p>Change your password</p>\r\n          {messages.success && <Alert variant=\"success\">{messages.success}</Alert>}\r\n          {messages.error && <Alert variant=\"danger\">{messages.error}</Alert>}\r\n          {['currentPassword', 'newPassword'].map((field) => (\r\n            <div key={field} className=\"mb-4\">\r\n              <InputGroup hasValidation>\r\n                <InputGroup.Text>\r\n                  <CIcon icon={cilLockLocked} />\r\n                </InputGroup.Text>\r\n                <Form.Control\r\n                  type={passwordVisibility[field] ? 'text' : 'password'}\r\n                  placeholder={field === 'currentPassword' ? 'Current Password' : 'New Password'}\r\n                  autoComplete={field === 'currentPassword' ? 'old-password' : 'new-password'}\r\n                  value={passwords[field]}\r\n                  onChange={(e) => handlePasswordChange(field, e.target.value)}\r\n                  isInvalid={!!errors[field]}\r\n                />\r\n                <InputGroup.Text onClick={() => togglePasswordVisibility(field)} className=\"hovericon\">\r\n                  {passwordVisibility[field] ? <i className=\"fa-solid fa-eye\"></i> : <i className=\"fa-solid fa-eye-slash\"></i>}\r\n                </InputGroup.Text>\r\n                <Form.Control.Feedback type=\"invalid\">{errors[field]}</Form.Control.Feedback>\r\n              </InputGroup>\r\n            </div>\r\n          ))}\r\n          <Row>\r\n            <Col xs={6} className='align-items-start'>\r\n              {/* Change Password Button */}\r\n              <Button type = 'submit' variant=\"primary\" className=\"px-4 \" style={{ backgroundColor: theme }} disabled={loading}>\r\n                {loading ? 'Changing Password...' : 'Change Password'}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={6} className='text-end fs-5'>\r\n              {/* Login Password Button */}\r\n            \r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n  \r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardGroup = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-group');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardGroup.displayName = 'CardGroup';\nexport default CardGroup;","// this page will render pages which have not dashboard\r\n\r\nimport React from 'react';\r\nimport { Card, CardBody, CardGroup, Col, Container, Row } from 'react-bootstrap';\r\n// import loginicon from './../../../assets/images/loginicon.png'\r\n// import logo from './../../../assets/images/logo.png'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageLayout = ({ children, bgimg, theme }) => {\r\n    return (\r\n        <div>\r\n            {/* Content specific to each page */}\r\n            <main className='blur-5'>\r\n                <div className=\"bg-body-tertiary min-vw-100 min-vh-100 d-flex align-items-center blur-5\">\r\n                    <Container fluid className='align-items-center loginbg ' >\r\n                        <Row className='align-items-center justify-content-center'>\r\n                            <Col md={8} lg={6} className={`d-flex vh-100 d-none d-lg-block ${bgimg} border-end border-4`}>\r\n                                {/* <img className='m-4' src={logo} alt=\"\" width='60px' /> */}\r\n                            </Col>\r\n                            {/* right of login page  */}\r\n                            <Col sm={8} md={7} lg={6} className='d-flex vh-100 align-items-center blur-5 shadow-left'>\r\n                                <CardGroup className='container  p-md-5 flex-column'>\r\n                                    <Card className='d-flex flex-row align-items-center justify-content-center gap-3 rounded mb-4 text-primary'>\r\n                                        {/* <img src={logo} alt=\"\" width='50px' /> */}\r\n                                        <h1 style={{color: theme}}>CUPL-Ticketing System</h1>\r\n                                    </Card>\r\n                                    <Card className=\"p-4 container rounded \">\r\n                                        <CardBody className='m-6'>\r\n                                            {/* cheldren cmponents */}\r\n                                            {children}\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </CardGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </main>\r\n\r\n            {/* Common Footer or any other elements */}\r\n            {/* <footer> */}\r\n            {/* Your footer content */}\r\n            {/* </footer> */}\r\n        </div>\r\n    );\r\n};\r\nPageLayout.propTypes = {\r\n    children: PropTypes.node.isRequired, // Children should be a node and is required\r\n    bgimg: PropTypes.string.isRequired, // Children should be a node and is required\r\n    theme: PropTypes.string.isRequired, // Children should be a node and is required\r\n};\r\n\r\nexport default PageLayout;","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n"],"names":["ChangePassword","_jsxs","PageLayout","bgimg","theme","children","_jsx","ChangePasswordForm","logout","user","useUser","passwords","setPasswords","useState","currentPassword","newPassword","errors","setErrors","passwordVisibility","setPasswordVisibility","loading","setLoading","messages","setMessages","success","error","handleChangePassword","async","validatePasswords","newErrors","forEach","field","concat","charAt","toUpperCase","slice","length","Object","keys","response","axios","put","process","userId","headers","Authorization","token","status","setTimeout","Container","Form","onSubmit","e","preventDefault","Alert","variant","map","className","InputGroup","hasValidation","Text","CIcon","icon","cilLockLocked","Control","type","placeholder","autoComplete","value","onChange","handlePasswordChange","prevPasswords","prevErrors","trim","alphanumericRegex","test","target","isInvalid","onClick","prevVisibility","togglePasswordVisibility","Feedback","Row","Col","xs","Button","style","backgroundColor","disabled","CardGroup","React","_ref","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","displayName","fluid","md","lg","sm","Card","color","CardBody","size","active","prefix","buttonProps","tagName","useButtonProps","href","CardFooter","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","divWithClassName","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","assign","Img","Title","Subtitle","Body","Link","Header","Footer","ImgOverlay","context","warning","module","exports"],"sourceRoot":""}
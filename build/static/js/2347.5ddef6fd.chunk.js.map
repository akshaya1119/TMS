{"version":3,"file":"static/js/2347.5ddef6fd.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Users/AddUser.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport './AddUser.css';\r\nimport { Spinner, Col } from \"react-bootstrap\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UseSecurity, useSecurity } from \"./../../context/Security\";\r\n\r\n\r\nconst departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst roleapi = process.env.REACT_APP_API_ROLES;\r\nconst userapi= process.env.REACT_APP_API_USERS;\r\n\r\nconst onClickViewUser = () => {\r\n  window.location.href = './AllUsers';\r\n}\r\n\r\nconst AddUser = () => {\r\n  const {encrypt} = useSecurity();\r\n  const [loading, setLoading] = useState(false);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [Roles, setRoles] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    autoGenPass: true,\r\n    mobileNo: '',\r\n    departmentName: '',\r\n    role: '',\r\n    address: '',\r\n    dateOfBirth: '',\r\n    profilePicturePath: null,\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchDepartments() {\r\n      try {\r\n        const response = await axios.get(departmentapi);\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n      }\r\n    }\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchRoles() {\r\n      try {\r\n        const response = await axios.get(roleapi);\r\n        setRoles(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Roles:', error);\r\n      }\r\n    }\r\n\r\n    fetchRoles();\r\n  }, []);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'file' ? e.target.files : value,\r\n    }));\r\n  };\r\n\r\n\r\n\r\n  function handleUserSubmit(event) {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n    console.log(formData);\r\n\r\n    // Validate Date of Birth\r\n    const currentDate = new Date().toISOString().split('T')[0];\r\n    if (formData.dateOfBirth > currentDate) {\r\n      setMessage('Date of Birth must be smaller than the current date.');\r\n      return;\r\n    }\r\n\r\n    axios.post(userapi, formData)\r\n      .then(res => {\r\n        console.log(res)\r\n        setMessage('User added successfully!');\r\n        setLoading(false);\r\n        setFormData({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: '',\r\n          autoGenPass: true,\r\n          mobileNo: '',\r\n          departmentName: '',\r\n          role: '',\r\n          address: '',\r\n          dateOfBirth: '',\r\n          profilePicturePath: null,\r\n        });\r\n        // Redirect to the notification page after user is added\r\n        navigate(`/Users/AddPermissions/${encrypt(res.data.userId)}`);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.response && err.response.status === 409) {\r\n          setMessage('Error: Email already in use. Please choose a different email.');\r\n        } else {\r\n          setMessage('Error adding User. Please try again.');\r\n        }\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\" au container mt-2\">\r\n      <div className='text-start mb-12 d-flex justify-content-between'>\r\n        {/* <h4>Add User</h4>\r\n        <button type=\"button\" className=\"btn btn-primary mb-3 \" onClick={onClickViewUser}>\r\n          View Users\r\n        </button> */}\r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleUserSubmit}>\r\n        {/* Username */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"firstName\" className=\"col-sm-1 col-form-label text-start\">\r\n            FirstName<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Enter FirstName\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Lastname */}\r\n          <label htmlFor=\"lastName\" className=\"col-sm-1 col-form-label text-end\">\r\n            LastName<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Enter lastName\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Mobile Number */}\r\n          <label htmlFor=\"mobileNo\" className=\"col-sm-1 col-form-label text-start\">\r\n            MobileNo<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"mobileNo\"\r\n              name=\"mobileNo\"\r\n              placeholder=\"Enter Mobile No.\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"address\" className=\"col-sm-1 col-form-label text-end\">\r\n            Address<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"address\"\r\n              className=\"form-control\"\r\n              id=\"address\"\r\n              name=\"address\"\r\n              placeholder=\"Enter Address\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Date of Birth */}\r\n          <label htmlFor=\"dateOfBirth\" className=\"col-sm-1 col-form-label text-end\">\r\n            DOB<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dateOfBirth\"\r\n              name=\"dateOfBirth\"\r\n              placeholder=\"Enter Date Of Birth\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {/* Email */}\r\n          <label htmlFor=\"email\" className=\"col-sm-1 col-form-label text-end\">\r\n            Email<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div className=\"row mb-3\">\r\n          {/* <label htmlFor=\"password\" className=\"col-sm-1 col-form-label text-start\"> \r\n            Password: \r\n          </label> \r\n          <div className=\"col-sm-3\"> \r\n            <input \r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              placeholder=\"Enter password\" \r\n              required \r\n              onChange={handleInputChange} \r\n            /> \r\n          </div> */}\r\n\r\n          {/* Department */}\r\n\r\n\r\n          <label htmlFor=\"departmentName\" className=\"col-sm-1 col-form-label text-start\">\r\n            Department<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div\r\n            className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"departmentName\"\r\n              name=\"departmentName\"\r\n\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select department</option>\r\n              {departments.map(dep => (\r\n                <option key={dep.id} value={dep.departmentName}>{dep.departmentName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* Designation */}\r\n          <label htmlFor=\"roleName\" className=\"col-sm-1 col-form-label text-start\">\r\n            Designation<span className=\"text-danger\">  * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"roleName\"\r\n              name=\"roleName\"\r\n\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Role</option>\r\n              {Roles.map(role => (\r\n                <option key={role.roleId} value={role.role}>{role.role}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Confirm Password \r\n          <label htmlFor=\"confirmPassword\" className=\"col-sm-3 col-form-label text-end\"> \r\n            Confirm Password: \r\n          </label> \r\n          <div className=\"col-sm-3\"> \r\n            <input \r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"confirmPassword\" \r\n              name=\"confirmPassword\" \r\n              placeholder=\"Confirm password\" \r\n              required \r\n              onChange={handleInputChange} \r\n            /> */}\r\n          {/* </div> */}\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-3\"></div>\r\n          <div className=\"col-sm-9 text-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n              {loading ? <><Spinner animation=\"border\" size='sm' />Adding User...</> : \" Add User\"}\r\n\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","AddUser","loading","setLoading","useState","departments","setDepartments","Roles","setRoles","formData","setFormData","firstName","lastName","email","password","autoGenPass","mobileNo","departmentName","role","address","dateOfBirth","profilePicturePath","message","setMessage","useEffect","async","response","axios","get","error","fetchDepartments","fetchRoles","navigate","useNavigate","handleInputChange","e","name","value","type","target","prevData","files","_jsxs","className","children","_jsx","concat","includes","onSubmit","event","preventDefault","currentDate","Date","toISOString","split","post","then","res","userId","catch","err","status","htmlFor","id","placeholder","required","onChange","map","dep","roleId","disabled","_Fragment","Spinner","animation","size"],"sourceRoot":""}
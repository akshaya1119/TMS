{"version":3,"file":"static/js/5217.131eb4ed.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Department/Role.js","views/pages/SettingsFol/PersonalDetails.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import React from 'react';\r\nimport { Button, Form } from 'react-bootstrap'; // Import Collapse \r\nimport PropTypes from 'prop-types'; // Import PropTypes \r\n\r\n\r\nconst Designation = ({ designations, handleEdit, handleEditSubmitDesignation, newDesignation, setNewDesignation, editItem, searchQuery }) => {\r\n\r\n    return (\r\n        <div className=\"container py-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-lg-7 mx-auto bg-white rounded shadow\">\r\n                    <div className=\"table-responsive\">\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr className=\"table-header mt-3\">\r\n                                    <th scope=\"col\" className=\"col-3\">S.No</th>\r\n                                    <th scope=\"col\" className=\"col-6\">Designation</th>\r\n                                    <th scope=\"col\" className=\"col-3\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {designations\r\n                                    .filter((designation) => designation.designationName?.toLowerCase().includes(searchQuery.toLowerCase()))\r\n                                    .map((designation) => (\r\n                                        <tr key={designation.designationId} className=\"table-row mt-1\">\r\n\r\n                                            <td className=\"col col-3\" data-label=\"SNo.\">{designation.designationId}</td>\r\n                                            {/* <td className=\"col col-6\" data-label=\"Designation\">{designation.designationName}</td> \r\n                                            <td className=\"col col-3\" data-label=\"Actions\">  */}\r\n                                            {editItem && editItem.designationId === designation.designationId ? (\r\n\r\n                                                // <Form onSubmit={(e) => handleEditSubmitDesignation(e, designation.designationId, newDesignation)}> \r\n                                                <>\r\n                                                    <td className=\"col col-6\">\r\n                                                        <input\r\n                                                            className=\"form-control\"\r\n                                                            type=\"text\"\r\n                                                            value={newDesignation || designation.designationName}\r\n                                                            onChange={(e) => setNewDesignation(e.target.value)}\r\n                                                        />\r\n                                                    </td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button onClick={(e) => handleEditSubmitDesignation(e, designation.designationId, newDesignation)} variant=\"success\" size=\"sm\">\r\n                                                            Save\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n                                                // </Form> \r\n                                            ) : (\r\n                                                <>\r\n                                                    <td className=\"col col-6\" data-label=\"Designation\">{designation.designationName}</td>\r\n                                                    <td className=\"col col-3\">\r\n                                                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(designation)}>\r\n                                                            <i className=\"fa-solid fa-pencil\"></i>\r\n                                                        </Button>\r\n                                                    </td>\r\n                                                </>\r\n                                            )}\r\n\r\n                                        </tr>\r\n\r\n\r\n                                    ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    );\r\n};\r\nDesignation.propTypes = { // Define prop types \r\n    designations: PropTypes.array.isRequired,\r\n    handleEdit: PropTypes.func.isRequired,\r\n    handleEditSubmitDesignation: PropTypes.func.isRequired,\r\n    newDesignation: PropTypes.string.isRequired,\r\n    setNewDesignation: PropTypes.func.isRequired,\r\n    searchQuery: PropTypes.func.isRequired,\r\n    editItem: PropTypes.object,\r\n};\r\nexport default Designation;","import React, { useState, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSecurity } from './../../../context/Security';\r\nimport { useUser } from './../../../context/UserContext';\r\nimport Designation from 'src/views/Department/Role';\r\n\r\n\r\nconst departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst designationapi = process.env.REACT_APP_API_DESIGNATION\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\n\r\nfunction PersonalDetails() {\r\n\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const { user } = useUser();\r\n    const { decrypt } = useSecurity();\r\n    const [departments, setDepartments] = useState([]);\r\n    const [Designations, setDesignations] = useState([]);\r\n    const decryptid = decrypt(user?.userId);\r\n    const [formData, setFormData] = useState({\r\n\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        //confirmPassword: '',\r\n        mobileNo: '',\r\n        departmentName: '',\r\n        role: '',\r\n        designationName:'',\r\n        address: '',\r\n        dateOfBirth: '',\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${userapi}/${decryptid}`)\r\n            .then(res => {\r\n                setFormData(res.data);\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }, [decryptid]);\r\n\r\n    useEffect(() => {\r\n        async function fetchDepartments() {\r\n            try {\r\n                const response = await axios.get(departmentapi);\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        }\r\n\r\n        fetchDepartments();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchDesignations() {\r\n            try {\r\n                const response = await axios.get(designationapi);\r\n                setDesignations(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching Designation:', error);\r\n            }\r\n        }\r\n\r\n        fetchDesignations();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: type === 'file' ? e.target.files : value,\r\n        }));\r\n    };\r\n\r\n    function handleUserSubmit(event) {\r\n        event.preventDefault();\r\n        axios.put(`${userapi}/${decryptid}`, formData)\r\n            .then(res => {\r\n                console.log(res);\r\n                setMessage('User updated successfully!');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleUserSubmit}>\r\n\r\n            {message && (\r\n                <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} htmlFor=\"firstName\">\r\n                    <Form.Label>FirstName</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"Enter FirstName\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.firstName}\r\n                        disabled />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"lastName\">\r\n                    <Form.Label>LastName</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        placeholder=\"Enter lastName\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.lastName}\r\n                        disabled />\r\n\r\n\r\n                </Form.Group>\r\n\r\n\r\n            </Row>\r\n\r\n\r\n            <Row className=\"mb-3\">\r\n\r\n                <Form.Group as={Col} htmlFor=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.email}\r\n                        disabled />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"dateOfBirth\">\r\n                    <Form.Label>DOB</Form.Label>\r\n                    <Form.Control type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"dateOfBirth\"\r\n                        name=\"dateOfBirth\"\r\n                        placeholder=\"Enter Date Of Birth\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.dateOfBirth}\r\n                        disabled />\r\n                </Form.Group>\r\n            </Row>\r\n\r\n            <Form.Group className=\"mb-3\" htmlFor=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type=\"address\"\r\n                    className=\"form-control\"\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    placeholder=\"Enter Address\"\r\n                    required\r\n                    onChange={handleInputChange}\r\n                    value={formData.address} />\r\n            </Form.Group>\r\n\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} htmlFor=\"mobileNo\">\r\n                    <Form.Label>MobileNo</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"mobileNo\"\r\n                        name=\"mobileNo\"\r\n                        placeholder=\"Enter Mobile No.\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.mobileNo} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"departmentName\">\r\n                    <Form.Label>Department</Form.Label>\r\n                    <div className=\"\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            id=\"departmentName\"\r\n                            name=\"departmentName\"\r\n                            value={formData.departmentName}  // Set value attribute to formData.departmentName\r\n                            required\r\n                            onChange={handleInputChange}      // Use handleInputChange to update the formData\r\n                        >\r\n                            {departments.map(dep => (\r\n                                <option key={dep.id} value={dep.departmentName}>{dep.departmentName}</option> // Set value to dep.departmentName\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} htmlFor=\"designationId\">\r\n                    <Form.Label>Designation</Form.Label>\r\n\r\n\r\n                    <div className=\"\">\r\n                        <select\r\n                            type=\"text\"\r\n                            className=\"form-select\"\r\n                            id=\"designationName\"\r\n                            name=\"designationName\"\r\n\r\n                            required\r\n                            onChange={handleInputChange}\r\n                        >\r\n\r\n                            {Designations.map(designation => (\r\n                                <option key={designation.designationId} value={designation.designationName}>{designation.designationName}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                </Form.Group>\r\n            </Row>\r\n\r\n\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PersonalDetails;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","_ref","designations","handleEdit","handleEditSubmitDesignation","newDesignation","setNewDesignation","editItem","searchQuery","_jsx","className","children","_jsxs","scope","filter","designation","_designation$designat","designationName","toLowerCase","includes","map","designationId","_Fragment","type","value","onChange","e","target","Button","onClick","variant","size","userapi","message","setMessage","useState","user","useUser","departments","setDepartments","Designations","setDesignations","decryptid","userId","formData","setFormData","firstName","lastName","email","password","mobileNo","departmentName","role","address","dateOfBirth","useEffect","axios","get","concat","then","res","catch","err","async","response","error","fetchDepartments","fetchDesignations","handleInputChange","name","prevData","files","Form","onSubmit","event","preventDefault","put","Row","Group","as","Col","htmlFor","Label","Control","id","placeholder","required","disabled","dep","_excluded","useButtonProps","_ref2","tagName","href","rel","tabIndex","meta","handleClick","trim","isTrivialHref","stopPropagation","undefined","onKeyDown","key","React","ref","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}
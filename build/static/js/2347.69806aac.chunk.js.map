{"version":3,"file":"static/js/2347.69806aac.chunk.js","mappings":"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","sources":["context/Security.jsx","views/Users/AddUser.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import axios from \"axios\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport './AddUser.css';\r\nimport { Spinner, Col } from \"react-bootstrap\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useSecurity } from \"./../../context/Security\";\r\nimport { useUser } from \"src/context/UserContext\";\r\n\r\n\r\nconst departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst base = process.env.REACT_APP_BASE_API_URL;\r\nconst designationapi= process.env.REACT_APP_API_DESIGNATION;\r\nconst userapi= process.env.REACT_APP_API_USERS;\r\n\r\nconst onClickViewUser = () => {\r\n  window.location.href = './AllUsers';\r\n}\r\n\r\nconst AddUser = () => {\r\n  const {encrypt} = useSecurity();\r\n  const [loading, setLoading] = useState(false);\r\n  const [departments, setDepartments] = useState([]);\r\n  const {user} = useUser();\r\n  const [Roles, setRoles] = useState([]);\r\n  const [designations, setDesignation] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n    autoGenPass: true,\r\n    mobileNo: '',\r\n    departmentId: '',\r\n    roleId: '',\r\n    designationId: '',\r\n    address: '',\r\n    dateOfBirth: '',\r\n    profilePicturePath: null,\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  const [todayDate, setTodayDate] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchDepartments() {\r\n      try {\r\n        const response = await axios.get(departmentapi,{\r\n          headers:{\r\n            Authorization : `Bearer ${user?.token}`,\r\n          }\r\n        });\r\n        setDepartments(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching departments:', error);\r\n      }\r\n    }\r\n\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split('T')[0];\r\n    setTodayDate(today);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchRoles() {\r\n      try {\r\n        const response = await axios.get(`${base}/Roles`,{\r\n          headers:{\r\n            Authorization : `Bearer ${user?.token}`,\r\n          }\r\n        });\r\n        setRoles(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Roles:', error);\r\n      }\r\n    }\r\n\r\n    fetchRoles();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchDesignation() {\r\n      try {\r\n        const response = await axios.get(designationapi,{\r\n          headers:{\r\n            Authorization : `Bearer ${user?.token}`,\r\n          }\r\n        });\r\n\r\n        setDesignation(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Designation:', error);\r\n      }\r\n    }\r\n\r\n    fetchDesignation();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'file' ? e.target.files : value,\r\n    }));\r\n  };\r\n\r\n\r\n  const handleKeyPress = (event) => {\r\n    if (!/[0-9]/.test(event.key)) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    // Simple regex for email validation\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n\r\n  function handleUserSubmit(event) {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    // Validate Date of Birth\r\n    // const currentDate = new Date().toISOString().split('T')[0];\r\n    // if (formData.dateOfBirth > currentDate) {\r\n    //   setMessage('Date of Birth must be smaller than the current date.');\r\n    //   return;\r\n    // }\r\n\r\n    if (formData.mobileNo.length !== 10) {\r\n      setMessage('Mobile number must be exactly 10 digits long.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    if (!validateEmail(formData.email)) {\r\n      setMessage('Email address is in an incorrect format.');\r\n      setLoading(false);\r\n      return;\r\n    }\r\n\r\n    axios.post(userapi, formData,{\r\n      headers:{\r\n        Authorization : `Bearer ${user?.token}`,\r\n      }\r\n    })\r\n      .then(res => {\r\n        setMessage('User added successfully!');\r\n        setLoading(false);\r\n        setFormData({\r\n          firstName: '',\r\n          lastName: '',\r\n          email: '',\r\n          password: '',\r\n          autoGenPass: true,\r\n          mobileNo: '',\r\n          departmentId: '',\r\n          roleId: '',\r\n          designationId: '',\r\n          address: '',\r\n          dateOfBirth: '',\r\n          profilePicturePath: null,\r\n        });\r\n        // Redirect to the notification page after user is added\r\n        navigate(`/Users/AddPermissions/${encrypt(res.data.userId)}`);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        if (err.response && err.response.status === 409) {\r\n          setMessage('Error: Email already in use. Please choose a different email.');\r\n        } else {\r\n          setMessage('Error adding User. Please try again.');\r\n        }\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\" au container mt-2\">\r\n      <div className='text-start mb-12 d-flex justify-content-between'>\r\n      \r\n      </div>\r\n\r\n      {message && (\r\n        <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleUserSubmit}>\r\n        {/* Username */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"firstName\" className=\"col-sm-1 col-form-label text-start\">\r\n            First Name<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"firstName\"\r\n              name=\"firstName\"\r\n              placeholder=\"Enter First Name\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Lastname */}\r\n          <label htmlFor=\"lastName\" className=\"col-sm-1 col-form-label text-end\">\r\n            Last Name<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"lastName\"\r\n              name=\"lastName\"\r\n              placeholder=\"Enter Last Name\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Mobile Number */}\r\n          <label htmlFor=\"mobileNo\" className=\"col-sm-1 col-form-label text-start\">\r\n            MobileNo<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"mobileNo\"\r\n              name=\"mobileNo\"\r\n              placeholder=\"Enter Mobile No.\"\r\n              required\r\n              onChange={handleInputChange}\r\n              onKeyPress={handleKeyPress}\r\n              maxLength=\"10\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n        {/* Address */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"address\" className=\"col-sm-1 col-form-label text-end\">\r\n            Address<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"address\"\r\n              className=\"form-control\"\r\n              id=\"address\"\r\n              name=\"address\"\r\n              placeholder=\"Enter Address\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n\r\n          {/* Date of Birth */}\r\n          <label htmlFor=\"dateOfBirth\" className=\"col-sm-1 col-form-label text-end\">\r\n            DOB<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dateOfBirth\"\r\n              name=\"dateOfBirth\"\r\n              placeholder=\"Enter Date Of Birth\"\r\n              required\r\n              max={todayDate}\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {/* Email */}\r\n          <label htmlFor=\"email\" className=\"col-sm-1 col-form-label text-end\">\r\n            Email<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter email\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Password */}\r\n        <div className=\"row mb-3\">\r\n          {/* <label htmlFor=\"password\" className=\"col-sm-1 col-form-label text-start\"> \r\n            Password: \r\n          </label> \r\n          <div className=\"col-sm-3\"> \r\n            <input \r\n              type=\"password\" \r\n              className=\"form-control\" \r\n              id=\"password\" \r\n              name=\"password\" \r\n              placeholder=\"Enter password\" \r\n              required \r\n              onChange={handleInputChange} \r\n            /> \r\n          </div> */}\r\n\r\n          {/* Department */}\r\n\r\n\r\n          <label htmlFor=\"departmentId\" className=\"col-sm-1 col-form-label text-start\">\r\n            Department<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div\r\n            className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"departmentId\"\r\n              name=\"departmentId\"\r\n\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select department</option>\r\n              {departments.map(dep => (\r\n                <option key={dep.departmentId} value={dep.departmentId}>{dep.departmentName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          {/* Role */}\r\n          <label htmlFor=\"roleId\" className=\"col-sm-1 col-form-label text-end\">\r\n            Role<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"roleId\"\r\n              name=\"roleId\"\r\n\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Role</option>\r\n              {Roles.map(role => (\r\n                <option key={role.roleId} value={role.roleId}>{role.role}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n\r\n          {/* Designation */}\r\n          <label htmlFor=\"designationId\" className=\"col-sm-1 col-form-label text-end\">\r\n          Designation<span className=\"text-danger\">*</span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"designationId\"\r\n              name=\"designationId\"\r\n\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Designation</option>\r\n              {designations.map(designation => (\r\n                <option key={designation.designationId} value={designation.designationId}>{designation.designationName}</option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-3\"></div>\r\n          <div className=\"col-sm-9 text-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={loading}>\r\n              {loading ? <><Spinner animation=\"border\" size='sm' />Adding User...</> : \" Add User\"}\r\n\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","CryptoJS","toString","replace","decrypt","encryptedData","Utf8","useSecurity","useContext","AddUser","loading","setLoading","useState","departments","setDepartments","user","useUser","Roles","setRoles","designations","setDesignation","formData","setFormData","firstName","lastName","email","password","autoGenPass","mobileNo","departmentId","roleId","designationId","address","dateOfBirth","profilePicturePath","message","setMessage","todayDate","setTodayDate","useEffect","async","response","axios","get","headers","Authorization","concat","token","error","console","fetchDepartments","today","Date","toISOString","split","fetchRoles","fetchDesignation","navigate","useNavigate","handleInputChange","e","name","value","type","target","prevData","files","_jsxs","className","children","_jsx","includes","role","onSubmit","event","preventDefault","length","test","post","then","res","userId","catch","err","log","status","htmlFor","id","placeholder","required","onChange","onKeyPress","key","maxLength","max","map","dep","departmentName","designation","designationName","disabled","_Fragment","Spinner","animation","size"],"sourceRoot":""}
{"version":3,"file":"static/js/5217.b3e276e5.chunk.js","mappings":"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","sources":["context/Security.jsx","views/pages/SettingsFol/PersonalDetails.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/react-bootstrap/esm/Button.js"],"sourcesContent":["// SecurityContext.jsx \r\nimport { createContext, useContext } from 'react'; \r\nimport CryptoJS from 'crypto-js'; \r\nconst SecretKey = process.env.REACT_APP_SECRET_KEY || \"ghjsfysdg123\"; \r\n \r\n \r\n// Encryption and decryption functions using AES \r\nconst encrypt = (data) => { \r\n  console.log('Data to encrypt:', data); \r\n  const encryptedData = CryptoJS.AES.encrypt(data.toString(), SecretKey).toString(); \r\n  console.log('Encrypted data:', encryptedData); \r\n  return encryptedData.replace(/\\//g, ';'); \r\n}; \r\n \r\nconst decrypt = (encryptedData) => { \r\n  if (typeof encryptedData !== 'string') { \r\n    // If encryptedData is not a string, return it as is \r\n    return encryptedData; \r\n  } \r\n  encryptedData = encryptedData.replace(/;/g, '/'); \r\n  const decryptedData = CryptoJS.AES.decrypt(encryptedData, SecretKey).toString(CryptoJS.enc.Utf8); \r\n  return decryptedData; \r\n}; \r\n \r\n// Create the SecurityContext \r\nconst SecurityContext = createContext({ encrypt, decrypt }); \r\n \r\n// Custom hook to use the SecurityContext \r\nexport const useSecurity = () => useContext(SecurityContext); \r\n \r\nexport default SecurityContext;\r\n","import React, { useState, useEffect } from 'react'\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Row from 'react-bootstrap/Row';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useSecurity } from './../../../context/Security';\r\nimport { useUser } from './../../../context/UserContext';\r\n\r\n\r\nconst departmentapi = process.env.REACT_APP_API_DEPARTMENTS;\r\nconst roleapi = process.env.REACT_APP_API_ROLES;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\n\r\nfunction PersonalDetails() {\r\n\r\n\r\n    const [message, setMessage] = useState(null);\r\n    const { user } = useUser();\r\n    const { decrypt } = useSecurity();\r\n    const [departments, setDepartments] = useState([]);\r\n    const [Roles, setRoles] = useState([]);\r\n    const decryptid = decrypt(user?.userId);\r\n    const [formData, setFormData] = useState({\r\n\r\n        firstName: '',\r\n        lastName: '',\r\n        email: '',\r\n        password: '',\r\n        //confirmPassword: '',\r\n        mobileNo: '',\r\n        departmentName: '',\r\n        role: '',\r\n        address: '',\r\n        dateOfBirth: '',\r\n    });\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${userapi}/${decryptid}`)\r\n            .then(res => {\r\n                setFormData(res.data);\r\n                console.log(res.data)\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }, [decryptid]);\r\n\r\n    useEffect(() => {\r\n        async function fetchDepartments() {\r\n            try {\r\n                const response = await axios.get(departmentapi);\r\n                setDepartments(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching departments:', error);\r\n            }\r\n        }\r\n\r\n        fetchDepartments();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function fetchRoles() {\r\n            try {\r\n                const response = await axios.get(roleapi);\r\n                setRoles(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching Roles:', error);\r\n            }\r\n        }\r\n\r\n        fetchRoles();\r\n    }, []);\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value, type } = e.target;\r\n        setFormData((prevData) => ({\r\n            ...prevData,\r\n            [name]: type === 'file' ? e.target.files : value,\r\n        }));\r\n    };\r\n\r\n    function handleUserSubmit(event) {\r\n        event.preventDefault();\r\n        axios.put(`${userapi}/${decryptid}`, formData)\r\n            .then(res => {\r\n                console.log(res);\r\n                setMessage('User updated successfully!');\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                setMessage('Error updating user. Please try again.');\r\n            });\r\n    }\r\n\r\n    return (\r\n        <Form onSubmit={handleUserSubmit}>\r\n\r\n            {message && (\r\n                <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n                    {message}\r\n                </div>\r\n            )}\r\n\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} htmlFor=\"firstName\">\r\n                    <Form.Label>FirstName</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"Enter FirstName\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.firstName}\r\n                        disabled />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"lastName\">\r\n                    <Form.Label>LastName</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        placeholder=\"Enter lastName\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.lastName}\r\n                        disabled />\r\n\r\n\r\n                </Form.Group>\r\n\r\n\r\n            </Row>\r\n\r\n\r\n            <Row className=\"mb-3\">\r\n\r\n                <Form.Group as={Col} htmlFor=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter email\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.email}\r\n                        disabled />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"dateOfBirth\">\r\n                    <Form.Label>DOB</Form.Label>\r\n                    <Form.Control type=\"date\"\r\n                        className=\"form-control\"\r\n                        id=\"dateOfBirth\"\r\n                        name=\"dateOfBirth\"\r\n                        placeholder=\"Enter Date Of Birth\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.dateOfBirth}\r\n                        disabled />\r\n                </Form.Group>\r\n            </Row>\r\n\r\n            <Form.Group className=\"mb-3\" htmlFor=\"address\">\r\n                <Form.Label>Address</Form.Label>\r\n                <Form.Control type=\"address\"\r\n                    className=\"form-control\"\r\n                    id=\"address\"\r\n                    name=\"address\"\r\n                    placeholder=\"Enter Address\"\r\n                    required\r\n                    onChange={handleInputChange}\r\n                    value={formData.address} />\r\n            </Form.Group>\r\n\r\n            <Row className=\"mb-3\">\r\n                <Form.Group as={Col} htmlFor=\"mobileNo\">\r\n                    <Form.Label>MobileNo</Form.Label>\r\n                    <Form.Control type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"mobileNo\"\r\n                        name=\"mobileNo\"\r\n                        placeholder=\"Enter Mobile No.\"\r\n                        required\r\n                        onChange={handleInputChange}\r\n                        value={formData.mobileNo} />\r\n                </Form.Group>\r\n\r\n                <Form.Group as={Col} htmlFor=\"departmentName\">\r\n                    <Form.Label>Department</Form.Label>\r\n                    <div className=\"\">\r\n                        <select\r\n                            className=\"form-select\"\r\n                            id=\"departmentName\"\r\n                            name=\"departmentName\"\r\n                            value={formData.departmentName}  // Set value attribute to formData.departmentName\r\n                            required\r\n                            onChange={handleInputChange}      // Use handleInputChange to update the formData\r\n                        >\r\n                            {departments.map(dep => (\r\n                                <option key={dep.id} value={dep.departmentName}>{dep.departmentName}</option> // Set value to dep.departmentName\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </Form.Group>\r\n                <Form.Group as={Col} htmlFor=\"role\">\r\n                    <Form.Label>Designation</Form.Label>\r\n\r\n\r\n                    <div className=\"\">\r\n                        <select\r\n                            type=\"text\"\r\n                            className=\"form-select\"\r\n                            id=\"role\"\r\n                            name=\"role\"\r\n\r\n                            required\r\n                            onChange={handleInputChange}\r\n                        >\r\n\r\n                            {Roles.map(role => (\r\n                                <option key={role.roleId} value={role.role}>{role.role}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n\r\n\r\n                </Form.Group>\r\n            </Row>\r\n\r\n\r\n\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default PersonalDetails;","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;"],"names":["SecretKey","process","REACT_APP_SECRET_KEY","SecurityContext","createContext","encrypt","data","console","log","encryptedData","CryptoJS","toString","replace","decrypt","Utf8","useSecurity","useContext","userapi","message","setMessage","useState","user","useUser","departments","setDepartments","Roles","setRoles","decryptid","userId","formData","setFormData","firstName","lastName","email","password","mobileNo","departmentName","role","address","dateOfBirth","useEffect","axios","get","concat","then","res","catch","err","async","response","error","fetchDepartments","fetchRoles","handleInputChange","e","name","value","type","target","prevData","files","_jsxs","Form","onSubmit","event","preventDefault","put","children","_jsx","className","includes","Row","Group","as","Col","htmlFor","Label","Control","id","placeholder","required","onChange","disabled","map","dep","roleId","Button","variant","_excluded","useButtonProps","_ref2","tagName","href","rel","onClick","tabIndex","meta","handleClick","trim","isTrivialHref","stopPropagation","undefined","onKeyDown","key","React","_ref","ref","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","displayName","bsPrefix","size","active","prefix","useBootstrapPrefix","classNames"],"sourceRoot":""}
{"version":3,"file":"static/js/5914.f6c4b863.chunk.js","mappings":"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","sources":["views/pages/Password/ForgotPassword.js","../node_modules/react-bootstrap/esm/CardGroup.js","views/pages/login/PageLayout.js","../node_modules/react-bootstrap/esm/AlertHeading.js","../node_modules/react-bootstrap/esm/AlertLink.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CardFooter.js","../node_modules/react-bootstrap/esm/CardHeader.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/CardImgOverlay.js","../node_modules/react-bootstrap/esm/CardLink.js","../node_modules/react-bootstrap/esm/CardSubtitle.js","../node_modules/react-bootstrap/esm/CardText.js","../node_modules/react-bootstrap/esm/CardTitle.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardBody.js","../node_modules/react-bootstrap/esm/CardHeaderContext.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Col, Container, Row, Form, InputGroup, Button, Alert } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport './../login/Login.css';\r\nimport { Link } from 'react-router-dom';\r\nimport PageLayout from '../login/PageLayout';\r\n\r\nconst forgetpasswordapi = process.env.REACT_APP_API_FORGOT_PASSWORD;\r\n\r\nconst ForgotPassword = () => {\r\n  const theme = '#FFC727';\r\n  const [email, setEmail] = useState('');\r\n  const password = 'password';\r\n  const [emailError, setEmailError] = useState('');\r\n  const [successMessage, setSuccessMesage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const handleEmailChange = (value) => {\r\n    setEmail(value);\r\n    setEmailError(!value ? 'Email is required' : '');\r\n  };\r\n\r\n  const handleResetPassword = async () => {\r\n    if (!email) {\r\n      setEmailError('Email is required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setLoading(true);\r\n      // Make an API call to request password reset\r\n      const response = await axios.put(forgetpasswordapi, { email, password });\r\n\r\n      if (response && response.data) {\r\n        setSuccessMesage('Password has been sent to your email successfully')\r\n        console.log('Password reset email sent successfully');\r\n        // You can redirect the user to a confirmation page if needed\r\n      } else {\r\n        console.error('Invalid API response', response);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error while resetting password:', error);\r\n      // Handle error state or display error message to the user\r\n    }\r\n    finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PageLayout bgimg='bgimgforgotpass' theme={theme} >\r\n\r\n\r\n      <Container>\r\n        <Form>\r\n          <h1 className='text-center'>Forgot Password</h1>\r\n          <p className=\"text-center\">Enter your email address to reset your password</p>\r\n          {successMessage && <Alert variant=\"success\">{successMessage}</Alert>}\r\n          <div className=\"mb-3\">\r\n            {/* Email Input */}\r\n            <InputGroup hasValidation>\r\n              <Form.Control\r\n                placeholder=\"Email Address\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={(e) => handleEmailChange(e.target.value)}\r\n                type=\"email\"\r\n                isInvalid={!!emailError}\r\n                required\r\n              />\r\n              <Form.Control.Feedback type=\"invalid\">{emailError}</Form.Control.Feedback>\r\n            </InputGroup>\r\n          </div>\r\n          <Row >\r\n            <Col xs={6} className='align-items-start'>\r\n              {/* Reset Password Button */}\r\n              <Button color=\"primary\" className=\"px-4\" style={{ backgroundColor: theme }} onClick={handleResetPassword} disabled={loading}>\r\n                {loading ? 'Loading...' : 'Reset Password'}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={6} className='text-end fs-5'>\r\n              {/* Reset Password Button */}\r\n              <Link to=\"/Login\" style={{ color: theme }} className=\"px-4\" onClick={handleResetPassword}>\r\n                Login\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n    </PageLayout>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardGroup = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-group');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardGroup.displayName = 'CardGroup';\nexport default CardGroup;","// this page will render pages which have not dashboard\r\n\r\nimport React from 'react';\r\nimport { Card, CardBody, CardGroup, Col, Container, Row } from 'react-bootstrap';\r\n// import loginicon from './../../../assets/images/loginicon.png'\r\n// import logo from './../../../assets/images/logo.png'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nconst PageLayout = ({ children, bgimg, theme }) => {\r\n    return (\r\n        <div>\r\n            {/* Content specific to each page */}\r\n            <main className='blur-5'>\r\n                <div className=\"bg-body-tertiary min-vw-100 min-vh-100 d-flex align-items-center blur-5\">\r\n                    <Container fluid className='align-items-center loginbg ' >\r\n                        <Row className='align-items-center justify-content-center'>\r\n                            <Col md={8} lg={6} className={`d-flex vh-100 d-none d-lg-block ${bgimg} border-end border-4`}>\r\n                                {/* <img className='m-4' src={logo} alt=\"\" width='60px' /> */}\r\n                            </Col>\r\n                            {/* right of login page  */}\r\n                            <Col sm={8} md={7} lg={6} className='d-flex vh-100 align-items-center blur-5 shadow-left'>\r\n                                <CardGroup className='container  p-md-5 flex-column'>\r\n                                    <Card className='d-flex flex-row align-items-center justify-content-center gap-3 rounded mb-4 text-primary'>\r\n                                        {/* <img src={logo} alt=\"\" width='50px' /> */}\r\n                                        <h1 style={{color: theme}}>CUPL-Ticketing System</h1>\r\n                                    </Card>\r\n                                    <Card className=\"p-4 container rounded \">\r\n                                        <CardBody className='m-6'>\r\n                                            {/* cheldren cmponents */}\r\n                                            {children}\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </CardGroup>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n            </main>\r\n\r\n            {/* Common Footer or any other elements */}\r\n            {/* <footer> */}\r\n            {/* Your footer content */}\r\n            {/* </footer> */}\r\n        </div>\r\n    );\r\n};\r\nPageLayout.propTypes = {\r\n    children: PropTypes.node.isRequired, // Children should be a node and is required\r\n    bgimg: PropTypes.string.isRequired, // Children should be a node and is required\r\n    theme: PropTypes.string.isRequired, // Children should be a node and is required\r\n};\r\n\r\nexport default PageLayout;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH4,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-heading');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertHeading.displayName = 'AlertHeading';\nexport default AlertHeading;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AlertLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = Anchor,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'alert-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nAlertLink.displayName = 'AlertLink';\nexport default AlertLink;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AlertHeading from './AlertHeading';\nimport AlertLink from './AlertLink';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardFooter = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-footer');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardFooter.displayName = 'CardFooter';\nexport default CardFooter;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardHeaderContext from './CardHeaderContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardHeader = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-header');\n  const contextValue = useMemo(() => ({\n    cardHeaderBsPrefix: prefix\n  }), [prefix]);\n  return /*#__PURE__*/_jsx(CardHeaderContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, prefix)\n    })\n  });\n});\nCardHeader.displayName = 'CardHeader';\nexport default CardHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImg = /*#__PURE__*/React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  variant,\n  as: Component = 'img',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(variant ? `${prefix}-${variant}` : prefix, className),\n    ...props\n  });\n});\nCardImg.displayName = 'CardImg';\nexport default CardImg;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardImgOverlay = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-img-overlay');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardImgOverlay.displayName = 'CardImgOverlay';\nexport default CardImgOverlay;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardLink = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'a',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-link');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardLink.displayName = 'CardLink';\nexport default CardLink;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH6 = divWithClassName('h6');\nconst CardSubtitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH6,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-subtitle');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardSubtitle.displayName = 'CardSubtitle';\nexport default CardSubtitle;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'p',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardText.displayName = 'CardText';\nexport default CardText;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport divWithClassName from './divWithClassName';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DivStyledAsH5 = divWithClassName('h5');\nconst CardTitle = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = DivStyledAsH5,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-title');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardTitle.displayName = 'CardTitle';\nexport default CardTitle;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport CardBody from './CardBody';\nimport CardFooter from './CardFooter';\nimport CardHeader from './CardHeader';\nimport CardImg from './CardImg';\nimport CardImgOverlay from './CardImgOverlay';\nimport CardLink from './CardLink';\nimport CardSubtitle from './CardSubtitle';\nimport CardText from './CardText';\nimport CardTitle from './CardTitle';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Card = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  bg,\n  text,\n  border,\n  body = false,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'card');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, bg && `bg-${bg}`, text && `text-${text}`, border && `border-${border}`),\n    children: body ? /*#__PURE__*/_jsx(CardBody, {\n      children: children\n    }) : children\n  });\n});\nCard.displayName = 'Card';\nexport default Object.assign(Card, {\n  Img: CardImg,\n  Title: CardTitle,\n  Subtitle: CardSubtitle,\n  Body: CardBody,\n  Link: CardLink,\n  Text: CardText,\n  Header: CardHeader,\n  Footer: CardFooter,\n  ImgOverlay: CardImgOverlay\n});","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst CardBody = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'card-body');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nCardBody.displayName = 'CardBody';\nexport default CardBody;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardHeaderContext';\nexport default context;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["ForgotPassword","theme","email","setEmail","useState","emailError","setEmailError","successMessage","setSuccessMesage","loading","setLoading","handleResetPassword","async","response","axios","put","process","password","data","console","log","error","_jsx","PageLayout","bgimg","children","Container","_jsxs","Form","className","Alert","variant","InputGroup","hasValidation","Control","placeholder","autoComplete","value","onChange","e","handleEmailChange","target","type","isInvalid","required","Feedback","Row","Col","xs","Button","color","style","backgroundColor","onClick","disabled","Link","to","CardGroup","React","_ref","ref","bsPrefix","as","Component","props","useBootstrapPrefix","classNames","displayName","fluid","md","lg","concat","sm","Card","CardBody","DivStyledAsH4","divWithClassName","AlertHeading","AlertLink","Anchor","uncontrolledProps","show","closeLabel","closeVariant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","handleClose","useEventCallback","Transition","alert","role","undefined","CloseButton","unmountOnExit","in","Object","assign","Heading","size","active","buttonProps","tagName","useButtonProps","href","CardFooter","CardHeader","contextValue","useMemo","cardHeaderBsPrefix","CardHeaderContext","Provider","CardImg","CardImgOverlay","CardLink","DivStyledAsH6","CardSubtitle","CardText","DivStyledAsH5","CardTitle","bg","text","border","body","Img","Title","Subtitle","Body","Text","Header","Footer","ImgOverlay","context","propTypes","PropTypes","ariaLabel","suffix","InputGroupText","InputGroupContext","Radio","FormCheckInput","Checkbox","p"],"sourceRoot":""}
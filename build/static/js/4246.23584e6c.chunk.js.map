{"version":3,"file":"static/js/4246.23584e6c.chunk.js","mappings":"gXAYA,MA8eA,EAxekBA,KAChB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,KAAEC,IAASC,EAAAA,EAAAA,MAEVC,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAaC,IAAkBJ,EAAAA,EAAAA,UAAS,KACxCK,EAAUC,IAAeN,EAAAA,EAAAA,UAAS,KAClCO,EAAUC,IAAeR,EAAAA,EAAAA,UAAS,CACvCS,MAAOb,EAAKa,MACZC,SAAU,MACVC,MAAO,GACPC,WAAY,GACZX,WAAY,GACZY,OAAQ,OACRV,YAAa,GACbW,QAAS,GACTC,YAAa,GACbC,cAAe,GACfC,YAAa,QAERC,EAASC,IAAcnB,EAAAA,EAAAA,UAAS,OAwCvCoB,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IArErBC,2CAsERnB,EAAYgB,EAASI,KACvB,CAAE,MAAOC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,CACF,CAEAE,EAAe,GACd,KAEHT,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IAjFfC,iDAkFdvB,EAAcoB,EAASI,KACzB,CAAE,MAAOC,GACPC,QAAQD,MAAM,8BAA+BA,EAC/C,CACF,CAEAG,EAAiB,GAChB,KAEHV,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAMC,QAAiBC,EAAAA,EAAMC,IA7FdC,iDA8FfrB,EAAekB,EAASI,KAC1B,CAAE,MAAOC,GACPC,QAAQD,MAAM,+BAAgCA,EAChD,CACF,CAEAI,EAAkB,GACjB,IAGL,MAAMC,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAEG,QAAUH,EAGpC,GAAa,kBAATC,EAA0B,CAC5B,MAAMG,EAAmBhC,EAASiC,MAAKC,GAAYA,EAAS9B,QAAU0B,IAGhEK,EAAeL,EAAMM,gBAAkB7C,EAAKa,MAAMgC,cAGlDC,EAAgBF,EAAeH,EAAiBM,gBAAkC,OAAhBN,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBM,iBAAkB,GAG5GnC,GAAaoC,IAAQ,IAChBA,EACH,CAACV,GAAOC,EACRvB,WAAY8B,EACZ7B,OAAQ2B,EAAe,gBAAkB,UAE7C,MACEhC,GAAaoC,IAAQ,IAChBA,EACH,CAACV,GAAOC,KAEZ,GAMFf,EAAAA,EAAAA,YAAU,KACR,MAAMiB,EAAmBhC,EAASiC,MAAMC,GAAaA,EAAS9B,QAAUF,EAASS,gBAC3EwB,EAAejC,EAASS,cAAcyB,gBAAkB7C,EAAKa,MAAMgC,cACnEC,EAAgBF,EAAeH,EAAiBM,gBAAkC,OAAhBN,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBM,iBAAkB,GAE5GnC,GAAaoC,IAAQ,IAChBA,EACHhC,WAAY8B,EACZ7B,OAAQ2B,EAAe,gBAAkB,UACxC,GACF,CAACjC,EAASS,cAAeX,EAAUT,IAwEpC,OACEiD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mCAEd5B,IACC8B,EAAAA,EAAAA,KAAA,OAAKF,UAAS,SAAAG,OAAW/B,EAAQgC,SAAS,gBAAkB,gBAAkB,gBAAkBC,KAAK,QAAOJ,SACzG7B,KAIL2B,EAAAA,EAAAA,MAAA,QAAMO,SAtEiB/B,UACzBgC,EAAMC,iBACNvD,GAAW,GAEX,MAAMwD,EAAkBC,OAAOC,QAAQlD,GACpCmD,KAAIC,IAAA,IAAEC,EAAKzB,GAAMwB,EAAA,SAAAV,OAAQY,mBAAmBD,GAAI,KAAAX,OAAIY,mBAAmB1B,GAAM,IAC7E2B,KAAK,KAEFC,EAAiB,IAAIC,SAC3BR,OAAOC,QAAQlD,GAAU0D,SAAQC,IAAmB,IAAjBN,EAAKzB,GAAM+B,EAC5C,GAAY,gBAARN,GACF,GAAIzB,EACF,IAAK,IAAIgC,EAAI,EAAGA,EAAIhC,EAAMiC,OAAQD,IAChCJ,EAAeM,OAAO,cAAelC,EAAMgC,SAI/CJ,EAAeM,OAAOT,EAAKzB,EAC7B,IAGF,IACE,MAAMmC,QAAY/C,EAAAA,EAAMgD,KAAK,GAADtB,OAlLhBxB,4CAkL6B,KAAAwB,OAAIM,GAAmBQ,EAAgB,CAC9ES,QAAS,CACP,eAAgB,yBAIpB5C,QAAQ6C,IAAIH,GACZnD,EAAW,8BACXpB,GAAW,GA7Jb2E,IAAgB,CACd/D,MAAO,SACPO,QAAS,+BACTyD,SAAU,KACVC,KAAMC,EACNC,QAAO,EACPC,QAASA,IAAMC,OAAOC,SAAS,GAADhC,OAvChBxB,oCAuMdjB,EAAY,CACVC,MAAOb,EAAKa,MACZC,SAAU,MACVC,MAAO,GACPC,WAAY,GACZX,WAAY,GACZY,OAAQ,OACRV,YAAa,GACbW,QAAS,GACTC,YAAa,GACbC,cAAe,GACfC,YAAa,OAEfvB,EAAS,sBAADuD,OAAuBqB,EAAI5C,KAAKwD,QAC1C,CAAE,MAAOC,GACPvD,QAAQD,MAAMwD,GACdhE,EAAW,0CACXpB,GAAW,EACb,GAaqCgD,SAAA,EAEjCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EAEzBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,QAAQtC,UAAU,mCAAkCC,SAAC,aAGlEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACLvC,UAAU,eACVwC,GAAG,QACHpD,KAAK,QACLqD,YAAY,mBACZC,UAAQ,EACRrD,MAAOvC,EAAKa,MACZgF,SAAUzD,EACV0D,UAAQ,OAMZ7C,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,gBAAgBtC,UAAU,mCAAkCC,SAAA,CAAC,kBAC5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAE9CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,CACLC,QAASvF,EAASqD,KAAKmC,IAAK,CAC1BC,MAAOD,EAAMpF,MACb0B,MAAO0D,EAAMpF,UAEf0B,MAAO,CACL2D,MAAOvF,EAASS,cAChBmB,MAAO5B,EAASS,eAElByE,SAAWM,GACT/D,EAAkB,CAChBI,OAAQ,CAAEF,KAAM,gBAAiBC,MAAO4D,EAAe5D,SAG3D6D,cAAY,EACZT,YAAY,0BAWlB1C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,QAAQtC,UAAU,mCAAkCC,SAAA,CAAC,SAC7DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAErCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACLvC,UAAU,eACVwC,GAAG,QACHpD,KAAK,QACLqD,YAAY,cACZC,UAAQ,EACRC,SAAUzD,OAIda,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,WAAWtC,UAAU,mCAAkCC,SAAA,CAAC,YAC7DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAExCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,MAAA,UACEC,UAAU,cACVwC,GAAG,WACHpD,KAAK,WACLqD,YAAY,kBACZC,UAAQ,EACRC,SAAUzD,EAAkBe,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQiD,cAAY,EAAAlD,SAAC,qBACrBC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,MAAKY,SAAC,SACpBC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,SAAQY,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQb,MAAM,OAAMY,SAAC,kBAM3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,aAAatC,UAAU,mCAAkCC,SAAA,CAAC,eAC5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAE3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,CACLC,QAAS3F,EAAWyD,KAAKwC,IAAE,CACzBJ,MAAOI,EAAGjG,WACVkC,MAAO+D,EAAGjG,eAEZkC,MAAO,CACL2D,MAAOvF,EAASN,WAChBkC,MAAO5B,EAASN,YAElBwF,SAAWM,GACT/D,EAAkB,CAChBI,OAAQ,CAAEF,KAAM,aAAcC,MAAO4D,EAAe5D,SAGxD6D,cAAY,EACZT,YAAY,0BAIhBvC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,SAAStC,UAAU,mCAAkCC,SAAC,YAGrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,eACVwC,GAAG,SACHpD,KAAK,SACLC,MAAO5B,EAASM,OAChB2E,UAAQ,EACRC,SAAUzD,EACVmE,UAAQ,EACRT,UAAQ,UAOb7C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACxBF,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,cAActC,UAAU,mCAAkCC,SAAA,CAAC,gBAC5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAE5CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,CACLC,QAASzF,EAAYuD,KAAK0C,IAAE,CAC1BN,MAAOM,EAAGC,aACVlE,MAAOiE,EAAGC,iBAEZlE,MAAO,CACL2D,MAAOvF,EAASJ,YAChBgC,MAAO5B,EAASJ,aAElBsF,SAAWM,GACT/D,EAAkB,CAChBI,OAAQ,CAAEF,KAAM,cAAeC,MAAO4D,EAAe5D,SAGzD6D,cAAY,EACZT,YAAY,2BAIhB1C,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,UAAUtC,UAAU,mCAAkCC,SAAA,CAAC,YAC5DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAExCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACLvC,UAAU,eACVwC,GAAG,UACHpD,KAAK,UACLqD,YAAY,kBACZC,UAAQ,EACRC,SAAUzD,UAMhBa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,WAAWtC,UAAU,mCAAkCC,SAAC,gBAGrEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACLvC,UAAU,eACVwC,GAAG,WACHpD,KAAK,WACLqD,YAAY,YACZC,UAAQ,EACRC,SAAUzD,EACV0D,UAAQ,EACRvD,MAAM,SAKVa,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,aAAatC,UAAU,mCAAkCC,SAAC,gBAGzEC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEF,UAAU,eACVwC,GAAG,aACHpD,KAAK,aACLC,MAAO5B,EAASK,YAAc,GAC9B4E,UAAQ,EACRC,SAAUzD,EACVmE,UAAQ,EACRT,UAAQ,UAYd7C,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,SAAOuC,QAAQ,cAActC,UAAU,mCAAkCC,SAAA,CAAC,eAC7DC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,cAAaC,SAAC,YAE3CC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,YACEF,UAAU,eACVwC,GAAG,cACHpD,KAAK,cACLqD,YAAY,oBACZe,KAAK,IACLd,UAAQ,EACRC,SAAUzD,UAKhBa,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,SAAOoC,QAAQ,cAActC,UAAU,mCAAkCC,SAAC,kBAG1EC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,KAAA,SACEqC,KAAK,OACLvC,UAAU,eACVwC,GAAG,cACHpD,KAAK,cACLqE,UAAQ,EACRd,SAlUcxD,IACxBzB,GAAYoC,IAAQ,IACfA,EACH3B,YAAagB,EAAEG,OAAOoE,SACrB,UAmUC3D,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUC,SAAA,EACvBC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cACfE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,UAChCC,EAAAA,EAAAA,KAAA,UAAQqC,KAAK,SAASvC,UAAU,kBAAkB4C,SAAU5F,EAAQiD,SACjEjD,GAAU+C,EAAAA,EAAAA,MAAA4D,EAAAA,SAAA,CAAA1D,SAAA,EAAEC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAO,CAACC,UAAU,SAASC,KAAK,OAAO,uBAAuB,yBAMhF,C","sources":["views/Tickets/AddTicket.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useUser } from './../../context/UserContext';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Select from 'react-select';\r\nimport addNotification from \"react-push-notification\";\r\nimport greentick from './images/greentick.jpg';\r\n// import NotificationService from '../Nots/NotificationService';\r\nimport * as signalR from '@microsoft/signalr'; // Import SignalR\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst dashboardapi= process.env.REACT_APP_MY_SERVER;\r\nconst userapi = process.env.REACT_APP_API_USERS;\r\nconst TicketTypeapi = process.env.REACT_APP_API_TICKETTYPE;\r\nconst ProjectTypeapi = process.env.REACT_APP_API_PROJECTTYPE;\r\nconst Ticketapi = process.env.REACT_APP_API_TICKET;\r\n\r\nconst AddTicket = () => {\r\n  const navigate = useNavigate();\r\n  const { user } = useUser();\r\n  \r\n  const [loading, setLoading] = useState(false);\r\n  const [ticketType, setTicketType] = useState([]);\r\n  const [projectType, setProjectType] = useState([]);\r\n  const [Assignee, setAssignee] = useState([]);\r\n  const [formData, setFormData] = useState({\r\n    email: user.email,\r\n    priority: 'low',\r\n    title: '',\r\n    department: '',\r\n    ticketType: '',\r\n    status: 'Open',\r\n    projectType: '',\r\n    dueDate: '',\r\n    description: '',\r\n    assigneeEmail: '',\r\n    attachments: null\r\n  });\r\n  const [message, setMessage] = useState(null);\r\n  // const [hubConnection, setHubConnection] = useState(null); // State for SignalR connection\r\n\r\n  const ClickToNotify = () => {\r\n   \r\n\r\n    addNotification({\r\n      title: 'Ticket',\r\n      message: 'New ticket has been assigned',\r\n      duration: 11000,\r\n      icon: greentick,\r\n      native:true,\r\n      onClick: () => window.location= `${dashboardapi}`,\r\n\r\n    });\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   // Initialize SignalR connection\r\n  //   const connection = new signalR.HubConnectionBuilder()\r\n  //     .withUrl('https://localhost:7217/notificationHub/')\r\n  //     .build();\r\n\r\n  //   setHubConnection(connection);\r\n\r\n  //   connection\r\n  //     .start()\r\n  //     .then(() => console.log('SignalR Connected'))\r\n  //     .catch((error) => console.error('SignalR Connection Error: ', error));\r\n\r\n  //   return () => {\r\n  //     connection.stop();\r\n  //   };\r\n  // }, []);\r\n\r\n\r\n  // useEffect (() => {\r\n  //   const socket = io('http://localhost:3000');\r\n  // }, [])\r\n\r\n  useEffect(() => {\r\n    async function fetchAssignee() {\r\n      try {\r\n        const response = await axios.get(userapi);\r\n        setAssignee(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Assignee:', error);\r\n      }\r\n    }\r\n\r\n    fetchAssignee();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchTickettype() {\r\n      try {\r\n        const response = await axios.get(TicketTypeapi);\r\n        setTicketType(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Ticket Type:', error);\r\n      }\r\n    }\r\n\r\n    fetchTickettype();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    async function fetchProjecttype() {\r\n      try {\r\n        const response = await axios.get(ProjectTypeapi);\r\n        setProjectType(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching Project Type:', error);\r\n      }\r\n    }\r\n\r\n    fetchProjecttype();\r\n  }, []);\r\n\r\n // Modify handleInputChange function\r\nconst handleInputChange = (e) => {\r\n  const { name, value } = e.target || e;\r\n\r\n\r\n  if (name === 'assigneeEmail') {\r\n    const selectedAssignee = Assignee.find(assignee => assignee.email === value);\r\n   \r\n\r\n    const isSelfAssign = value.toLowerCase() === user.email.toLowerCase();\r\n   \r\n\r\n    const newDepartment = isSelfAssign ? selectedAssignee.departmentName : (selectedAssignee?.departmentName || '');\r\n   \r\n\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n      department: newDepartment,\r\n      status: isSelfAssign ? 'Self-Assigned' : 'Open',\r\n    }));\r\n  } else {\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: value,\r\n    }));\r\n  }\r\n};\r\n\r\n// ...\r\n\r\n// Modify useEffect function for handling assignee changes\r\nuseEffect(() => {\r\n  const selectedAssignee = Assignee.find((assignee) => assignee.email === formData.assigneeEmail);\r\n  const isSelfAssign = formData.assigneeEmail.toLowerCase() === user.email.toLowerCase();\r\n  const newDepartment = isSelfAssign ? selectedAssignee.departmentName : (selectedAssignee?.departmentName || '');\r\n\r\n  setFormData((prevData) => ({\r\n    ...prevData,\r\n    department: newDepartment,\r\n    status: isSelfAssign ? 'Self-Assigned' : 'Open',\r\n  }));\r\n}, [formData.assigneeEmail, Assignee, user]);\r\n\r\n// ...\r\n\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData(prevData => ({\r\n      ...prevData,\r\n      attachments: e.target.files\r\n    }));\r\n  };\r\n\r\n  const handleTicketSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setLoading(true);\r\n\r\n    const formattedParams = Object.entries(formData)\r\n      .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}`)\r\n      .join('&');\r\n\r\n    const formDataToSend = new FormData();\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n      if (key === 'attachments') {\r\n        if (value) {\r\n          for (let i = 0; i < value.length; i++) {\r\n            formDataToSend.append('attachments', value[i]);\r\n          }\r\n        }\r\n      } else {\r\n        formDataToSend.append(key, value);\r\n      }\r\n    });\r\n\r\n    try {\r\n      const res = await axios.post(`${Ticketapi}?${formattedParams}`, formDataToSend, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      });\r\n\r\n      console.log(res);\r\n      setMessage('Ticket added successfully!');\r\n      setLoading(false);\r\n\r\n       // Send notification using SignalR after successful ticket addition\r\n      //  if (hubConnection) {\r\n      //   hubConnection.invoke('SendTicketAssignmentNotification', formData.assigneeEmail, `New ticket added: ${formData.title}`);\r\n      // }\r\n       ClickToNotify();\r\n\r\n\r\n      setFormData({\r\n        email: user.email,\r\n        priority: 'low',\r\n        title: '',\r\n        department: '',\r\n        ticketType: '',\r\n        status: 'Open',\r\n        projectType: '',\r\n        dueDate: '',\r\n        description: '',\r\n        assigneeEmail: '',\r\n        attachments: null\r\n      });\r\n      navigate(`/Tickets/AddTicket/${res.data.userId}`);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage('Error adding ticket. Please try again.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className='d-flex justify-content-between'></div>\r\n\r\n      {message && (\r\n        <div className={`alert ${message.includes('successfully') ? 'alert-success' : 'alert-danger'}`} role=\"alert\">\r\n          {message}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={handleTicketSubmit}>\r\n        {/* ticketId */}\r\n        <div className=\"row mb-3\">\r\n\r\n        <label htmlFor=\"email\" className=\"col-sm-3 col-form-label text-end\">\r\n            Creator\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Enter your Email\"\r\n              required\r\n              value={user.email}\r\n              onChange={handleInputChange}\r\n              disabled\r\n            />\r\n         \r\n          </div>\r\n\r\n          {/* priority */}\r\n          <label htmlFor=\"assigneeEmail\" className=\"col-sm-3 col-form-label text-end\">\r\n            Assignee Email<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <Select\r\n              options={Assignee.map((Setas) => ({\r\n                label: Setas.email,\r\n                value: Setas.email,\r\n              }))}\r\n              value={{\r\n                label: formData.assigneeEmail,\r\n                value: formData.assigneeEmail,\r\n              }}\r\n              onChange={(selectedOption) =>\r\n                handleInputChange({\r\n                  target: { name: 'assigneeEmail', value: selectedOption.value },\r\n                })\r\n              }\r\n              isSearchable\r\n              placeholder=\"Select Assignee\"\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n          \r\n        </div>\r\n\r\n        {/* title */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"title\" className=\"col-sm-3 col-form-label text-end\">\r\n            Title<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"title\"\r\n              name=\"title\"\r\n              placeholder=\"Enter title\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          {/* department */}\r\n          <label htmlFor=\"priority\" className=\"col-sm-3 col-form-label text-end\">\r\n            Priority<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <select\r\n              className=\"form-select\"\r\n              id=\"priority\"\r\n              name=\"priority\"\r\n              placeholder=\"Select priority\"\r\n              required\r\n              onChange={handleInputChange}\r\n            >\r\n              <option defaultValue>Select Priority</option>\r\n              <option value=\"low\">Low</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"high\">High</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Ticket Type */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"ticketType\" className=\"col-sm-3 col-form-label text-end\">\r\n            Ticket Type<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <Select\r\n              options={ticketType.map((TT) => ({\r\n                label: TT.ticketType,\r\n                value: TT.ticketType,\r\n              }))}\r\n              value={{\r\n                label: formData.ticketType,\r\n                value: formData.ticketType,\r\n              }}\r\n              onChange={(selectedOption) =>\r\n                handleInputChange({\r\n                  target: { name: 'ticketType', value: selectedOption.value },\r\n                })\r\n              }\r\n              isSearchable\r\n              placeholder=\"Select Ticket Type\"\r\n            />\r\n          </div>\r\n          {/* status */}\r\n          <label htmlFor=\"status\" className=\"col-sm-3 col-form-label text-end\">\r\n            Status\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"status\"\r\n              name=\"status\"\r\n              value={formData.status}\r\n              required\r\n              onChange={handleInputChange}\r\n              readOnly\r\n              disabled\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n\r\n         {/* Project Type */}\r\n         <div className=\"row mb-3\">\r\n          <label htmlFor=\"projectType\" className=\"col-sm-3 col-form-label text-end\">\r\n            Project Type<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <Select\r\n              options={projectType.map((pt) => ({\r\n                label: pt.projectTypes,\r\n                value: pt.projectTypes,\r\n              }))}\r\n              value={{\r\n                label: formData.projectType,\r\n                value: formData.projectType,\r\n              }}\r\n              onChange={(selectedOption) =>\r\n                handleInputChange({\r\n                  target: { name: 'projectType', value: selectedOption.value },\r\n                })\r\n              }\r\n              isSearchable\r\n              placeholder=\"Select Project Type\"\r\n            />\r\n          </div>\r\n          {/* Due Date */}\r\n          <label htmlFor=\"dueDate\" className=\"col-sm-3 col-form-label text-end\">\r\n            Due Date<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"date\"\r\n              className=\"form-control\"\r\n              id=\"dueDate\"\r\n              name=\"dueDate\"\r\n              placeholder=\"Select Due Date\"\r\n              required\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Creator ID */}\r\n        <div className=\"row mb-3\">\r\n        <label htmlFor=\"ticketId\" className=\"col-sm-3 col-form-label text-end\">\r\n            Ticket ID:\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              id=\"ticketId\"\r\n              name=\"ticketId\"\r\n              placeholder=\"Ticket ID\"\r\n              required\r\n              onChange={handleInputChange}\r\n              disabled\r\n              value='0'\r\n            />\r\n          </div>\r\n\r\n          {/* Assigned To */}\r\n          <label htmlFor=\"department\" className=\"col-sm-3 col-form-label text-end\">\r\n            Department\r\n          </label>\r\n          <div className=\"col-sm-3\">\r\n            <input\r\n              className=\"form-control\"\r\n              id=\"department\"\r\n              name=\"department\"\r\n              value={formData.department || ''}\r\n              required\r\n              onChange={handleInputChange}\r\n              readOnly\r\n              disabled\r\n            />\r\n          </div>\r\n\r\n\r\n\r\n\r\n         \r\n        </div>\r\n       \r\n\r\n        {/* description */}\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"description\" className=\"col-sm-3 col-form-label text-end\">\r\n            Description<span className=\"text-danger\"> * </span>\r\n          </label>\r\n          <div className=\"col-sm-9\">\r\n            <textarea\r\n              className=\"form-control\"\r\n              id=\"description\"\r\n              name=\"description\"\r\n              placeholder=\"Enter description\"\r\n              rows=\"4\"\r\n              required\r\n              onChange={handleInputChange}\r\n            ></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <label htmlFor=\"attachments\" className=\"col-sm-3 col-form-label text-end\">\r\n            Attachments:\r\n          </label>\r\n          <div className=\"col-sm-9\">\r\n            <input\r\n              type=\"file\"\r\n              className=\"form-control\"\r\n              id=\"attachments\"\r\n              name=\"attachments\"\r\n              multiple\r\n              onChange={handleFileChange}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"row mb-3\">\r\n          <div className=\"col-sm-3\"></div>\r\n          <div className=\"col-sm-9 text-end\">\r\n            <button type=\"submit\" className=\"btn btn-primary\" disabled={loading} >\r\n              {loading ? <><Spinner animation=\"border\" size='sm' /> Adding Ticket...</> : \"Add Ticket\"}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTicket;\r\n"],"names":["AddTicket","navigate","useNavigate","user","useUser","loading","setLoading","useState","ticketType","setTicketType","projectType","setProjectType","Assignee","setAssignee","formData","setFormData","email","priority","title","department","status","dueDate","description","assigneeEmail","attachments","message","setMessage","useEffect","async","response","axios","get","process","data","error","console","fetchAssignee","fetchTickettype","fetchProjecttype","handleInputChange","e","name","value","target","selectedAssignee","find","assignee","isSelfAssign","toLowerCase","newDepartment","departmentName","prevData","_jsxs","className","children","_jsx","concat","includes","role","onSubmit","event","preventDefault","formattedParams","Object","entries","map","_ref","key","encodeURIComponent","join","formDataToSend","FormData","forEach","_ref2","i","length","append","res","post","headers","log","addNotification","duration","icon","greentick","native","onClick","window","location","userId","err","htmlFor","type","id","placeholder","required","onChange","disabled","Select","options","Setas","label","selectedOption","isSearchable","defaultValue","TT","readOnly","pt","projectTypes","rows","multiple","files","_Fragment","Spinner","animation","size"],"sourceRoot":""}
{"version":3,"file":"static/js/6680.77dde17a.chunk.js","mappings":"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","sources":["views/pages/Password/ChangePasswordForm.js","../node_modules/react-bootstrap/esm/AccordionContext.js","../node_modules/react-bootstrap/esm/AccordionCollapse.js","../node_modules/react-bootstrap/esm/AccordionItemContext.js","../node_modules/react-bootstrap/esm/AccordionBody.js","../node_modules/react-bootstrap/esm/AccordionButton.js","../node_modules/react-bootstrap/esm/AccordionHeader.js","../node_modules/react-bootstrap/esm/AccordionItem.js","../node_modules/react-bootstrap/esm/Accordion.js","views/pages/SettingsFol/PasswordAndSecurity.js","../node_modules/@coreui/icons/src/free/cil-lock-locked.ts","../node_modules/react-bootstrap/esm/createChainedFunction.js","../node_modules/react-bootstrap/esm/Collapse.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { cilLockLocked } from '@coreui/icons';\r\nimport { Col, Row, Form, InputGroup, Button, Alert, Card, CardBody, CardGroup, Container } from 'react-bootstrap'; // Import necessary components from react-bootstrap\r\nimport axios from 'axios';\r\nimport CIcon from '@coreui/icons-react';\r\nimport { useUser } from './../../../context/UserContext'; // Import useUser hook\r\nimport './../login/Login.css'; // Import CSS from the Login page\r\n\r\n\r\nconst ChangePasswordApi = process.env.REACT_APP_API_CHANGE_PASSWORD;\r\nconst theme = '#FF725E';\r\nconst ChangePassword = () => {\r\n  const { logout, user } = useUser(); // Destructure the logout function from the useUser hook\r\n\r\n  const [passwords, setPasswords] = useState({\r\n    currentPassword: '',\r\n    newPassword: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [passwordVisibility, setPasswordVisibility] = useState({\r\n    currentPassword: false,\r\n    newPassword: false,\r\n  });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [messages, setMessages] = useState({\r\n    success: '',\r\n    error: '',\r\n  });\r\n\r\n  // Handle password change input\r\n  const handlePasswordChange = (field, value) => {\r\n    setPasswords((prevPasswords) => ({ ...prevPasswords, [field]: value }));\r\n    setErrors((prevErrors) => ({ ...prevErrors, [field]: value.trim() ? '' : `${field.charAt(0).toUpperCase() + field.slice(1)} is required` }));\r\n\r\n    // Additional validation for newPassword\r\n    if (field === 'newPassword') {\r\n      const alphanumericRegex = /^(?=.*[a-zA-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]/;\r\n      setErrors((prevErrors) => ({\r\n        ...prevErrors,\r\n        newPassword: value.length < 8 ? 'New Password must be at least 8 characters long' : !alphanumericRegex.test(value)\r\n          ? 'Password must contain at least one letter, one number, and one special character'\r\n          : '',\r\n      }));\r\n    }\r\n\r\n    // Clear alerts when typing in currentPassword\r\n    if (field === 'currentPassword') {\r\n      setMessages({ success: '', error: '' });\r\n    }\r\n  };\r\n\r\n  // Toggle password visibility\r\n  const togglePasswordVisibility = (field) => {\r\n    setPasswordVisibility((prevVisibility) => ({ ...prevVisibility, [field]: !prevVisibility[field] }));\r\n  };\r\n\r\n\r\n const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    handleChangePassword();\r\n  };\r\n\r\n  // Validate passwords\r\n  const validatePasswords = () => {\r\n    const { currentPassword, newPassword } = passwords;\r\n    const newErrors = {};\r\n\r\n    ['currentPassword', 'newPassword'].forEach((field) => {\r\n      if (!passwords[field]) {\r\n        newErrors[field] = `${field.charAt(0).toUpperCase() + field.slice(1)} is required`;\r\n      }\r\n    });\r\n\r\n    if (newPassword.length < 8) {\r\n      newErrors.newPassword = 'New Password must be at least 8 characters long';\r\n    }\r\n\r\n    if (currentPassword === newPassword) {\r\n      newErrors.newPassword = 'New Password cannot be the same as the Current Password';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  // Handle change password button click\r\n  const handleChangePassword = async () => {\r\n    if (!validatePasswords()) {\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Make API call to change password\r\n      const response = await axios.put(`${ChangePasswordApi}/${user.userId}`, \r\n      \r\n      {\r\n        currentPassword: passwords.currentPassword,\r\n        newPassword: passwords.newPassword,\r\n      },{\r\n        headers:{\r\n          Authorization : `Bearer ${user?.token}`,\r\n        }\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        // Password change successful\r\n        setMessages({ success: 'Your password has been changed. Please login again.', error: '' });\r\n\r\n        // Logout after 3 seconds\r\n        setTimeout(() => {\r\n          logout();\r\n        }, 3000);\r\n      } else if (response.status === 400) {\r\n        // Incorrect old password\r\n        setMessages({ success: '', error: 'Enter Correct Old Password!' });\r\n      } else {\r\n        // Handle other status codes\r\n        setMessages({ success: '', error: 'Password change failed. Please try again.' });\r\n      }\r\n    } catch (error) {\r\n      // Network error or other issues\r\n      setMessages({ success: '', error: 'Enter Correct Old Password!' });\r\n    } finally {\r\n      // Always set loading to false after the request is completed\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    \r\n      <Container>\r\n        <Form onSubmit={handleSubmit}>\r\n          <h1>Password Reset</h1>\r\n          <p>Change your password</p>\r\n          {messages.success && <Alert variant=\"success\">{messages.success}</Alert>}\r\n          {messages.error && <Alert variant=\"danger\">{messages.error}</Alert>}\r\n          {['currentPassword', 'newPassword'].map((field) => (\r\n            <div key={field} className=\"mb-4\">\r\n              <InputGroup hasValidation>\r\n                <InputGroup.Text>\r\n                  <CIcon icon={cilLockLocked} />\r\n                </InputGroup.Text>\r\n                <Form.Control\r\n                  type={passwordVisibility[field] ? 'text' : 'password'}\r\n                  placeholder={field === 'currentPassword' ? 'Current Password' : 'New Password'}\r\n                  autoComplete={field === 'currentPassword' ? 'old-password' : 'new-password'}\r\n                  value={passwords[field]}\r\n                  onChange={(e) => handlePasswordChange(field, e.target.value)}\r\n                  isInvalid={!!errors[field]}\r\n                />\r\n                <InputGroup.Text onClick={() => togglePasswordVisibility(field)} className=\"hovericon\">\r\n                  {passwordVisibility[field] ? <i className=\"fa-solid fa-eye\"></i> : <i className=\"fa-solid fa-eye-slash\"></i>}\r\n                </InputGroup.Text>\r\n                <Form.Control.Feedback type=\"invalid\">{errors[field]}</Form.Control.Feedback>\r\n              </InputGroup>\r\n            </div>\r\n          ))}\r\n          <Row>\r\n            <Col xs={6} className='align-items-start'>\r\n              {/* Change Password Button */}\r\n              <Button type = 'submit' variant=\"primary\" className=\"px-4 \" style={{ backgroundColor: theme }} disabled={loading}>\r\n                {loading ? 'Changing Password...' : 'Change Password'}\r\n              </Button>\r\n            </Col>\r\n            <Col xs={6} className='text-end fs-5'>\r\n              {/* Login Password Button */}\r\n            \r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </Container>\r\n  \r\n  );\r\n};\r\n\r\nexport default ChangePassword;\r\n","\"use client\";\n\nimport * as React from 'react';\nexport function isAccordionItemSelected(activeEventKey, eventKey) {\n  return Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : activeEventKey === eventKey;\n}\nconst context = /*#__PURE__*/React.createContext({});\ncontext.displayName = 'AccordionContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Collapse from './Collapse';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/**\n * This component accepts all of [`Collapse`'s props](/docs/utilities/transitions#collapse-1).\n */\nconst AccordionCollapse = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  children,\n  eventKey,\n  ...props\n}, ref) => {\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-collapse');\n  return /*#__PURE__*/_jsx(Collapse, {\n    ref: ref,\n    in: isAccordionItemSelected(activeEventKey, eventKey),\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(Component, {\n      children: React.Children.only(children)\n    })\n  });\n});\nAccordionCollapse.displayName = 'AccordionCollapse';\nexport default AccordionCollapse;","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext({\n  eventKey: ''\n});\ncontext.displayName = 'AccordionItemContext';\nexport default context;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionBody = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-body');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  return /*#__PURE__*/_jsx(AccordionCollapse, {\n    eventKey: eventKey,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionBody.displayName = 'AccordionBody';\nexport default AccordionBody;","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext, { isAccordionItemSelected } from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useAccordionButton(eventKey, onClick) {\n  const {\n    activeEventKey,\n    onSelect,\n    alwaysOpen\n  } = useContext(AccordionContext);\n  return e => {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    let eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (alwaysOpen) {\n      if (Array.isArray(activeEventKey)) {\n        if (activeEventKey.includes(eventKey)) {\n          eventKeyPassed = activeEventKey.filter(k => k !== eventKey);\n        } else {\n          eventKeyPassed = [...activeEventKey, eventKey];\n        }\n      } else {\n        // activeEventKey is undefined.\n        eventKeyPassed = [eventKey];\n      }\n    }\n    onSelect == null ? void 0 : onSelect(eventKeyPassed, e);\n    onClick == null ? void 0 : onClick(e);\n  };\n}\nconst AccordionButton = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'button',\n  bsPrefix,\n  className,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n  const {\n    eventKey\n  } = useContext(AccordionItemContext);\n  const accordionOnClick = useAccordionButton(eventKey, onClick);\n  const {\n    activeEventKey\n  } = useContext(AccordionContext);\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    onClick: accordionOnClick,\n    ...props,\n    \"aria-expanded\": Array.isArray(activeEventKey) ? activeEventKey.includes(eventKey) : eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, !isAccordionItemSelected(activeEventKey, eventKey) && 'collapsed')\n  });\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionButton from './AccordionButton';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionHeader = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'h2',\n  bsPrefix,\n  className,\n  children,\n  onClick,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-header');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, bsPrefix),\n    children: /*#__PURE__*/_jsx(AccordionButton, {\n      onClick: onClick,\n      children: children\n    })\n  });\n});\nAccordionHeader.displayName = 'AccordionHeader';\nexport default AccordionHeader;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionItemContext from './AccordionItemContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst AccordionItem = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  eventKey,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-item');\n  const contextValue = useMemo(() => ({\n    eventKey\n  }), [eventKey]);\n  return /*#__PURE__*/_jsx(AccordionItemContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix)\n    })\n  });\n});\nAccordionItem.displayName = 'AccordionItem';\nexport default AccordionItem;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport AccordionBody from './AccordionBody';\nimport AccordionButton from './AccordionButton';\nimport AccordionCollapse from './AccordionCollapse';\nimport AccordionContext from './AccordionContext';\nimport AccordionHeader from './AccordionHeader';\nimport AccordionItem from './AccordionItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Accordion = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as: Component = 'div',\n    activeKey,\n    bsPrefix,\n    className,\n    onSelect,\n    flush,\n    alwaysOpen,\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'accordion');\n  const contextValue = useMemo(() => ({\n    activeEventKey: activeKey,\n    onSelect,\n    alwaysOpen\n  }), [activeKey, onSelect, alwaysOpen]);\n  return /*#__PURE__*/_jsx(AccordionContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...controlledProps,\n      className: classNames(className, prefix, flush && `${prefix}-flush`)\n    })\n  });\n});\nAccordion.displayName = 'Accordion';\nexport default Object.assign(Accordion, {\n  Button: AccordionButton,\n  Collapse: AccordionCollapse,\n  Item: AccordionItem,\n  Header: AccordionHeader,\n  Body: AccordionBody\n});","import React from 'react';\r\nimport Accordion from 'react-bootstrap/Accordion';\r\nimport { FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"; \r\nimport {faLock} from '@fortawesome/free-solid-svg-icons'\r\nimport ChangePasswordForm from '../Password/ChangePasswordForm';\r\n\r\nfunction AllCollapseExample() {\r\n  return (\r\n    <Accordion>\r\n      <Accordion.Item eventKey=\"0\">\r\n        <Accordion.Header><FontAwesomeIcon icon={faLock} className='me-2'/> Change Password</Accordion.Header>\r\n        <Accordion.Body>\r\n         <ChangePasswordForm/>\r\n        </Accordion.Body>\r\n      </Accordion.Item>\r\n      {/* <Accordion.Item eventKey=\"1\">\r\n        <Accordion.Header>Accordion Item #2</Accordion.Header>\r\n        <Accordion.Body>\r\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\r\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\r\n          minim veniam, quis nostrud exercitation ullamco laboris nisi ut\r\n          aliquip ex ea commodo consequat. Duis aute irure dolor in\r\n          reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\r\n          pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\r\n          culpa qui officia deserunt mollit anim id est laborum.\r\n        </Accordion.Body>\r\n      </Accordion.Item> */}\r\n    </Accordion>\r\n  );\r\n}\r\n\r\nexport default AllCollapseExample;","export var cilLockLocked = [\"512 512\", \"<path fill='var(--ci-primary-color, currentColor)' d='M384,200V144a128,128,0,0,0-256,0v56H88V328c0,92.635,75.364,168,168,168s168-75.365,168-168V200ZM160,144a96,96,0,0,1,192,0v56H160ZM392,328c0,74.99-61.01,136-136,136s-136-61.01-136-136V232H392Z' class='ci-primary'/>\"];\n","/**\n * Safe chained function\n *\n * Will only create a new function if needed,\n * otherwise will pass back existing functions or null.\n *\n * @param {function} functions to chain\n * @returns {function|null}\n */\nfunction createChainedFunction(...funcs) {\n  return funcs.filter(f => f != null).reduce((acc, f) => {\n    if (typeof f !== 'function') {\n      throw new Error('Invalid Argument Type, must only provide functions, undefined, or null.');\n    }\n    if (acc === null) return f;\n    return function chainedFunction(...args) {\n      // @ts-ignore\n      acc.apply(this, args);\n      // @ts-ignore\n      f.apply(this, args);\n    };\n  }, null);\n}\nexport default createChainedFunction;","import classNames from 'classnames';\nimport css from 'dom-helpers/css';\nimport React, { useMemo } from 'react';\nimport { ENTERED, ENTERING, EXITED, EXITING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport createChainedFunction from './createChainedFunction';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst MARGINS = {\n  height: ['marginTop', 'marginBottom'],\n  width: ['marginLeft', 'marginRight']\n};\nfunction getDefaultDimensionValue(dimension, elem) {\n  const offset = `offset${dimension[0].toUpperCase()}${dimension.slice(1)}`;\n  const value = elem[offset];\n  const margins = MARGINS[dimension];\n  return value +\n  // @ts-ignore\n  parseInt(css(elem, margins[0]), 10) +\n  // @ts-ignore\n  parseInt(css(elem, margins[1]), 10);\n}\nconst collapseStyles = {\n  [EXITED]: 'collapse',\n  [EXITING]: 'collapsing',\n  [ENTERING]: 'collapsing',\n  [ENTERED]: 'collapse show'\n};\nconst Collapse = /*#__PURE__*/React.forwardRef(({\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  className,\n  children,\n  dimension = 'height',\n  in: inProp = false,\n  timeout = 300,\n  mountOnEnter = false,\n  unmountOnExit = false,\n  appear = false,\n  getDimensionValue = getDefaultDimensionValue,\n  ...props\n}, ref) => {\n  /* Compute dimension */\n  const computedDimension = typeof dimension === 'function' ? dimension() : dimension;\n\n  /* -- Expanding -- */\n  const handleEnter = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = '0';\n  }, onEnter), [computedDimension, onEnter]);\n  const handleEntering = useMemo(() => createChainedFunction(elem => {\n    const scroll = `scroll${computedDimension[0].toUpperCase()}${computedDimension.slice(1)}`;\n    elem.style[computedDimension] = `${elem[scroll]}px`;\n  }, onEntering), [computedDimension, onEntering]);\n  const handleEntered = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onEntered), [computedDimension, onEntered]);\n\n  /* -- Collapsing -- */\n  const handleExit = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = `${getDimensionValue(computedDimension, elem)}px`;\n    triggerBrowserReflow(elem);\n  }, onExit), [onExit, getDimensionValue, computedDimension]);\n  const handleExiting = useMemo(() => createChainedFunction(elem => {\n    elem.style[computedDimension] = null;\n  }, onExiting), [computedDimension, onExiting]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    \"aria-expanded\": props.role ? inProp : null,\n    onEnter: handleEnter,\n    onEntering: handleEntering,\n    onEntered: handleEntered,\n    onExit: handleExit,\n    onExiting: handleExiting,\n    childRef: children.ref,\n    in: inProp,\n    timeout: timeout,\n    mountOnEnter: mountOnEnter,\n    unmountOnExit: unmountOnExit,\n    appear: appear,\n    children: (state, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames(className, children.props.className, collapseStyles[state], computedDimension === 'width' && 'collapse-horizontal')\n    })\n  });\n});\n\n// @ts-ignore\n\nexport default Collapse;"],"names":["ChangePassword","logout","user","useUser","passwords","setPasswords","useState","currentPassword","newPassword","errors","setErrors","passwordVisibility","setPasswordVisibility","loading","setLoading","messages","setMessages","success","error","handleChangePassword","async","validatePasswords","newErrors","forEach","field","concat","charAt","toUpperCase","slice","length","Object","keys","response","axios","put","process","userId","headers","Authorization","token","status","setTimeout","_jsx","Container","children","_jsxs","Form","onSubmit","e","preventDefault","Alert","variant","map","className","InputGroup","hasValidation","Text","CIcon","icon","cilLockLocked","Control","type","placeholder","autoComplete","value","onChange","handlePasswordChange","prevPasswords","prevErrors","trim","alphanumericRegex","test","target","isInvalid","onClick","prevVisibility","togglePasswordVisibility","Feedback","Row","Col","xs","Button","style","backgroundColor","disabled","isAccordionItemSelected","activeEventKey","eventKey","Array","isArray","includes","context","React","displayName","AccordionCollapse","_ref","ref","as","Component","bsPrefix","props","useContext","AccordionContext","useBootstrapPrefix","Collapse","in","classNames","only","AccordionBody","onEnter","onEntering","onEntered","onExit","onExiting","onExited","AccordionItemContext","AccordionButton","accordionOnClick","onSelect","alwaysOpen","eventKeyPassed","filter","k","useAccordionButton","AccordionHeader","AccordionItem","contextValue","useMemo","Provider","Accordion","activeKey","flush","controlledProps","useUncontrolled","prefix","assign","Item","Header","Body","FontAwesomeIcon","faLock","ChangePasswordForm","_len","arguments","funcs","_key","f","reduce","acc","Error","_len2","args","_key2","apply","this","MARGINS","height","width","getDefaultDimensionValue","dimension","elem","margins","parseInt","css","collapseStyles","EXITED","EXITING","ENTERING","ENTERED","inProp","timeout","mountOnEnter","unmountOnExit","appear","getDimensionValue","computedDimension","handleEnter","createChainedFunction","handleEntering","scroll","handleEntered","handleExit","triggerBrowserReflow","handleExiting","TransitionWrapper","addEndListener","transitionEndListener","role","childRef","state","innerProps"],"sourceRoot":""}